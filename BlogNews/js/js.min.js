var loaded = false;
var imagesrc = "";
function loadPopup(c) {
    imagesrc = c;
    if ($.fancybox == undefined) {
        loaded = true;
        var b = document.createElement("script");
        b.setAttribute("type", "text/javascript");
        b.setAttribute("src", "/site_assets/js/jquery.fancybox-1.3.4.pack.js");
        var a = document.createElement("link");
        a.setAttribute("rel", "stylesheet");
        a.setAttribute("type", "text/css");
        a.setAttribute("href", "/site_assets/css/fancybox.css");
        b.onreadystatechange = function () {
            if (this.readyState == "complete") {
                showPopupCallback()
            }
        };
        b.onload = showPopupCallback;
        document.getElementsByTagName("head")[0].appendChild(b);
        document.getElementsByTagName("head")[0].appendChild(a)
    } else {
        showPopupCallback()
    }
}
var showPopupCallback = function () {
    $.fancybox(imagesrc, {type: "image"})
};
$(document).ready(function () {
    var a = "ontouchstart" in document.documentElement;
    if (a) {
        $("#strSearchTerm").css({left: 0})
    } else {
        $("#MAIN_searchContainer").hover(function () {
            $("#strSearchTerm").stop(true, true).animate({left: 0}, 500)
        }, function () {
        })
    }
    updateViewPort()
});
$(window).resize(function () {
    updateViewPort()
});
function updateViewPort() {
    if ($(window).width() < 480) {
        $("#metaViewport").attr("content", "width=device-width, user-scalable=yes, minimum-scale=0.5, maximum-scale=3.0")
    } else {
        $("#metaViewport").attr("content", "user-scalable=yes, minimum-scale=0.5, maximum-scale=3.0")
    }
};var eventsliderdefault = 0;
var selectionEventNo = 0;
var selectionEventCount = 0;
var eventTimeout = 0;
var targetEventTop = 0;
jQuery(document).ready(function () {
    var h = $("#event-bar");
    if (eventsliderdefault > 0) {
        selectionEventNo = (eventsliderdefault - 1)
    }
    if (document.getElementById("event-bar")) {
        var b = $("#event-bar #event-bar-container");
        var g = $("#event-bar #event-bar-container .event-bar-item");
        var d = h.css("height").replace("px", "");
        selectionEventCount = g.length;
        b.css("height", d * selectionEventCount + "px");
        if (selectionEventCount > 1) {
            var e = $("#event-bar #event-bar-pagination");
            for (var c = 0; c < g.length; c++) {
                if (c == (eventsliderdefault - 1)) {
                    var f = $('<div class="eventbarpage selected" id="pag-' + c + '"></div>')
                } else {
                    var f = $('<div class="eventbarpage unselected" id="pag-' + c + '" style="cursor:pointer;"></div>')
                }
                f.click(function () {
                    gotopage($(this).attr("id").replace("pag-", ""))
                });
                e.append(f)
            }
            if (selectionEventNo > 0) {
                targetEventTop = selectionEventNo * d * -1
            }
            b.css("top", targetEventTop);
            e.css("right", e.css("right").replace("px", "") - (e.width() / 2) + "px");
            eventTimeout = setInterval("eventBarSlider()", 3500);
            h.hover(function () {
                stopeventtimer()
            }, function () {
                starteventtimer()
            })
        }
    }
});
function eventBarSlider() {
    var b = 0;
    var c = 0;
    var a = $("#event-bar").css("height").replace("px", "");
    selectionEventNo++;
    if (selectionEventNo == selectionEventCount) {
        selectionEventNo = 0
    }
    $("#event-bar #event-bar-pagination .eventbarpage").each(function (d) {
        if (c == selectionEventNo) {
            $(this).addClass("selected");
            $(this).removeClass("unselected");
            $(this).css("pointer", "default")
        } else {
            $(this).removeClass("selected");
            $(this).addClass("unselected");
            $(this).css("pointer", "cursor")
        }
        c++
    });
    if (selectionEventNo > 0) {
        b = selectionEventNo * a * -1
    }
    $("#event-bar #event-bar-container").stop(true, false);
    $("#event-bar #event-bar-container").animate({top: b}, 1000)
}
function stopeventtimer() {
    clearInterval(eventTimeout)
}
function starteventtimer() {
    clearInterval(eventTimeout);
    eventTimeout = setInterval("eventBarSlider()", 5000)
}
function gotopage(a) {
    clearInterval(eventTimeout);
    selectionEventNo = (a - 1);
    eventBarSlider();
    eventTimeout = setInterval("eventBarSlider()", 5000)
};(function (b) {
    var a = function () {
        var c = {}, n = {
            years: "datepickerViewYears",
            moths: "datepickerViewMonths",
            days: "datepickerViewDays"
        }, k = {
            wrapper: '<div class="datepicker"><div class="datepickerBorderT" /><div class="datepickerBorderB" /><div class="datepickerBorderL" /><div class="datepickerBorderR" /><div class="datepickerBorderTL" /><div class="datepickerBorderTR" /><div class="datepickerBorderBL" /><div class="datepickerBorderBR" /><div class="datepickerContainer"><table cellspacing="0" cellpadding="0"><tbody><tr></tr></tbody></table></div></div>',
            head: ["<td>", '<table cellspacing="0" cellpadding="0">', "<thead>", "<tr>", '<th class="datepickerGoPrev"><a href="#"><span><%=prev%></span></a></th>', '<th colspan="5" class="datepickerMonth"><a href="#"><span></span></a></th>', '<th class="datepickerGoNext"><a href="#"><span><%=next%></span></a></th>', "</tr>", '<tr class="datepickerDoW">', "<th><span><%=day1%></span></th>", "<th><span><%=day2%></span></th>", "<th><span><%=day3%></span></th>", "<th><span><%=day4%></span></th>", "<th><span><%=day5%></span></th>", "<th><span><%=day6%></span></th>", "<th><span><%=day7%></span></th>", "</tr>", "</thead>", "</table></td>"],
            space: '<td class="datepickerSpace"><div></div></td>',
            days: ['<tbody class="datepickerDays">', "<tr>", '<td class="<%=weeks[0].days[0].classname%>"><a href="#"><span><%=weeks[0].days[0].text%></span></a></td>', '<td class="<%=weeks[0].days[1].classname%>"><a href="#"><span><%=weeks[0].days[1].text%></span></a></td>', '<td class="<%=weeks[0].days[2].classname%>"><a href="#"><span><%=weeks[0].days[2].text%></span></a></td>', '<td class="<%=weeks[0].days[3].classname%>"><a href="#"><span><%=weeks[0].days[3].text%></span></a></td>', '<td class="<%=weeks[0].days[4].classname%>"><a href="#"><span><%=weeks[0].days[4].text%></span></a></td>', '<td class="<%=weeks[0].days[5].classname%>"><a href="#"><span><%=weeks[0].days[5].text%></span></a></td>', '<td class="<%=weeks[0].days[6].classname%>"><a href="#"><span><%=weeks[0].days[6].text%></span></a></td>', "</tr>", "<tr>", '<td class="<%=weeks[1].days[0].classname%>"><a href="#"><span><%=weeks[1].days[0].text%></span></a></td>', '<td class="<%=weeks[1].days[1].classname%>"><a href="#"><span><%=weeks[1].days[1].text%></span></a></td>', '<td class="<%=weeks[1].days[2].classname%>"><a href="#"><span><%=weeks[1].days[2].text%></span></a></td>', '<td class="<%=weeks[1].days[3].classname%>"><a href="#"><span><%=weeks[1].days[3].text%></span></a></td>', '<td class="<%=weeks[1].days[4].classname%>"><a href="#"><span><%=weeks[1].days[4].text%></span></a></td>', '<td class="<%=weeks[1].days[5].classname%>"><a href="#"><span><%=weeks[1].days[5].text%></span></a></td>', '<td class="<%=weeks[1].days[6].classname%>"><a href="#"><span><%=weeks[1].days[6].text%></span></a></td>', "</tr>", "<tr>", '<td class="<%=weeks[2].days[0].classname%>"><a href="#"><span><%=weeks[2].days[0].text%></span></a></td>', '<td class="<%=weeks[2].days[1].classname%>"><a href="#"><span><%=weeks[2].days[1].text%></span></a></td>', '<td class="<%=weeks[2].days[2].classname%>"><a href="#"><span><%=weeks[2].days[2].text%></span></a></td>', '<td class="<%=weeks[2].days[3].classname%>"><a href="#"><span><%=weeks[2].days[3].text%></span></a></td>', '<td class="<%=weeks[2].days[4].classname%>"><a href="#"><span><%=weeks[2].days[4].text%></span></a></td>', '<td class="<%=weeks[2].days[5].classname%>"><a href="#"><span><%=weeks[2].days[5].text%></span></a></td>', '<td class="<%=weeks[2].days[6].classname%>"><a href="#"><span><%=weeks[2].days[6].text%></span></a></td>', "</tr>", "<tr>", '<td class="<%=weeks[3].days[0].classname%>"><a href="#"><span><%=weeks[3].days[0].text%></span></a></td>', '<td class="<%=weeks[3].days[1].classname%>"><a href="#"><span><%=weeks[3].days[1].text%></span></a></td>', '<td class="<%=weeks[3].days[2].classname%>"><a href="#"><span><%=weeks[3].days[2].text%></span></a></td>', '<td class="<%=weeks[3].days[3].classname%>"><a href="#"><span><%=weeks[3].days[3].text%></span></a></td>', '<td class="<%=weeks[3].days[4].classname%>"><a href="#"><span><%=weeks[3].days[4].text%></span></a></td>', '<td class="<%=weeks[3].days[5].classname%>"><a href="#"><span><%=weeks[3].days[5].text%></span></a></td>', '<td class="<%=weeks[3].days[6].classname%>"><a href="#"><span><%=weeks[3].days[6].text%></span></a></td>', "</tr>", "<tr>", '<td class="<%=weeks[4].days[0].classname%>"><a href="#"><span><%=weeks[4].days[0].text%></span></a></td>', '<td class="<%=weeks[4].days[1].classname%>"><a href="#"><span><%=weeks[4].days[1].text%></span></a></td>', '<td class="<%=weeks[4].days[2].classname%>"><a href="#"><span><%=weeks[4].days[2].text%></span></a></td>', '<td class="<%=weeks[4].days[3].classname%>"><a href="#"><span><%=weeks[4].days[3].text%></span></a></td>', '<td class="<%=weeks[4].days[4].classname%>"><a href="#"><span><%=weeks[4].days[4].text%></span></a></td>', '<td class="<%=weeks[4].days[5].classname%>"><a href="#"><span><%=weeks[4].days[5].text%></span></a></td>', '<td class="<%=weeks[4].days[6].classname%>"><a href="#"><span><%=weeks[4].days[6].text%></span></a></td>', "</tr>", "<tr>", '<td class="<%=weeks[5].days[0].classname%>"><a href="#"><span><%=weeks[5].days[0].text%></span></a></td>', '<td class="<%=weeks[5].days[1].classname%>"><a href="#"><span><%=weeks[5].days[1].text%></span></a></td>', '<td class="<%=weeks[5].days[2].classname%>"><a href="#"><span><%=weeks[5].days[2].text%></span></a></td>', '<td class="<%=weeks[5].days[3].classname%>"><a href="#"><span><%=weeks[5].days[3].text%></span></a></td>', '<td class="<%=weeks[5].days[4].classname%>"><a href="#"><span><%=weeks[5].days[4].text%></span></a></td>', '<td class="<%=weeks[5].days[5].classname%>"><a href="#"><span><%=weeks[5].days[5].text%></span></a></td>', '<td class="<%=weeks[5].days[6].classname%>"><a href="#"><span><%=weeks[5].days[6].text%></span></a></td>', "</tr>", "</tbody>"],
            months: ['<tbody class="<%=className%>">', "<tr>", '<td colspan="2"><a href="#"><span><%=data[0]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[1]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[2]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[3]%></span></a></td>', "</tr>", "<tr>", '<td colspan="2"><a href="#"><span><%=data[4]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[5]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[6]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[7]%></span></a></td>', "</tr>", "<tr>", '<td colspan="2"><a href="#"><span><%=data[8]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[9]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[10]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[11]%></span></a></td>', "</tr>", "</tbody>"]
        }, g = {
            flat: false,
            starts: 1,
            prev: '<img src="/site_assets/images/arrow_left.png" alt="" />',
            next: '<img src="/site_assets/images/arrow_right.png" alt="" />',
            lastSel: false,
            mode: "single",
            view: "days",
            calendars: 1,
            format: "Y-m-d",
            position: "bottom",
            returnPagClicks: "true",
            eventName: "click",
            onRender: function () {
                return {}
            },
            onSelect: function () {
                return true
            },
            onChange: function () {
                return true
            },
            onShow: function () {
                return true
            },
            onBeforeShow: function () {
                return true
            },
            onHide: function () {
                return true
            },
            locale: {
                days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
                daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
                daysMin: ["S", "M", "T", "W", "T", "F", "S", "S"],
                months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                weekMin: "wk"
            }
        }, p = function (r) {
            var u = b(r).data("datepicker");
            var y = b(r);
            var s = Math.floor(u.calendars / 2), G, I, z, H, E = 0, C, v, t, w, x, A;
            y.find("td>table tbody").remove();
            for (var F = 0; F < u.calendars; F++) {
                G = new Date(u.current);
                G.addMonths(-s + F);
                A = y.find("table").eq(F + 1);
                switch (A[0].className) {
                    case"datepickerViewDays":
                        z = q(G, "B, Y");
                        break;
                    case"datepickerViewMonths":
                        z = G.getFullYear();
                        break;
                    case"datepickerViewYears":
                        z = (G.getFullYear() - 6) + " - " + (G.getFullYear() + 5);
                        break
                }
                A.find("thead tr:first th:eq(1) span").text(z);
                z = G.getFullYear() - 6;
                I = {data: [], className: "datepickerYears"};
                for (var D = 0; D < 12; D++) {
                    I.data.push(z + D)
                }
                x = tmpl(k.months.join(""), I);
                G.setDate(1);
                I = {weeks: [], test: 10};
                H = G.getMonth();
                var z = (G.getDay() - u.starts) % 7;
                G.addDays(-(z + (z < 0 ? 7 : 0)));
                C = -1;
                E = 0;
                while (E < 42) {
                    t = parseInt(E / 7, 10);
                    w = E % 7;
                    if (!I.weeks[t]) {
                        C = G.getWeekNumber();
                        I.weeks[t] = {week: C, days: []}
                    }
                    I.weeks[t].days[w] = {text: G.getDate(), classname: []};
                    if (H != G.getMonth()) {
                        I.weeks[t].days[w].classname.push("datepickerNotInMonth")
                    }
                    if (G.getDay() == 0) {
                        I.weeks[t].days[w].classname.push("datepickerSunday")
                    }
                    if (G.getDay() == 6) {
                        I.weeks[t].days[w].classname.push("datepickerSaturday")
                    }
                    var B = u.onRender(G);
                    var J = G.valueOf();
                    if (B.selected || u.date == J || b.inArray(J, u.date) > -1 || (u.mode == "range" && J >= u.date[0] && J <= u.date[1])) {
                        I.weeks[t].days[w].classname.push("datepickerSelected")
                    }
                    chkDate = new Date(u.selecteddate.toString());
                    if (chkDate.getDate() == G.getDate() && chkDate.getMonth() == G.getMonth() && chkDate.getFullYear() == G.getFullYear()) {
                        I.weeks[t].days[w].classname.push("datepickerCurrent")
                    }
                    if (B.disabled) {
                        I.weeks[t].days[w].classname.push("datepickerDisabled")
                    }
                    if (B.className) {
                        I.weeks[t].days[w].classname.push(B.className)
                    }
                    I.weeks[t].days[w].classname = I.weeks[t].days[w].classname.join(" ");
                    E++;
                    G.addDays(1)
                }
                x = tmpl(k.days.join(""), I) + x;
                I = {data: u.locale.monthsShort, className: "datepickerMonths"};
                x = tmpl(k.months.join(""), I) + x;
                A.append(x)
            }
        }, e = function (s, C) {
            if (s.constructor == Date) {
                return new Date(s)
            }
            var w = s.split(/\W+/);
            var t = C.split(/\W+/), A, u, B, z, v, r = new Date();
            for (var x = 0; x < w.length; x++) {
                switch (t[x]) {
                    case"d":
                    case"e":
                        A = parseInt(w[x], 10);
                        break;
                    case"m":
                        u = parseInt(w[x], 10) - 1;
                        break;
                    case"Y":
                    case"y":
                        B = parseInt(w[x], 10);
                        B += B > 100 ? 0 : (B < 29 ? 2000 : 1900);
                        break;
                    case"H":
                    case"I":
                    case"k":
                    case"l":
                        z = parseInt(w[x], 10);
                        break;
                    case"P":
                    case"p":
                        if (/pm/i.test(w[x]) && z < 12) {
                            z += 12
                        } else {
                            if (/am/i.test(w[x]) && z >= 12) {
                                z -= 12
                            }
                        }
                        break;
                    case"M":
                        v = parseInt(w[x], 10);
                        break
                }
            }
            return new Date(B === undefined ? r.getFullYear() : B, u === undefined ? r.getMonth() : u, A === undefined ? r.getDate() : A, z === undefined ? r.getHours() : z, v === undefined ? r.getMinutes() : v, 0)
        }, q = function (t, F) {
            var u = t.getMonth();
            var D = t.getDate();
            var E = t.getFullYear();
            var G = t.getWeekNumber();
            var H = t.getDay();
            var K = {};
            var I = t.getHours();
            var v = (I >= 12);
            var B = (v) ? (I - 12) : I;
            var J = t.getDayOfYear();
            if (B == 0) {
                B = 12
            }
            var z = t.getMinutes();
            var C = t.getSeconds();
            var x = F.split(""), r;
            for (var A = 0; A < x.length; A++) {
                r = x[A];
                switch (x[A]) {
                    case"a":
                        r = t.getDayName();
                        break;
                    case"A":
                        r = t.getDayName(true);
                        break;
                    case"b":
                        r = t.getMonthName();
                        break;
                    case"B":
                        r = t.getMonthName(true);
                        break;
                    case"C":
                        r = 1 + Math.floor(E / 100);
                        break;
                    case"d":
                        r = (D < 10) ? ("0" + D) : D;
                        break;
                    case"e":
                        r = D;
                        break;
                    case"H":
                        r = (I < 10) ? ("0" + I) : I;
                        break;
                    case"I":
                        r = (B < 10) ? ("0" + B) : B;
                        break;
                    case"j":
                        r = (J < 100) ? ((J < 10) ? ("00" + J) : ("0" + J)) : J;
                        break;
                    case"k":
                        r = I;
                        break;
                    case"l":
                        r = B;
                        break;
                    case"m":
                        r = (u < 9) ? ("0" + (1 + u)) : (1 + u);
                        break;
                    case"M":
                        r = (z < 10) ? ("0" + z) : z;
                        break;
                    case"p":
                    case"P":
                        r = v ? "PM" : "AM";
                        break;
                    case"s":
                        r = Math.floor(t.getTime() / 1000);
                        break;
                    case"S":
                        r = (C < 10) ? ("0" + C) : C;
                        break;
                    case"u":
                        r = H + 1;
                        break;
                    case"w":
                        r = H;
                        break;
                    case"y":
                        r = ("" + E).substr(2, 2);
                        break;
                    case"Y":
                        r = E;
                        break
                }
                x[A] = r
            }
            return x.join("")
        }, f = function (r) {
            if (Date.prototype.tempDate) {
                return
            }
            Date.prototype.tempDate = null;
            Date.prototype.months = r.months;
            Date.prototype.monthsShort = r.monthsShort;
            Date.prototype.days = r.days;
            Date.prototype.daysShort = r.daysShort;
            Date.prototype.getMonthName = function (s) {
                return this[s ? "months" : "monthsShort"][this.getMonth()]
            };
            Date.prototype.getDayName = function (s) {
                return this[s ? "days" : "daysShort"][this.getDay()]
            };
            Date.prototype.addDays = function (s) {
                this.setDate(this.getDate() + s);
                this.tempDate = this.getDate()
            };
            Date.prototype.addMonths = function (s) {
                if (this.tempDate == null) {
                    this.tempDate = this.getDate()
                }
                this.setDate(1);
                this.setMonth(this.getMonth() + s);
                this.setDate(Math.min(this.tempDate, this.getMaxDays()))
            };
            Date.prototype.addYears = function (s) {
                if (this.tempDate == null) {
                    this.tempDate = this.getDate()
                }
                this.setDate(1);
                this.setFullYear(this.getFullYear() + s);
                this.setDate(Math.min(this.tempDate, this.getMaxDays()))
            };
            Date.prototype.getMaxDays = function () {
                var t = new Date(Date.parse(this)), u = 28, s;
                s = t.getMonth();
                u = 28;
                while (t.getMonth() == s) {
                    u++;
                    t.setDate(u)
                }
                return u - 1
            };
            Date.prototype.getFirstDay = function () {
                var s = new Date(Date.parse(this));
                s.setDate(1);
                return s.getDay()
            };
            Date.prototype.getWeekNumber = function () {
                var s = new Date(this);
                s.setDate(s.getDate() - (s.getDay() + 6) % 7 + 3);
                var t = s.valueOf();
                s.setMonth(0);
                s.setDate(4);
                return Math.round((t - s.valueOf()) / (604800000)) + 1
            };
            Date.prototype.getDayOfYear = function () {
                var s = new Date(this.getFullYear(), this.getMonth(), this.getDate(), 0, 0, 0);
                var u = new Date(this.getFullYear(), 0, 0, 0, 0, 0);
                var t = s - u;
                return Math.floor(t / 24 * 60 * 60 * 1000)
            }
        }, i = function (v) {
            var s = b(v).data("datepicker");
            var x = b("#" + s.id);
            if (!s.extraHeight) {
                var u = b(v).find("div");
                s.extraHeight = u.get(0).offsetHeight + u.get(1).offsetHeight;
                s.extraWidth = u.get(2).offsetWidth + u.get(3).offsetWidth
            }
            var w = x.find("table:first").get(0);
            var t = w.offsetWidth;
            var r = w.offsetHeight;
            x.css({
                width: t + s.extraWidth + "px",
                height: r + s.extraHeight + "px"
            }).find("div.datepickerContainer").css({height: r + "px"})
        }, o = function (y) {
            if (b(y.target).is("img")) {
                y.target = y.target.parentNode
            }
            if (b(y.target).is("span")) {
                y.target = y.target.parentNode
            }
            var t = b(y.target);
            if (t.is("a")) {
                y.target.blur();
                if (t.hasClass("datepickerDisabled")) {
                    return false
                }
                var A = b(this).data("datepicker");
                var x = t.parent();
                var s = x.parent().parent().parent();
                var z = b("table", this).index(s.get(0)) - 1;
                var w = new Date(A.current);
                var v = false;
                var r = false;
                if (x.is("th")) {
                    if (x.hasClass("datepickerWeek") && A.mode == "range" && !x.next().hasClass("datepickerDisabled")) {
                        var u = parseInt(x.next().text(), 10);
                        w.addMonths(z - Math.floor(A.calendars / 2));
                        if (x.next().hasClass("datepickerNotInMonth")) {
                            w.addMonths(u > 15 ? -1 : 1)
                        }
                        w.setDate(u);
                        A.date[0] = (w.setHours(0, 0, 0, 0)).valueOf();
                        w.setHours(23, 59, 59, 0);
                        w.addDays(6);
                        A.date[1] = w.valueOf();
                        r = true;
                        v = true;
                        A.lastSel = false
                    } else {
                        if (x.parent().parent().is("thead")) {
                            if (!x.hasClass("datepickerMonth")) {
                                switch (s.get(0).className) {
                                    case"datepickerViewDays":
                                        A.current.addMonths(x.hasClass("datepickerGoPrev") ? -1 : 1);
                                        break;
                                    case"datepickerViewMonths":
                                        A.current.addYears(x.hasClass("datepickerGoPrev") ? -1 : 1);
                                        break;
                                    case"datepickerViewYears":
                                        A.current.addYears(x.hasClass("datepickerGoPrev") ? -12 : 12);
                                        break
                                }
                                A.selecteddate = new Date(A.current);
                                A.selecteddate.setDate(1);
                                if (A.returnPagClicks == "true") {
                                    A.onSelect.apply(this, new Array(A.selecteddate))
                                }
                                r = true
                            }
                        }
                    }
                } else {
                    if (x.is("td") && !x.hasClass("datepickerDisabled")) {
                        switch (s.get(0).className) {
                            case"datepickerViewMonths":
                                A.current.setMonth(s.find("tbody.datepickerMonths td").index(x));
                                A.current.setFullYear(parseInt(s.find("thead th.datepickerMonth span").text(), 10));
                                A.current.addMonths(Math.floor(A.calendars / 2) - z);
                                s.get(0).className = "datepickerViewDays";
                                break;
                            case"datepickerViewYears":
                                A.current.setFullYear(parseInt(t.text(), 10));
                                s.get(0).className = "datepickerViewMonths";
                                break;
                            default:
                                var u = parseInt(t.text(), 10);
                                w.addMonths(z - Math.floor(A.calendars / 2));
                                if (x.hasClass("datepickerNotInMonth")) {
                                    w.addMonths(u > 15 ? -1 : 1)
                                }
                                w.setDate(u);
                                switch (A.mode) {
                                    case"multiple":
                                        strSelectedDate = A.locale.daysShort[w.getDay()];
                                        strSelectedDate = strSelectedDate + " " + A.locale.monthsShort[w.getMonth()];
                                        strSelectedDate = strSelectedDate + " " + fillDate(w.getDate());
                                        strSelectedDate = strSelectedDate + " " + w.getFullYear();
                                        strSelectedDate = strSelectedDate + " 00:00:00";
                                        A.selecteddate = strSelectedDate;
                                        A.onSelect.apply(this, new Array(A.selecteddate));
                                        break;
                                    case"range":
                                        if (!A.lastSel) {
                                            A.date[0] = (w.setHours(0, 0, 0, 0)).valueOf()
                                        }
                                        u = (w.setHours(23, 59, 59, 0)).valueOf();
                                        if (u < A.date[0]) {
                                            A.date[1] = A.date[0] + 86399000;
                                            A.date[0] = u - 86399000
                                        } else {
                                            A.date[1] = u
                                        }
                                        A.lastSel = !A.lastSel;
                                        break;
                                    default:
                                        A.date = w.valueOf();
                                        break
                                }
                                break
                        }
                        r = true;
                        v = true
                    }
                }
                if (r) {
                    p(this)
                }
                if (v) {
                    A.onChange.apply(this, j(A))
                }
            }
            return false
        }, j = function (r) {
            var s;
            if (r.mode == "single") {
                s = new Date(r.date);
                return [q(s, r.format), s, r.el]
            } else {
                s = [[], [], r.el];
                b.each(r.date, function (u, v) {
                    var t = new Date(v);
                    s[0].push(q(t, r.format));
                    s[1].push(t)
                });
                return s
            }
        }, d = function () {
            var r = document.compatMode == "CSS1Compat";
            return {
                l: window.pageXOffset || (r ? document.documentElement.scrollLeft : document.body.scrollLeft),
                t: window.pageYOffset || (r ? document.documentElement.scrollTop : document.body.scrollTop),
                w: window.innerWidth || (r ? document.documentElement.clientWidth : document.body.clientWidth),
                h: window.innerHeight || (r ? document.documentElement.clientHeight : document.body.clientHeight)
            }
        }, l = function (t, s, r) {
            if (t == s) {
                return true
            }
            if (t.contains) {
                return t.contains(s)
            }
            if (t.compareDocumentPosition) {
                return !!(t.compareDocumentPosition(s) & 16)
            }
            var u = s.parentNode;
            while (u && u != r) {
                if (u == t) {
                    return true
                }
                u = u.parentNode
            }
            return false
        }, m = function (w) {
            var r = b("#" + b(this).data("datepickerId"));
            if (!r.is(":visible")) {
                var x = r.get(0);
                p(x);
                var z = r.data("datepicker");
                z.onBeforeShow.apply(this, [r.get(0)]);
                var u = b(this).offset();
                var y = d();
                var v = u.top;
                var s = u.left;
                var t = b.curCSS(x, "display");
                r.css({visibility: "hidden", display: "block"});
                i(x);
                switch (z.position) {
                    case"top":
                        v -= x.offsetHeight;
                        break;
                    case"left":
                        s -= x.offsetWidth;
                        break;
                    case"right":
                        s += this.offsetWidth;
                        break;
                    case"bottom":
                        v += this.offsetHeight;
                        break
                }
                if (v + x.offsetHeight > y.t + y.h) {
                    v = u.top - x.offsetHeight
                }
                if (v < y.t) {
                    v = u.top + this.offsetHeight + x.offsetHeight
                }
                if (s + x.offsetWidth > y.l + y.w) {
                    s = u.left - x.offsetWidth
                }
                if (s < y.l) {
                    s = u.left + this.offsetWidth
                }
                r.css({visibility: "visible", display: "block", top: v + "px", left: s + "px"});
                if (z.onShow.apply(this, [r.get(0)]) != false) {
                    r.show()
                }
                b(document).bind("mousedown", {cal: r, trigger: this}, h)
            }
            return false
        }, h = function (r) {
            if (r.target != r.data.trigger && !l(r.data.cal.get(0), r.target, r.data.cal.get(0))) {
                if (r.data.cal.data("datepicker").onHide.apply(this, [r.data.cal.get(0)]) != false) {
                    r.data.cal.hide()
                }
                b(document).unbind("mousedown", h)
            }
        };
        return {
            init: function (r) {
                r = b.extend({}, g, r || {});
                f(r.locale);
                r.calendars = Math.max(1, parseInt(r.calendars, 10) || 1);
                r.mode = /single|multiple|range/.test(r.mode) ? r.mode : "single";
                return this.each(function () {
                    if (!b(this).data("datepicker")) {
                        r.el = this;
                        if (r.date.constructor == String) {
                            r.date = e(r.date, r.format);
                            r.date.setHours(0, 0, 0, 0)
                        }
                        if (r.mode != "single") {
                            if (r.date.constructor != Array) {
                                r.date = [r.date.valueOf()];
                                if (r.mode == "range") {
                                    r.date.push(((new Date(r.date[0])).setHours(23, 59, 59, 0)).valueOf())
                                }
                            } else {
                                for (var u = 0; u < r.date.length; u++) {
                                    r.date[u] = (e(r.date[u], r.format).setHours(0, 0, 0, 0)).valueOf()
                                }
                                if (r.mode == "range") {
                                    r.date[1] = ((new Date(r.date[1])).setHours(23, 59, 59, 0)).valueOf()
                                }
                            }
                        } else {
                            r.date = r.date.valueOf()
                        }
                        if (!r.current) {
                            r.current = new Date()
                        } else {
                            r.current = e(r.current, r.format)
                        }
                        r.current.setHours(0, 0, 0, 0);
                        r.selecteddate = new Date(r.current);
                        r.current.setDate(1);
                        var w = "datepicker_" + parseInt(Math.random() * 1000), t;
                        r.id = w;
                        b(this).data("datepickerId", r.id);
                        var v = b(k.wrapper).attr("id", w).bind("click", o).data("datepicker", r);
                        if (r.className) {
                            v.addClass(r.className)
                        }
                        var s = "";
                        for (var u = 0; u < r.calendars; u++) {
                            t = r.starts;
                            if (u > 0) {
                                s += k.space
                            }
                            s += tmpl(k.head.join(""), {
                                prev: r.prev,
                                next: r.next,
                                day1: r.locale.daysMin[(t++) % 7],
                                day2: r.locale.daysMin[(t++) % 7],
                                day3: r.locale.daysMin[(t++) % 7],
                                day4: r.locale.daysMin[(t++) % 7],
                                day5: r.locale.daysMin[(t++) % 7],
                                day6: r.locale.daysMin[(t++) % 7],
                                day7: r.locale.daysMin[(t++) % 7]
                            })
                        }
                        v.find("tr:first").append(s).find("table").addClass(n[r.view]);
                        p(v.get(0));
                        if (r.flat) {
                            v.appendTo(this).show().css("position", "relative");
                            i(v.get(0))
                        } else {
                            v.appendTo(document.body);
                            b(this).bind(r.eventName, m)
                        }
                    }
                })
            }, showPicker: function () {
                return this.each(function () {
                    if (b(this).data("datepickerId")) {
                        m.apply(this)
                    }
                })
            }, hidePicker: function () {
                return this.each(function () {
                    if (b(this).data("datepickerId")) {
                        b("#" + b(this).data("datepickerId")).hide()
                    }
                })
            }, setDate: function (r, s) {
                return this.each(function () {
                    if (b(this).data("datepickerId")) {
                        var v = b("#" + b(this).data("datepickerId"));
                        var t = v.data("datepicker");
                        t.date = r;
                        if (t.date.constructor == String) {
                            t.date = e(t.date, t.format);
                            t.date.setHours(0, 0, 0, 0)
                        }
                        if (t.mode != "single") {
                            if (t.date.constructor != Array) {
                                t.date = [t.date.valueOf()];
                                if (t.mode == "range") {
                                    t.date.push(((new Date(t.date[0])).setHours(23, 59, 59, 0)).valueOf())
                                }
                            } else {
                                for (var u = 0; u < t.date.length; u++) {
                                    t.date[u] = (e(t.date[u], t.format).setHours(0, 0, 0, 0)).valueOf()
                                }
                                if (t.mode == "range") {
                                    t.date[1] = ((new Date(t.date[1])).setHours(23, 59, 59, 0)).valueOf()
                                }
                            }
                        } else {
                            t.date = t.date.valueOf()
                        }
                        if (s) {
                            t.current = new Date(t.mode != "single" ? t.date[0] : t.date)
                        }
                        p(v.get(0))
                    }
                })
            }, getDate: function (r) {
                if (this.size() > 0) {
                    return j(b("#" + b(this).data("datepickerId")).data("datepicker"))[r ? 0 : 1]
                }
            }, clear: function () {
                return this.each(function () {
                    if (b(this).data("datepickerId")) {
                        var s = b("#" + b(this).data("datepickerId"));
                        var r = s.data("datepicker");
                        if (r.mode != "single") {
                            r.date = [];
                            p(s.get(0))
                        }
                    }
                })
            }, fixLayout: function () {
                return this.each(function () {
                    if (b(this).data("datepickerId")) {
                        var s = b("#" + b(this).data("datepickerId"));
                        var r = s.data("datepicker");
                        if (r.flat) {
                            i(s.get(0))
                        }
                    }
                })
            }
        }
    }();
    b.fn.extend({
        DatePicker: a.init,
        DatePickerHide: a.hidePicker,
        DatePickerShow: a.showPicker,
        DatePickerSetDate: a.setDate,
        DatePickerGetDate: a.getDate,
        DatePickerClear: a.clear,
        DatePickerLayout: a.fixLayout
    })
})(jQuery);
(function () {
    var b = {};
    this.tmpl = function a(e, d) {
        var c = !/\W/.test(e) ? b[e] = b[e] || a(document.getElementById(e).innerHTML) : new Function("obj", "var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('" + e.replace(/[\r\t\n]/g, " ").split("<%").join("\t").replace(/((^|%>)[^\t]*)'/g, "$1\r").replace(/\t=(.*?)%>/g, "',$1,'").split("\t").join("');").split("%>").join("p.push('").split("\r").join("\\'") + "');}return p.join('');");
        return d ? c(d) : c
    }
})();
function changeFilter(a) {
    DateFilterType = a;
    $("#filter-type").children().removeClass("selected");
    $("#filter-type-" + a).addClass("selected");
    updateEvents()
}
function changePage(a) {
    Page = a;
    updateEvents()
}
function showPDF() {
    var b = [];
    $(".category-checkbox input:checked").each(function () {
        b.push(this.value)
    });
    var a = [];
    $(".subcategory-checkbox input:checked").each(function () {
        a.push(this.value)
    });
    if (Page == "") {
        Page = 1
    }
    window.open("/" + SectionName + "EventFeed.pdf?SectionID=" + SectionID + "&Page=" + Page + "&DateFilterType=" + DateFilterType + "&SelectedDay=" + getFullDate(SelectedDay) + "&Categories=" + b.toString() + "&SubCategories=" + a.toString(), "_blank")
}
function addDays(a, b) {
    return new Date(a.getTime() + b * 24 * 60 * 60 * 1000)
}
function fillDate(a) {
    if (a < 10) {
        return "0" + a
    } else {
        return a
    }
}
function getFullDate(a) {
    var c = a;
    var b = "";
    if (typeof c != "object") {
        c = new Date(c)
    }
    b = c.getFullYear();
    b = b + "-" + fillDate(c.getMonth() + 1);
    b = b + "-" + fillDate(c.getDate());
    b = b + " 00:00:00";
    return b
}
function updateEvents(g) {
    IE7 = (navigator.appVersion.indexOf("MSIE 7.") == -1) ? false : true;
    IE8 = (navigator.appVersion.indexOf("MSIE 8.") == -1) ? false : true;
    if (!IE7 & !IE8) {
        $("#eventlist").css("opacity", "0.4")
    }
    $("#eventlist").append('<div id="event-loader" style="display:block; position: absolute; background: url(\'/site_assets/images/event-loading.gif\') center center no-repeat; top: 0; left: 0; min-height: 32px;"></div>');
    $("#event-loader").height($("#event-loader").parent().height());
    $("#event-loader").width($("#event-loader").parent().width());
    if (!IE7 & !IE8) {
        $("#categorylist").css("opacity", "0.4")
    }
    $("#categorylist").append('<div id="categorylist-loader" style="display:block; position: absolute; background: url(\'/site_assets/images/event-loading.gif\') center center no-repeat; top: 0; left: 0; min-height: 32px;"></div>');
    $("#categorylist-loader").height($("#categorylist-loader").parent().height());
    $("#categorylist-loader").width($("#categorylist-loader").parent().width());
    var l = [];
    $(".section-checkbox input:checked").each(function () {
        l.push(this.value)
    });
    var n = new Array();
    var k = document.getElementsByName("sectionslist");
    for (var j = 0; j < k.length; j++) {
        n.push(k[j].value)
    }
    if (l.length < 1) {
        l = 0
    }
    var m = document.getElementById("intEventsCategoryId").value;
    var f = [];
    $(".category-checkbox input:checked").each(function () {
        f.push(this.value)
    });
    var c = new Array();
    var e = document.getElementsByName("categorylist");
    for (var j = 0; j < e.length; j++) {
        c.push(e[j].value)
    }
    var a = [];
    $(".subcategory-checkbox input:checked").each(function () {
        a.push(this.value)
    });
    var d = new Array();
    var b = document.getElementsByName("subcategorylist");
    for (var j = 0; j < b.length; j++) {
        d.push(b[j].value)
    }
    var h = getFullDate(SelectedDay);
    if (g == true) {
        $.ajax({
            url: "/eventlist_events.cfm",
            type: "GET",
            cache: "false",
            data: ({
                strShortcutUrl: strShortcutUrl,
                SectionID: l.toString(),
                Page: Page,
                DateFilterType: DateFilterType,
                SelectedDay: h,
                Categories: f.toString(),
                SubCategories: a.toString(),
                intEventsCategoryId: m,
                ExistingCategoryList: c.toString(),
                ExistingSubCategoryList: d.toString()
            }),
            success: function (i) {
                IE7 = (navigator.appVersion.indexOf("MSIE 7.") == -1) ? false : true;
                IE8 = (navigator.appVersion.indexOf("MSIE 8.") == -1) ? false : true;
                $("#eventlist").html(i);
                if (!IE7 & !IE8) {
                    $("#eventlist").css("opacity", "1")
                }
                $("#event-loader").css("display", "none")
            }
        });
        $.ajax({
            url: "/eventlist_categories.cfm",
            type: "GET",
            cache: "false",
            data: ({
                strShortcutUrl: strShortcutUrl,
                SectionID: l.toString(),
                Page: Page,
                DateFilterType: DateFilterType,
                SelectedDay: h,
                Categories: f.toString(),
                SubCategories: a.toString(),
                intEventsCategoryId: m,
                ExistingCategoryList: c.toString(),
                ExistingSubCategoryList: d.toString()
            }),
            success: function (i) {
                IE7 = (navigator.appVersion.indexOf("MSIE 7.") == -1) ? false : true;
                $("#categorylist").html(i);
                if (!IE7 & !IE8) {
                    $("#categorylist").css("opacity", "1")
                }
                $("#categorylist-loader").css("display", "none")
            }
        });
        $.ajax({
            url: "/cal.cfm",
            type: "GET",
            cache: "false",
            data: ({
                strShortcutUrl: strShortcutUrl,
                SectionID: l.toString(),
                Page: Page,
                DateFilterType: DateFilterType,
                SelectedDay: h,
                Categories: f.toString(),
                SubCategories: a.toString(),
                intEventsCategoryId: m,
                ExistingCategoryList: c.toString(),
                ExistingSubCategoryList: d.toString()
            }),
            success: function (i) {
                IE7 = (navigator.appVersion.indexOf("MSIE 7.") == -1) ? false : true;
                $("#calHere").html(i);
                if (!IE7 & !IE8) {
                    $("#categorylist").css("opacity", "1")
                }
                $("#categorylist-loader").css("display", "none")
            }
        })
    } else {
        $.ajax({
            url: "/eventlist_events.cfm",
            type: "GET",
            cache: "false",
            data: ({
                strShortcutUrl: strShortcutUrl,
                SectionID: l.toString(),
                Page: Page,
                DateFilterType: DateFilterType,
                SelectedDay: h,
                Categories: f.toString(),
                SubCategories: a.toString(),
                intEventsCategoryId: m,
                ExistingCategoryList: c.toString(),
                ExistingSubCategoryList: d.toString()
            }),
            success: function (i) {
                IE7 = (navigator.appVersion.indexOf("MSIE 7.") == -1) ? false : true;
                $("#eventlist").html(i);
                if (!IE7 & !IE8) {
                    $("#eventlist").css("opacity", "1")
                }
                $("#event-loader").css("display", "none")
            }
        });
        $.ajax({
            url: "/eventlist_categories.cfm",
            type: "GET",
            cache: "false",
            data: ({
                strShortcutUrl: strShortcutUrl,
                SectionID: l.toString(),
                Page: Page,
                DateFilterType: DateFilterType,
                SelectedDay: h,
                Categories: f.toString(),
                SubCategories: a.toString(),
                intEventsCategoryId: m,
                ExistingCategoryList: c.toString(),
                ExistingSubCategoryList: d.toString()
            }),
            success: function (i) {
                IE7 = (navigator.appVersion.indexOf("MSIE 7.") == -1) ? false : true;
                $("#categorylist").html(i);
                if (!IE7 & !IE8) {
                    $("#categorylist").css("opacity", "1")
                }
                $("#categorylist-loader").css("display", "none")
            }
        });
        $.ajax({
            url: "/cal.cfm",
            type: "GET",
            cache: "false",
            data: ({
                strShortcutUrl: strShortcutUrl,
                SectionID: l.toString(),
                Page: Page,
                DateFilterType: DateFilterType,
                SelectedDay: h,
                Categories: f.toString(),
                SubCategories: a.toString(),
                intEventsCategoryId: m,
                ExistingCategoryList: c.toString(),
                ExistingSubCategoryList: d.toString()
            }),
            success: function (i) {
                IE7 = (navigator.appVersion.indexOf("MSIE 7.") == -1) ? false : true;
                $("#date2").html(i);
                if (!IE7 & !IE8) {
                    $("#categorylist").css("opacity", "1")
                }
                $("#categorylist-loader").css("display", "none")
            }
        })
    }
};(function (c) {
    var b = function (e, p) {
        var r = c(e);
        var q = false;
        var u = 0;
        var z = 5000;
        var v = 0;
        var w = new Array();
        var d = new Array();
        var k = 0;
        var y = 2;
        var l = 108;
        var i = 500;
        var f = function (C, B) {
            clearTimeout(u);
            r.find(".gallery_thumb").removeClass("selected");
            r.find("#gallery_thumb_" + C).addClass("selected");
            r.find(".gallery_preview").css("background-image", "url('/gallery/galpreview_" + B + "')");
            v = g(C);
            x();
            if (!q) {
                u = setTimeout(function () {
                    o()
                }, z)
            }
        };
        var x = function () {
            var B = r.find(".gallery_list_container").css("top");
            n();
            if (v > (k + y)) {
                k = k + 1;
                B = l * (-1 * k)
            }
            if (v < k) {
                k = v;
                B = l * (-1 * k)
            }
            var C = r.find(".gallery_list_container:animated").length;
            if (!C) {
                r.find(".gallery_list_container").stop(true, true).animate({top: B}, i)
            }
        };
        var o = function () {
            var B = v + 1;
            if (B >= w.length) {
                B = 0
            }
            f(w[B], d[B])
        };
        var g = function (C) {
            var B = 0;
            for (a = 0; a < w.length; a++) {
                if (w[a] == C) {
                    return a
                }
            }
            return B
        };
        var m = function () {
            var B = r.find(".gallery_list_container:animated").length;
            q = true;
            if (!B) {
                clearTimeout(u);
                var C = k - 1;
                n();
                if (C >= 0) {
                    k = C;
                    intAnimPos = l * (-1 * k);
                    r.find(".gallery_list_container").stop(true, true).animate({top: intAnimPos}, i);
                    u = setTimeout(function () {
                        m()
                    }, i + 50)
                }
            }
        };
        this.scrolldown = function () {
            A()
        };
        var A = function () {
            var B = r.find(".gallery_list_container:animated").length;
            q = true;
            if (!B) {
                clearTimeout(u);
                var C = k + 1;
                n();
                if ((C + y) < w.length) {
                    k = C;
                    intAnimPos = l * (-1 * k);
                    r.find(".gallery_list_container").stop(true, true).animate({top: intAnimPos}, i);
                    u = setTimeout(function () {
                        A()
                    }, i + 50)
                }
            }
        };
        var n = function () {
            l = r.find(".gallery_thumb").first().height() + 7
        };
        var t = function () {
            q = true;
            clearTimeout(u);
            f(c(this).attr("data-id"), c(this).attr("data-image"))
        };
        var h = function () {
            q = false;
            clearTimeout(u);
            u = setTimeout(function () {
                o()
            }, z)
        };
        var j = function () {
            r.find(".selected").click()
        };
        var s = function () {
            r.find(".gallery_thumb").each(function () {
                w.push(c(this).attr("data-id"));
                d.push(c(this).attr("data-image"));
                c(this).on("mouseover", t).on("mouseout", h)
            });
            if (w.length > 3) {
                r.find(".gallery_scrollup").on("mouseover", m).on("mouseout", h);
                r.find(".gallery_scrolldown").on("mouseover", A).on("mouseout", h)
            } else {
                r.find(".gallery_scrollup").css("display", "none");
                r.find(".gallery_scrolldown").css("display", "none")
            }
            f(w[0], d[0]);
            r.find(".gallery_preview").on("click", j)
        };
        s();
        return this
    };
    c.fn.galleryPlayer = function (d) {
        return this.each(function (g, h) {
            var f = c(this);
            if (f.data("galleryplayer")) {
                return f.data("galleryplayer")
            }
            var e = new b(this, d);
            f.data("galleryplayer", e)
        })
    }
})(jQuery);
(function (b) {
    var a = function (h, j) {
        var f = b(h);
        var m = 0;
        var g = 0;
        var d = 0;
        var k = 1000;
        var i = 0;
        var l = 10000;
        var e = function () {
            clearTimeout(i);
            var o = g + 1;
            if (o >= m) {
                o = 0
            }
            f.find(".heropanelImage:nth-child(" + (g + 1) + ")").stop(true, true).animate({opacity: 0}, k);
            f.find(".heropanelImage:nth-child(" + (o + 1) + ")").stop(true, true).animate({opacity: 1}, k);
            f.find(".blob-container .blob").removeClass("active");
            f.find(".blob-container").find(".blob:nth-child(" + (o + 1) + ")").addClass("active");
            i = setTimeout(function () {
                e()
            }, (l + k));
            g = o
        };
        var c = function () {
            clearTimeout(i);
            var o = g - 1;
            if (o < 0) {
                o = (m - 1)
            }
            f.find(".heropanelImage:nth-child(" + (g + 1) + ")").stop(true, true).animate({opacity: 0}, k);
            f.find(".heropanelImage:nth-child(" + (o + 1) + ")").stop(true, true).animate({opacity: 1}, k);
            f.find(".blob-container .blob").removeClass("active");
            f.find(".blob-container").find(".blob:nth-child(" + (o + 1) + ")").addClass("active");
            i = setTimeout(function () {
                e()
            }, (l + k));
            g = o
        };
        var n = function () {
            var o = 0;
            m = f.find(".heropanelImage").length;
            f.find(".heropanelImage").each(function () {
                if (b(this).attr("data-default") == "YES" || b(this).attr("data-default") == "true") {
                    b(this).css("opacity", 1);
                    g = o
                } else {
                    b(this).css("opacity", 0)
                }
                o++
            });
            if (m > 1) {
                i = setTimeout(function () {
                    e()
                }, l);
                b("#MAIN_featureImage").css("background-image", "none");
                f.find(".arrow-left").css("display", "block");
                f.find(".arrow-right").css("display", "block");
                f.find(".arrow-left").on("click", c);
                f.find(".arrow-right").on("click", e);
                for (o = 0; o < m; o++) {
                    f.find(".blob-container").append("<div class='blob'></div>")
                }
                f.find(".blob-container").find(".blob:nth-child(" + (g + 1) + ")").addClass("active")
            }
        };
        n();
        return this
    };
    b.fn.heroPanel = function (c) {
        return this.each(function (e, g) {
            var d = b(this);
            if (d.data("heropanel")) {
                return d.data("heropanel")
            }
            var f = new a(this, c);
            d.data("heropanel", f)
        })
    }
})(jQuery);
var herosliderdefault = 0;
var selectionHeroNo = 0;
var selectionHeroCount = 0;
var heroTimeout = 0;
var targetHeroTop = 0;
jQuery(document).ready(function () {
    var e = $("#hero-bar");
    if (herosliderdefault > 0) {
        selectionHeroNo = (herosliderdefault - 1)
    }
    if (document.getElementById("hero-bar")) {
        var g = $("#hero-bar #hero-bar-container");
        var d = $("#hero-bar #hero-bar-container .hero-bar-item");
        var h = e.css("height").replace("px", "");
        selectionHeroCount = d.length;
        g.css("height", h * selectionHeroCount + "px");
        if (selectionHeroCount > 1) {
            var c = $("#hero-bar #hero-bar-pagination");
            for (var b = 0; b < d.length; b++) {
                if (b == selectionHeroNo) {
                    var f = $('<div class="herobarpage selected" id="pag-' + b + '"></div>')
                } else {
                    var f = $('<div class="herobarpage unselected" id="pag-' + b + '"></div>')
                }
                f.click(function () {
                    gotoheropage($(this).attr("id").replace("pag-", ""))
                });
                c.append(f)
            }
            if (selectionHeroNo > 0) {
                targetHeroTop = selectionHeroNo * h * -1
            }
            g.css("top", targetHeroTop);
            c.css("right", c.css("right").replace("px", "") - (c.width() / 2) + "px");
            heroTimeout = setInterval("heroBarSlider()", 5000);
            e.hover(function () {
                stopherotimer()
            }, function () {
                startherotimer()
            })
        }
    }
});
function heroBarSlider() {
    var c = 0;
    var a = 0;
    var b = $("#hero-bar").css("height").replace("px", "");
    selectionHeroNo++;
    if (selectionHeroNo == selectionHeroCount) {
        selectionHeroNo = 0
    }
    $("#hero-bar #hero-bar-pagination .herobarpage").each(function (d) {
        currButtonId = $(this).attr("id").replace("pag-", "");
        if (currButtonId == selectionHeroNo) {
            $(this).addClass("selected").removeClass("unselected")
        } else {
            $(this).removeClass("selected").addClass("unselected")
        }
    });
    if (selectionHeroNo > 0) {
        c = selectionHeroNo * b * -1
    }
    $("#hero-bar #hero-bar-container").stop(true, false);
    $("#hero-bar #hero-bar-container").animate({top: c}, 1000)
}
function stopherotimer() {
    clearInterval(heroTimeout)
}
function startherotimer() {
    clearInterval(heroTimeout);
    heroTimeout = setInterval("heroBarSlider()", 5000)
}
function gotoheropage(a) {
    clearInterval(heroTimeout);
    selectionHeroNo = (a - 1);
    heroBarSlider();
    heroTimeout = setInterval("heroBarSlider()", 5000)
};(function (a, c) {
    jPlayerPlaylist = function (b, h, g) {
        var f = this;
        this.current = 0;
        this.removing = this.shuffled = this.loop = !1;
        this.cssSelector = a.extend({}, this._cssSelector, b);
        this.options = a.extend(!0, {}, this._options, g);
        this.playlist = [];
        this.original = [];
        this._initPlaylist(h);
        this.cssSelector.title = this.cssSelector.cssSelectorAncestor + " .jp-title";
        this.cssSelector.playlist = this.cssSelector.cssSelectorAncestor + " .jp-playlist";
        this.cssSelector.next = this.cssSelector.cssSelectorAncestor + " .jp-next";
        this.cssSelector.previous = this.cssSelector.cssSelectorAncestor + " .jp-previous";
        this.cssSelector.shuffle = this.cssSelector.cssSelectorAncestor + " .jp-shuffle";
        this.cssSelector.shuffleOff = this.cssSelector.cssSelectorAncestor + " .jp-shuffle-off";
        this.options.cssSelectorAncestor = this.cssSelector.cssSelectorAncestor;
        this.options.repeat = function (d) {
            f.loop = d.jPlayer.options.loop
        };
        a(this.cssSelector.jPlayer).bind(a.jPlayer.event.ready, function () {
            f._init()
        });
        a(this.cssSelector.jPlayer).bind(a.jPlayer.event.ended, function () {
            f.next()
        });
        a(this.cssSelector.jPlayer).bind(a.jPlayer.event.play, function () {
            a(this).jPlayer("pauseOthers")
        });
        a(this.cssSelector.jPlayer).bind(a.jPlayer.event.resize, function (d) {
            d.jPlayer.options.fullScreen ? a(f.cssSelector.title).show() : a(f.cssSelector.title).hide()
        });
        a(this.cssSelector.previous).click(function () {
            f.previous();
            a(this).blur();
            return !1
        });
        a(this.cssSelector.next).click(function () {
            f.next();
            a(this).blur();
            return !1
        });
        a(this.cssSelector.shuffle).click(function () {
            f.shuffle(!0);
            return !1
        });
        a(this.cssSelector.shuffleOff).click(function () {
            f.shuffle(!1);
            return !1
        }).hide();
        this.options.fullScreen || a(this.cssSelector.title).hide();
        a(this.cssSelector.playlist + " ul").empty();
        this._createItemHandlers();
        a(this.cssSelector.jPlayer).jPlayer(this.options)
    };
    jPlayerPlaylist.prototype = {
        _cssSelector: {jPlayer: "#jquery_jplayer_1", cssSelectorAncestor: "#jp_container_1"},
        _options: {
            playlistOptions: {
                autoPlay: !1,
                loopOnPrevious: !1,
                shuffleOnLoop: !0,
                enableRemoveControls: !1,
                displayTime: "slow",
                addTime: "fast",
                removeTime: "fast",
                shuffleTime: "slow",
                itemClass: "jp-playlist-item",
                freeGroupClass: "jp-free-media",
                freeItemClass: "jp-playlist-item-free",
                removeItemClass: "jp-playlist-item-remove"
            }
        },
        option: function (e, d) {
            if (d === c) {
                return this.options.playlistOptions[e]
            }
            this.options.playlistOptions[e] = d;
            switch (e) {
                case"enableRemoveControls":
                    this._updateControls();
                    break;
                case"itemClass":
                case"freeGroupClass":
                case"freeItemClass":
                case"removeItemClass":
                    this._refresh(!0), this._createItemHandlers()
            }
            return this
        },
        _init: function () {
            var b = this;
            this._refresh(function () {
                b.options.playlistOptions.autoPlay ? b.play(b.current) : b.select(b.current)
            })
        },
        _initPlaylist: function (b) {
            this.current = 0;
            this.removing = this.shuffled = !1;
            this.original = a.extend(!0, [], b);
            this._originalPlaylist()
        },
        _originalPlaylist: function () {
            var b = this;
            this.playlist = [];
            a.each(this.original, function (d) {
                b.playlist[d] = b.original[d]
            })
        },
        _refresh: function (b) {
            var f = this;
            if (b && !a.isFunction(b)) {
                a(this.cssSelector.playlist + " ul").empty(), a.each(this.playlist, function (d) {
                    a(f.cssSelector.playlist + " ul").append(f._createListItem(f.playlist[d]))
                }), this._updateControls()
            } else {
                var e = a(this.cssSelector.playlist + " ul").children().length ? this.options.playlistOptions.displayTime : 0;
                a(this.cssSelector.playlist + " ul").slideUp(e, function () {
                    var g = a(this);
                    a(this).empty();
                    a.each(f.playlist, function (d) {
                        g.append(f._createListItem(f.playlist[d]))
                    });
                    f._updateControls();
                    a.isFunction(b) && b();
                    f.playlist.length ? a(this).slideDown(f.options.playlistOptions.displayTime) : a(this).show()
                })
            }
        },
        _createListItem: function (b) {
            var h = this, g = "<li><div>";
            g += "<a href='javascript:;' class='" + this.options.playlistOptions.removeItemClass + "'>&times;</a>";
            if (b.free) {
                var f = !0;
                g += "<span class='" + this.options.playlistOptions.freeGroupClass + "'>(";
                a.each(b, function (d, e) {
                    a.jPlayer.prototype.format[d] && (f ? f = !1 : g += " | ", g += "<a class='" + h.options.playlistOptions.freeItemClass + "' href='" + e + "' tabindex='1'>" + d + "</a>")
                });
                g += ")</span>"
            }
            g += "<a href='javascript:;' class='" + this.options.playlistOptions.itemClass + "' tabindex='1'>" + b.title + (b.artist ? " <span class='jp-artist'>by " + b.artist + "</span>" : "") + "</a>";
            g += "</div></li>";
            return g
        },
        _createItemHandlers: function () {
            var b = this;
            a(this.cssSelector.playlist + " a." + this.options.playlistOptions.itemClass).die("click").live("click", function () {
                var d = a(this).parent().parent().index();
                b.current !== d ? b.play(d) : a(b.cssSelector.jPlayer).jPlayer("play");
                a(this).blur();
                return !1
            });
            a(b.cssSelector.playlist + " a." + this.options.playlistOptions.freeItemClass).die("click").live("click", function () {
                a(this).parent().parent().find("." + b.options.playlistOptions.itemClass).click();
                a(this).blur();
                return !1
            });
            a(b.cssSelector.playlist + " a." + this.options.playlistOptions.removeItemClass).die("click").live("click", function () {
                var d = a(this).parent().parent().index();
                b.remove(d);
                a(this).blur();
                return !1
            })
        },
        _updateControls: function () {
            this.options.playlistOptions.enableRemoveControls ? a(this.cssSelector.playlist + " ." + this.options.playlistOptions.removeItemClass).show() : a(this.cssSelector.playlist + " ." + this.options.playlistOptions.removeItemClass).hide();
            this.shuffled ? (a(this.cssSelector.shuffleOff).show(), a(this.cssSelector.shuffle).hide()) : (a(this.cssSelector.shuffleOff).hide(), a(this.cssSelector.shuffle).show())
        },
        _highlight: function (b) {
            this.playlist.length && b !== c && (a(this.cssSelector.playlist + " .jp-playlist-current").removeClass("jp-playlist-current"), a(this.cssSelector.playlist + " li:nth-child(" + (b + 1) + ")").addClass("jp-playlist-current").find(".jp-playlist-item").addClass("jp-playlist-current"), a(this.cssSelector.title + " li").html(this.playlist[b].title + (this.playlist[b].artist ? " <span class='jp-artist'>by " + this.playlist[b].artist + "</span>" : "")))
        },
        setPlaylist: function (b) {
            this._initPlaylist(b);
            this._init()
        },
        add: function (b, d) {
            a(this.cssSelector.playlist + " ul").append(this._createListItem(b)).find("li:last-child").hide().slideDown(this.options.playlistOptions.addTime);
            this._updateControls();
            this.original.push(b);
            this.playlist.push(b);
            d ? this.play(this.playlist.length - 1) : this.original.length === 1 && this.select(0)
        },
        remove: function (b) {
            var d = this;
            if (b === c) {
                return this._initPlaylist([]), this._refresh(function () {
                    a(d.cssSelector.jPlayer).jPlayer("clearMedia")
                }), !0
            } else {
                if (this.removing) {
                    return !1
                } else {
                    b = b < 0 ? d.original.length + b : b;
                    if (0 <= b && b < this.playlist.length) {
                        this.removing = !0, a(this.cssSelector.playlist + " li:nth-child(" + (b + 1) + ")").slideUp(this.options.playlistOptions.removeTime, function () {
                            a(this).remove();
                            if (d.shuffled) {
                                var e = d.playlist[b];
                                a.each(d.original, function (f) {
                                    if (d.original[f] === e) {
                                        return d.original.splice(f, 1), !1
                                    }
                                })
                            } else {
                                d.original.splice(b, 1)
                            }
                            d.playlist.splice(b, 1);
                            d.original.length ? b === d.current ? (d.current = b < d.original.length ? d.current : d.original.length - 1, d.select(d.current)) : b < d.current && d.current-- : (a(d.cssSelector.jPlayer).jPlayer("clearMedia"), d.current = 0, d.shuffled = !1, d._updateControls());
                            d.removing = !1
                        })
                    }
                    return !0
                }
            }
        },
        select: function (b) {
            b = b < 0 ? this.original.length + b : b;
            0 <= b && b < this.playlist.length ? (this.current = b, this._highlight(b), a(this.cssSelector.jPlayer).jPlayer("setMedia", this.playlist[this.current])) : this.current = 0
        },
        play: function (b) {
            b = b < 0 ? this.original.length + b : b;
            0 <= b && b < this.playlist.length ? this.playlist.length && (this.select(b), a(this.cssSelector.jPlayer).jPlayer("play")) : b === c && a(this.cssSelector.jPlayer).jPlayer("play")
        },
        pause: function () {
            a(this.cssSelector.jPlayer).jPlayer("pause")
        },
        next: function () {
            var b = this.current + 1 < this.playlist.length ? this.current + 1 : 0;
            this.loop ? b === 0 && this.shuffled && this.options.playlistOptions.shuffleOnLoop && this.playlist.length > 1 ? this.shuffle(!0, !0) : this.play(b) : b > 0 && this.play(b)
        },
        previous: function () {
            var b = this.current - 1 >= 0 ? this.current - 1 : this.playlist.length - 1;
            (this.loop && this.options.playlistOptions.loopOnPrevious || b < this.playlist.length - 1) && this.play(b)
        },
        shuffle: function (b, f) {
            var e = this;
            b === c && (b = !this.shuffled);
            (b || b !== this.shuffled) && a(this.cssSelector.playlist + " ul").slideUp(this.options.playlistOptions.shuffleTime, function () {
                (e.shuffled = b) ? e.playlist.sort(function () {
                    return 0.5 - Math.random()
                }) : e._originalPlaylist();
                e._refresh(!0);
                f || !a(e.cssSelector.jPlayer).data("jPlayer").status.paused ? e.play(0) : e.select(0);
                a(this).slideDown(e.options.playlistOptions.shuffleTime)
            })
        }
    }
})(jQuery);
(function (c) {
    var b = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var d = function (f) {
        f = f.replace(/\x0d\x0a/g, "\x0a");
        var e = "";
        for (var h = 0; h < f.length; h++) {
            var g = f.charCodeAt(h);
            if (g < 128) {
                e += String.fromCharCode(g)
            } else {
                if ((g > 127) && (g < 2048)) {
                    e += String.fromCharCode((g >> 6) | 192);
                    e += String.fromCharCode((g & 63) | 128)
                } else {
                    e += String.fromCharCode((g >> 12) | 224);
                    e += String.fromCharCode(((g >> 6) & 63) | 128);
                    e += String.fromCharCode((g & 63) | 128)
                }
            }
        }
        return e
    };
    var a = function (e) {
        var f = "";
        var g = 0;
        var h = c1 = c2 = 0;
        while (g < e.length) {
            h = e.charCodeAt(g);
            if (h < 128) {
                f += String.fromCharCode(h);
                g++
            } else {
                if ((h > 191) && (h < 224)) {
                    c2 = e.charCodeAt(g + 1);
                    f += String.fromCharCode(((h & 31) << 6) | (c2 & 63));
                    g += 2
                } else {
                    c2 = e.charCodeAt(g + 1);
                    c3 = e.charCodeAt(g + 2);
                    f += String.fromCharCode(((h & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                    g += 3
                }
            }
        }
        return f
    };
    c.extend({
        base64Encode: function (g) {
            var e = "";
            var o, m, k, n, l, j, h;
            var f = 0;
            g = d(g);
            while (f < g.length) {
                o = g.charCodeAt(f++);
                m = g.charCodeAt(f++);
                k = g.charCodeAt(f++);
                n = o >> 2;
                l = ((o & 3) << 4) | (m >> 4);
                j = ((m & 15) << 2) | (k >> 6);
                h = k & 63;
                if (isNaN(m)) {
                    j = h = 64
                } else {
                    if (isNaN(k)) {
                        h = 64
                    }
                }
                e = e + b.charAt(n) + b.charAt(l) + b.charAt(j) + b.charAt(h)
            }
            return e
        }, base64Decode: function (g) {
            var e = "";
            var o, m, k;
            var n, l, j, h;
            var f = 0;
            g = g.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            while (f < g.length) {
                n = b.indexOf(g.charAt(f++));
                l = b.indexOf(g.charAt(f++));
                j = b.indexOf(g.charAt(f++));
                h = b.indexOf(g.charAt(f++));
                o = (n << 2) | (l >> 4);
                m = ((l & 15) << 4) | (j >> 2);
                k = ((j & 3) << 6) | h;
                e = e + String.fromCharCode(o);
                if (j != 64) {
                    e = e + String.fromCharCode(m)
                }
                if (h != 64) {
                    e = e + String.fromCharCode(k)
                }
            }
            e = a(e);
            return e
        }
    })
})(jQuery);
eval(function (h, b, i, d, g, f) {
    g = function (a) {
        return (a < b ? "" : g(parseInt(a / b))) + ((a = a % b) > 35 ? String.fromCharCode(a + 29) : a.toString(36))
    };
    if (!"".replace(/^/, String)) {
        while (i--) {
            f[g(i)] = d[i] || g(i)
        }
        d = [function (a) {
            return f[a]
        }];
        g = function () {
            return "\\w+"
        };
        i = 1
    }
    while (i--) {
        if (d[i]) {
            h = h.replace(new RegExp("\\b" + g(i) + "\\b", "g"), d[i])
        }
    }
    return h
}("h.i['1a']=h.i['z'];h.O(h.i,{y:'D',z:9(x,t,b,c,d){6 h.i[h.i.y](x,t,b,c,d)},17:9(x,t,b,c,d){6 c*(t/=d)*t+b},D:9(x,t,b,c,d){6-c*(t/=d)*(t-2)+b},13:9(x,t,b,c,d){e((t/=d/2)<1)6 c/2*t*t+b;6-c/2*((--t)*(t-2)-1)+b},X:9(x,t,b,c,d){6 c*(t/=d)*t*t+b},U:9(x,t,b,c,d){6 c*((t=t/d-1)*t*t+1)+b},R:9(x,t,b,c,d){e((t/=d/2)<1)6 c/2*t*t*t+b;6 c/2*((t-=2)*t*t+2)+b},N:9(x,t,b,c,d){6 c*(t/=d)*t*t*t+b},M:9(x,t,b,c,d){6-c*((t=t/d-1)*t*t*t-1)+b},L:9(x,t,b,c,d){e((t/=d/2)<1)6 c/2*t*t*t*t+b;6-c/2*((t-=2)*t*t*t-2)+b},K:9(x,t,b,c,d){6 c*(t/=d)*t*t*t*t+b},J:9(x,t,b,c,d){6 c*((t=t/d-1)*t*t*t*t+1)+b},I:9(x,t,b,c,d){e((t/=d/2)<1)6 c/2*t*t*t*t*t+b;6 c/2*((t-=2)*t*t*t*t+2)+b},G:9(x,t,b,c,d){6-c*8.C(t/d*(8.g/2))+c+b},15:9(x,t,b,c,d){6 c*8.n(t/d*(8.g/2))+b},12:9(x,t,b,c,d){6-c/2*(8.C(8.g*t/d)-1)+b},Z:9(x,t,b,c,d){6(t==0)?b:c*8.j(2,10*(t/d-1))+b},Y:9(x,t,b,c,d){6(t==d)?b+c:c*(-8.j(2,-10*t/d)+1)+b},W:9(x,t,b,c,d){e(t==0)6 b;e(t==d)6 b+c;e((t/=d/2)<1)6 c/2*8.j(2,10*(t-1))+b;6 c/2*(-8.j(2,-10*--t)+2)+b},V:9(x,t,b,c,d){6-c*(8.o(1-(t/=d)*t)-1)+b},S:9(x,t,b,c,d){6 c*8.o(1-(t=t/d-1)*t)+b},Q:9(x,t,b,c,d){e((t/=d/2)<1)6-c/2*(8.o(1-t*t)-1)+b;6 c/2*(8.o(1-(t-=2)*t)+1)+b},P:9(x,t,b,c,d){f s=1.l;f p=0;f a=c;e(t==0)6 b;e((t/=d)==1)6 b+c;e(!p)p=d*.3;e(a<8.w(c)){a=c;f s=p/4}m f s=p/(2*8.g)*8.r(c/a);6-(a*8.j(2,10*(t-=1))*8.n((t*d-s)*(2*8.g)/p))+b},H:9(x,t,b,c,d){f s=1.l;f p=0;f a=c;e(t==0)6 b;e((t/=d)==1)6 b+c;e(!p)p=d*.3;e(a<8.w(c)){a=c;f s=p/4}m f s=p/(2*8.g)*8.r(c/a);6 a*8.j(2,-10*t)*8.n((t*d-s)*(2*8.g)/p)+c+b},T:9(x,t,b,c,d){f s=1.l;f p=0;f a=c;e(t==0)6 b;e((t/=d/2)==2)6 b+c;e(!p)p=d*(.3*1.5);e(a<8.w(c)){a=c;f s=p/4}m f s=p/(2*8.g)*8.r(c/a);e(t<1)6-.5*(a*8.j(2,10*(t-=1))*8.n((t*d-s)*(2*8.g)/p))+b;6 a*8.j(2,-10*(t-=1))*8.n((t*d-s)*(2*8.g)/p)*.5+c+b},F:9(x,t,b,c,d,s){e(s==u)s=1.l;6 c*(t/=d)*t*((s+1)*t-s)+b},E:9(x,t,b,c,d,s){e(s==u)s=1.l;6 c*((t=t/d-1)*t*((s+1)*t+s)+1)+b},16:9(x,t,b,c,d,s){e(s==u)s=1.l;e((t/=d/2)<1)6 c/2*(t*t*(((s*=(1.B))+1)*t-s))+b;6 c/2*((t-=2)*t*(((s*=(1.B))+1)*t+s)+2)+b},A:9(x,t,b,c,d){6 c-h.i.v(x,d-t,0,c,d)+b},v:9(x,t,b,c,d){e((t/=d)<(1/2.k)){6 c*(7.q*t*t)+b}m e(t<(2/2.k)){6 c*(7.q*(t-=(1.5/2.k))*t+.k)+b}m e(t<(2.5/2.k)){6 c*(7.q*(t-=(2.14/2.k))*t+.11)+b}m{6 c*(7.q*(t-=(2.18/2.k))*t+.19)+b}},1b:9(x,t,b,c,d){e(t<d/2)6 h.i.A(x,t*2,0,c,d)*.5+b;6 h.i.v(x,t*2-d,0,c,d)*.5+c*.5+b}});", 62, 74, "||||||return||Math|function|||||if|var|PI|jQuery|easing|pow|75|70158|else|sin|sqrt||5625|asin|||undefined|easeOutBounce|abs||def|swing|easeInBounce|525|cos|easeOutQuad|easeOutBack|easeInBack|easeInSine|easeOutElastic|easeInOutQuint|easeOutQuint|easeInQuint|easeInOutQuart|easeOutQuart|easeInQuart|extend|easeInElastic|easeInOutCirc|easeInOutCubic|easeOutCirc|easeInOutElastic|easeOutCubic|easeInCirc|easeInOutExpo|easeInCubic|easeOutExpo|easeInExpo||9375|easeInOutSine|easeInOutQuad|25|easeOutSine|easeInOutBack|easeInQuad|625|984375|jswing|easeInOutBounce".split("|"), 0, {}));
(function (a) {
    a.fn.ContentSlider = function (q) {
        var h = {
            leftBtn: "/site_assets/images/contentslider/cs_leftImg.jpg",
            rightBtn: "/site_assets/images/contentslider/cs_rightImg.jpg",
            width: this.css("width"),
            height: "320px",
            speed: 400,
            easing: "easeOutQuad",
            textResize: false,
            IE_h2: "26px",
            IE_p: "11px"
        };
        var m = this.css("width");
        var d = a.extend(h, q);
        d.width = this.css("width");
        d.height = this.css("height");
        var l = parseInt(d.width);
        var f = this.children(".cs_wrapper").children(".cs_slider").children(".cs_article").length;
        var j = -1 * l * f + l;
        var c = parseInt(d.width) / parseInt(m);
        var k = this.attr("id");
        var e = false;

        function b() {
            var r = "left";
            var o = a(this).children(".cs_rightBtn");
            var p = parseInt(o.siblings(".cs_wrapper").children(".cs_slider").css("left"));
            if (isNaN(p)) {
                var p = 0
            }
            var n = (r == "left") ? p - l : p + l;
            if (n <= 0 && n >= j) {
                return true
            } else {
                return false
            }
        }

        function i(t, o) {
            var p = parseInt(o.parent().siblings(".cs_wrapper").children(".cs_slider").css("left"));
            if (isNaN(p)) {
                var p = 0
            }
            var n = (t == "left") ? p - l : p + l;
            if (n <= 0 && n >= j) {
                o.parent().siblings(".cs_wrapper").children(".cs_slider").animate({left: n + "px"}, d.speed, d.easing, function () {
                    e = false
                });
                if (o.attr("class") == "cs_leftBtn") {
                    var r = a("#" + k + " .cs_leftBtn");
                    var s = a("#" + k + " .cs_rightBtn")
                } else {
                    var r = a("#" + k + " .cs_rightBtn");
                    var s = a("#" + k + " .cs_leftBtn")
                }
                if (n == 0 || n == j) {
                    r.animate({opacity: "0"}, d.speed, d.easing, function () {
                        r.hide()
                    })
                }
                if (s.css("opacity") == "0") {
                    s.show().animate({opacity: "1"}, {duration: d.speed, easing: d.easing})
                }
            }
        }

        function g(n) {
            var o = parseInt(d.height) / 2;
            n
        }

        return this.each(function () {
            a(this).css({}).find(".cs_article").css({}).end();
            if (b()) {
                a(this).find(".cs_leftBtn").css("opacity", 0).hide().end().find(".cs_rightBtn").hide().animate({width: "show"})
            } else {
                a(this).find(".cs_leftBtn").css("opacity", 0).hide().end().find(".cs_rightBtn").css("opacity", 0).hide().end()
            }
            if (d.textResize === true) {
                var o = a(this).find("h2").css("font-size");
                var p = a(this).find("p").css("font-size");
                a.each(jQuery.browser, function (s) {
                    if (a.browser.msie) {
                        o = d.IE_h2;
                        p = d.IE_p
                    }
                });
                a(this).find("h2").css({"font-size": parseFloat(o) * c + "px", "margin-left": "66%"});
                a(this).find("p").css({"font-size": parseFloat(p) * c + "px", "margin-left": "66%"});
                a(this).find(".readmore").css({"font-size": parseFloat(p) * c + "px", "margin-left": "66%"})
            }
            var r = a(this).children(".pagination").children(".cs_leftBtn");
            r.bind("click", function () {
                if (e === false) {
                    e = true;
                    i("right", r)
                }
                return false
            });
            var n = a(this).children(".pagination").children(".cs_rightBtn");
            n.bind("click", function () {
                if (e === false) {
                    e = true;
                    i("left", n)
                }
                return false
            });
            g(a(this))
        })
    }
})(jQuery);
(function (B) {
    var L, T, Q, M, d, m, J, A, O, z, C = 0, H = {}, j = [], e = 0, G = {}, y = [], f = null, o = new Image(), i = /\.(jpg|gif|png|bmp|jpeg)(.*)?$/i, k = /[^\.]\.(swf)\s*$/i, p, N = 1, h = 0, t = "", b, c, P = false, s = B.extend(B("<div/>")[0], {prop: 0}), S = B.browser.msie && B.browser.version < 7 && !window.XMLHttpRequest, r = function () {
        T.hide();
        o.onerror = o.onload = null;
        if (f) {
            f.abort()
        }
        L.empty()
    }, x = function () {
        if (false === H.onError(j, C, H)) {
            T.hide();
            P = false;
            return
        }
        H.titleShow = false;
        H.width = "auto";
        H.height = "auto";
        L.html('<p id="fancybox-error">The requested content cannot be loaded.<br />Please try again later.</p>');
        n()
    }, w = function () {
        var Z = j[C], W, Y, ab, aa, V, X;
        r();
        H = B.extend({}, B.fn.fancybox.defaults, (typeof B(Z).data("fancybox") == "undefined" ? H : B(Z).data("fancybox")));
        X = H.onStart(j, C, H);
        if (X === false) {
            P = false;
            return
        } else {
            if (typeof X == "object") {
                H = B.extend(H, X)
            }
        }
        ab = H.title || (Z.nodeName ? B(Z).attr("title") : Z.title) || "";
        if (Z.nodeName && !H.orig) {
            H.orig = B(Z).children("img:first").length ? B(Z).children("img:first") : B(Z)
        }
        if (ab === "" && H.orig && H.titleFromAlt) {
            ab = H.orig.attr("alt")
        }
        W = H.href || (Z.nodeName ? B(Z).attr("href") : Z.href) || null;
        if ((/^(?:javascript)/i).test(W) || W == "#") {
            W = null
        }
        if (H.type) {
            Y = H.type;
            if (!W) {
                W = H.content
            }
        } else {
            if (H.content) {
                Y = "html"
            } else {
                if (W) {
                    if (W.match(i)) {
                        Y = "image"
                    } else {
                        if (W.match(k)) {
                            Y = "swf"
                        } else {
                            if (B(Z).hasClass("iframe")) {
                                Y = "iframe"
                            } else {
                                if (W.indexOf("#") === 0) {
                                    Y = "inline"
                                } else {
                                    Y = "ajax"
                                }
                            }
                        }
                    }
                }
            }
        }
        if (!Y) {
            x();
            return
        }
        if (Y == "inline") {
            Z = W.substr(W.indexOf("#"));
            Y = B(Z).length > 0 ? "inline" : "ajax"
        }
        H.type = Y;
        H.href = W;
        H.title = ab;
        if (H.autoDimensions) {
            if (H.type == "html" || H.type == "inline" || H.type == "ajax") {
                H.width = "auto";
                H.height = "auto"
            } else {
                H.autoDimensions = false
            }
        }
        if (H.modal) {
            H.overlayShow = true;
            H.hideOnOverlayClick = false;
            H.hideOnContentClick = false;
            H.enableEscapeButton = false;
            H.showCloseButton = false
        }
        H.padding = parseInt(H.padding, 10);
        H.margin = parseInt(H.margin, 10);
        L.css("padding", (H.padding + H.margin));
        B(".fancybox-inline-tmp").unbind("fancybox-cancel").bind("fancybox-change", function () {
            B(this).replaceWith(m.children())
        });
        switch (Y) {
            case"html":
                L.html(H.content);
                n();
                break;
            case"inline":
                if (B(Z).parent().is("#fancybox-content") === true) {
                    P = false;
                    return
                }
                B('<div class="fancybox-inline-tmp" />').hide().insertBefore(B(Z)).bind("fancybox-cleanup", function () {
                    B(this).replaceWith(m.children())
                }).bind("fancybox-cancel", function () {
                    B(this).replaceWith(L.children())
                });
                B(Z).appendTo(L);
                n();
                break;
            case"image":
                P = false;
                B.fancybox.showActivity();
                o = new Image();
                o.onerror = function () {
                    x()
                };
                o.onload = function () {
                    P = true;
                    o.onerror = o.onload = null;
                    F()
                };
                o.src = W;
                break;
            case"swf":
                H.scrolling = "no";
                aa = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="' + H.width + '" height="' + H.height + '"><param name="movie" value="' + W + '"></param>';
                V = "";
                B.each(H.swf, function (ac, ad) {
                    aa += '<param name="' + ac + '" value="' + ad + '"></param>';
                    V += " " + ac + '="' + ad + '"'
                });
                aa += '<embed src="' + W + '" type="application/x-shockwave-flash" width="' + H.width + '" height="' + H.height + '"' + V + "></embed></object>";
                L.html(aa);
                n();
                break;
            case"ajax":
                P = false;
                B.fancybox.showActivity();
                H.ajax.win = H.ajax.success;
                f = B.ajax(B.extend({}, H.ajax, {
                    url: W, data: H.ajax.data || {}, error: function (ac, ae, ad) {
                        if (ac.status > 0) {
                            x()
                        }
                    }, success: function (ad, af, ac) {
                        var ae = typeof ac == "object" ? ac : f;
                        if (ae.status == 200) {
                            if (typeof H.ajax.win == "function") {
                                X = H.ajax.win(W, ad, af, ac);
                                if (X === false) {
                                    T.hide();
                                    return
                                } else {
                                    if (typeof X == "string" || typeof X == "object") {
                                        ad = X
                                    }
                                }
                            }
                            L.html(ad);
                            n()
                        }
                    }
                }));
                break;
            case"iframe":
                E();
                break
        }
    }, n = function () {
        var V = H.width, W = H.height;
        if (V.toString().indexOf("%") > -1) {
            V = parseInt((B(window).width() - (H.margin * 2)) * parseFloat(V) / 100, 10) + "px"
        } else {
            V = V == "auto" ? "auto" : V + "px"
        }
        if (W.toString().indexOf("%") > -1) {
            W = parseInt((B(window).height() - (H.margin * 2)) * parseFloat(W) / 100, 10) + "px"
        } else {
            W = W == "auto" ? "auto" : W + "px"
        }
        L.wrapInner('<div style="width:' + V + ";height:" + W + ";overflow: " + (H.scrolling == "auto" ? "auto" : (H.scrolling == "yes" ? "scroll" : "hidden")) + ';position:relative;"></div>');
        H.width = L.width();
        H.height = L.height();
        E()
    }, F = function () {
        H.width = o.width;
        H.height = o.height;
        B("<img />").attr({id: "fancybox-img", src: o.src, alt: H.title}).appendTo(L);
        E()
    }, E = function () {
        var W, V;
        T.hide();
        if (M.is(":visible") && false === G.onCleanup(y, e, G)) {
            B.event.trigger("fancybox-cancel");
            P = false;
            return
        }
        P = true;
        B(m.add(Q)).unbind();
        B(window).unbind("resize.fb scroll.fb");
        B(document).unbind("keydown.fb");
        if (M.is(":visible") && G.titlePosition !== "outside") {
            M.css("height", M.height())
        }
        y = j;
        e = C;
        G = H;
        if (G.overlayShow) {
            Q.css({
                "background-color": G.overlayColor,
                opacity: G.overlayOpacity,
                cursor: G.hideOnOverlayClick ? "pointer" : "auto",
                height: B(document).height()
            });
            if (!Q.is(":visible")) {
                if (S) {
                    B("select:not(#fancybox-tmp select)").filter(function () {
                        return this.style.visibility !== "hidden"
                    }).css({visibility: "hidden"}).one("fancybox-cleanup", function () {
                        this.style.visibility = "inherit"
                    })
                }
                Q.show()
            }
        } else {
            Q.hide()
        }
        c = R();
        l();
        if (M.is(":visible")) {
            B(J.add(O).add(z)).hide();
            W = M.position(), b = {top: W.top, left: W.left, width: M.width(), height: M.height()};
            V = (b.width == c.width && b.height == c.height);
            m.fadeTo(G.changeFade, 0.3, function () {
                var X = function () {
                    m.html(L.contents()).fadeTo(G.changeFade, 1, v)
                };
                B.event.trigger("fancybox-change");
                m.empty().removeAttr("filter").css({
                    "border-width": G.padding,
                    width: c.width - G.padding * 2,
                    height: H.autoDimensions ? "auto" : c.height - h - G.padding * 2
                });
                if (V) {
                    X()
                } else {
                    s.prop = 0;
                    B(s).animate({prop: 1}, {duration: G.changeSpeed, easing: G.easingChange, step: U, complete: X})
                }
            });
            return
        }
        M.removeAttr("style");
        m.css("border-width", G.padding);
        if (G.transitionIn == "elastic") {
            b = I();
            m.html(L.contents());
            M.show();
            if (G.opacity) {
                c.opacity = 0
            }
            s.prop = 0;
            B(s).animate({prop: 1}, {duration: G.speedIn, easing: G.easingIn, step: U, complete: v});
            return
        }
        if (G.titlePosition == "inside" && h > 0) {
            A.show()
        }
        m.css({
            width: c.width - G.padding * 2,
            height: H.autoDimensions ? "auto" : c.height - h - G.padding * 2
        }).html(L.contents());
        M.css(c).fadeIn(G.transitionIn == "none" ? 0 : G.speedIn, v)
    }, D = function (V) {
        if (V && V.length) {
            if (G.titlePosition == "float") {
                return '<table id="fancybox-title-float-wrap" cellpadding="0" cellspacing="0"><tr><td id="fancybox-title-float-left"></td><td id="fancybox-title-float-main">' + V + '</td><td id="fancybox-title-float-right"></td></tr></table>'
            }
            return '<div id="fancybox-title-' + G.titlePosition + '">' + V + "</div>"
        }
        return false
    }, l = function () {
        t = G.title || "";
        h = 0;
        A.empty().removeAttr("style").removeClass();
        if (G.titleShow === false) {
            return
        }
        t = B.isFunction(G.titleFormat) ? G.titleFormat(t, y, e, G) : D(t);
        if (!t || t === "") {
            return
        }
        A.addClass("fancybox-title-" + G.titlePosition).html(t).appendTo("body").show();
        switch (G.titlePosition) {
            case"inside":
                A.css({width: c.width - (G.padding * 2), marginLeft: G.padding, marginRight: G.padding});
                h = A.outerHeight(true);
                A.appendTo(d);
                c.height += h;
                break;
            case"over":
                A.css({marginLeft: G.padding, width: c.width - (G.padding * 2), bottom: G.padding}).appendTo(d);
                break;
            case"float":
                A.css("left", parseInt((A.width() - c.width - 40) / 2, 10) * -1).appendTo(M);
                break;
            default:
                A.css({width: c.width - (G.padding * 2), paddingLeft: G.padding, paddingRight: G.padding}).appendTo(M);
                break
        }
    }, g = function () {
        if (G.enableEscapeButton || G.enableKeyboardNav) {
            B(document).bind("keydown.fb", function (V) {
                if (V.keyCode == 27 && G.enableEscapeButton) {
                    V.preventDefault();
                    B.fancybox.close()
                } else {
                    if ((V.keyCode == 37 || V.keyCode == 39) && G.enableKeyboardNav && V.target.tagName !== "INPUT" && V.target.tagName !== "TEXTAREA" && V.target.tagName !== "SELECT") {
                        V.preventDefault();
                        B.fancybox[V.keyCode == 37 ? "prev" : "next"]()
                    }
                }
            })
        }
        if (!G.showNavArrows) {
            O.hide();
            z.hide();
            return
        }
        if ((G.cyclic && y.length > 1) || e !== 0) {
            O.show()
        }
        if ((G.cyclic && y.length > 1) || e != (y.length - 1)) {
            z.show()
        }
    }, v = function () {
        if (!B.support.opacity) {
            m.get(0).style.removeAttribute("filter");
            M.get(0).style.removeAttribute("filter")
        }
        if (H.autoDimensions) {
            m.css("height", "auto")
        }
        M.css("height", "auto");
        if (t && t.length) {
            A.show()
        }
        if (G.showCloseButton) {
            J.show()
        }
        g();
        if (G.hideOnContentClick) {
            m.bind("click", B.fancybox.close)
        }
        if (G.hideOnOverlayClick) {
            Q.bind("click", B.fancybox.close)
        }
        B(window).bind("resize.fb", B.fancybox.resize);
        if (G.centerOnScroll) {
            B(window).bind("scroll.fb", B.fancybox.center)
        }
        if (G.type == "iframe") {
            B('<iframe id="fancybox-frame" name="fancybox-frame' + new Date().getTime() + '" frameborder="0" hspace="0" ' + (B.browser.msie ? 'allowtransparency="true""' : "") + ' scrolling="' + H.scrolling + '" src="' + G.href + '"></iframe>').appendTo(m)
        }
        M.show();
        P = false;
        B.fancybox.center();
        G.onComplete(y, e, G);
        K()
    }, K = function () {
        var V, W;
        if ((y.length - 1) > e) {
            V = y[e + 1].href;
            if (typeof V !== "undefined" && V.match(i)) {
                W = new Image();
                W.src = V
            }
        }
        if (e > 0) {
            V = y[e - 1].href;
            if (typeof V !== "undefined" && V.match(i)) {
                W = new Image();
                W.src = V
            }
        }
    }, U = function (W) {
        var V = {
            width: parseInt(b.width + (c.width - b.width) * W, 10),
            height: parseInt(b.height + (c.height - b.height) * W, 10),
            top: parseInt(b.top + (c.top - b.top) * W, 10),
            left: parseInt(b.left + (c.left - b.left) * W, 10)
        };
        if (typeof c.opacity !== "undefined") {
            V.opacity = W < 0.5 ? 0.5 : W
        }
        M.css(V);
        m.css({width: V.width - G.padding * 2, height: V.height - (h * W) - G.padding * 2})
    }, u = function () {
        return [B(window).width() - (G.margin * 2), B(window).height() - (G.margin * 2), B(document).scrollLeft() + G.margin, B(document).scrollTop() + G.margin]
    }, R = function () {
        var V = u(), Z = {}, W = G.autoScale, X = G.padding * 2, Y;
        if (G.width.toString().indexOf("%") > -1) {
            Z.width = parseInt((V[0] * parseFloat(G.width)) / 100, 10)
        } else {
            Z.width = G.width + X
        }
        if (G.height.toString().indexOf("%") > -1) {
            Z.height = parseInt((V[1] * parseFloat(G.height)) / 100, 10)
        } else {
            Z.height = G.height + X
        }
        if (W && (Z.width > V[0] || Z.height > V[1])) {
            if (H.type == "image" || H.type == "swf") {
                Y = (G.width) / (G.height);
                if ((Z.width) > V[0]) {
                    Z.width = V[0];
                    Z.height = parseInt(((Z.width - X) / Y) + X, 10)
                }
                if ((Z.height) > V[1]) {
                    Z.height = V[1];
                    Z.width = parseInt(((Z.height - X) * Y) + X, 10)
                }
            } else {
                Z.width = Math.min(Z.width, V[0]);
                Z.height = Math.min(Z.height, V[1])
            }
        }
        Z.top = parseInt(Math.max(V[3] - 20, V[3] + ((V[1] - Z.height - 40) * 0.5)), 10);
        Z.left = parseInt(Math.max(V[2] - 20, V[2] + ((V[0] - Z.width - 40) * 0.5)), 10);
        return Z
    }, q = function (V) {
        var W = V.offset();
        W.top += parseInt(V.css("paddingTop"), 10) || 0;
        W.left += parseInt(V.css("paddingLeft"), 10) || 0;
        W.top += parseInt(V.css("border-top-width"), 10) || 0;
        W.left += parseInt(V.css("border-left-width"), 10) || 0;
        W.width = V.width();
        W.height = V.height();
        return W
    }, I = function () {
        var Y = H.orig ? B(H.orig) : false, X = {}, W, V;
        if (Y && Y.length) {
            W = q(Y);
            X = {
                width: W.width + (G.padding * 2),
                height: W.height + (G.padding * 2),
                top: W.top - G.padding - 20,
                left: W.left - G.padding - 20
            }
        } else {
            V = u();
            X = {
                width: G.padding * 2,
                height: G.padding * 2,
                top: parseInt(V[3] + V[1] * 0.5, 10),
                left: parseInt(V[2] + V[0] * 0.5, 10)
            }
        }
        return X
    }, a = function () {
        if (!T.is(":visible")) {
            clearInterval(p);
            return
        }
        B("div", T).css("top", (N * -40) + "px");
        N = (N + 1) % 12
    };
    B.fn.fancybox = function (V) {
        if (!B(this).length) {
            return this
        }
        B(this).data("fancybox", B.extend({}, V, (B.metadata ? B(this).metadata() : {}))).unbind("click.fb").bind("click.fb", function (X) {
            X.preventDefault();
            if (P) {
                return
            }
            P = true;
            B(this).blur();
            j = [];
            C = 0;
            var W = B(this).attr("rel") || "";
            if (!W || W == "" || W === "nofollow") {
                j.push(this)
            } else {
                j = B("a[rel=" + W + "], area[rel=" + W + "]");
                C = j.index(this)
            }
            w();
            return
        });
        return this
    };
    B.fancybox = function (Y) {
        var X;
        if (P) {
            return
        }
        P = true;
        X = typeof arguments[1] !== "undefined" ? arguments[1] : {};
        j = [];
        C = parseInt(X.index, 10) || 0;
        if (B.isArray(Y)) {
            for (var W = 0, V = Y.length; W < V; W++) {
                if (typeof Y[W] == "object") {
                    B(Y[W]).data("fancybox", B.extend({}, X, Y[W]))
                } else {
                    Y[W] = B({}).data("fancybox", B.extend({content: Y[W]}, X))
                }
            }
            j = jQuery.merge(j, Y)
        } else {
            if (typeof Y == "object") {
                B(Y).data("fancybox", B.extend({}, X, Y))
            } else {
                Y = B({}).data("fancybox", B.extend({content: Y}, X))
            }
            j.push(Y)
        }
        if (C > j.length || C < 0) {
            C = 0
        }
        w()
    };
    B.fancybox.showActivity = function () {
        clearInterval(p);
        T.show();
        p = setInterval(a, 66)
    };
    B.fancybox.hideActivity = function () {
        T.hide()
    };
    B.fancybox.next = function () {
        return B.fancybox.pos(e + 1)
    };
    B.fancybox.prev = function () {
        return B.fancybox.pos(e - 1)
    };
    B.fancybox.pos = function (V) {
        if (P) {
            return
        }
        V = parseInt(V);
        j = y;
        if (V > -1 && V < y.length) {
            C = V;
            w()
        } else {
            if (G.cyclic && y.length > 1) {
                C = V >= y.length ? 0 : y.length - 1;
                w()
            }
        }
        return
    };
    B.fancybox.cancel = function () {
        if (P) {
            return
        }
        P = true;
        B.event.trigger("fancybox-cancel");
        r();
        H.onCancel(j, C, H);
        P = false
    };
    B.fancybox.close = function () {
        if (P || M.is(":hidden")) {
            return
        }
        P = true;
        if (G && false === G.onCleanup(y, e, G)) {
            P = false;
            return
        }
        r();
        B(J.add(O).add(z)).hide();
        B(m.add(Q)).unbind();
        B(window).unbind("resize.fb scroll.fb");
        B(document).unbind("keydown.fb");
        m.find("iframe").attr("src", S && /^https/i.test(window.location.href || "") ? "javascript:void(false)" : "about:blank");
        if (G.titlePosition !== "inside") {
            A.empty()
        }
        M.stop();
        function V() {
            Q.fadeOut("fast");
            A.empty();
            M.hide();
            B.event.trigger("fancybox-cleanup");
            m.empty();
            G.onClosed(y, e, G);
            y = H = [];
            e = C = 0;
            G = H = {};
            P = false
        }

        if (G.transitionOut == "elastic") {
            b = I();
            var W = M.position();
            c = {top: W.top, left: W.left, width: M.width(), height: M.height()};
            if (G.opacity) {
                c.opacity = 1
            }
            A.empty();
            s.prop = 1;
            B(s).animate({prop: 0}, {duration: G.speedOut, easing: G.easingOut, step: U, complete: V})
        } else {
            M.fadeOut(G.transitionOut == "none" ? 0 : G.speedOut, V)
        }
    };

})(jQuery);
(function (c, d) {
    c.fn.jPlayer = function (h) {
        var g = "jPlayer";
        var e = typeof h === "string", f = Array.prototype.slice.call(arguments, 1), i = this;
        h = !e && f.length ? c.extend.apply(null, [true, h].concat(f)) : h;
        if (e && h.charAt(0) === "_") {
            return i
        }
        if (e) {
            this.each(function () {
                var j = c.data(this, g), k = j && c.isFunction(j[h]) ? j[h].apply(j, f) : j;
                if (k !== j && k !== d) {
                    i = k;
                    return false
                }
            })
        } else {
            this.each(function () {
                var j = c.data(this, g);
                if (j) {
                    j.option(h || {})
                } else {
                    c.data(this, g, new c.jPlayer(h, this))
                }
            })
        }
        return i
    };
    c.jPlayer = function (f, g) {
        if (arguments.length) {
            this.element = c(g);
            this.options = c.extend(true, {}, this.options, f);
            var e = this;
            this.element.bind("remove.jPlayer", function () {
                e.destroy()
            });
            this._init()
        }
    };
    c.jPlayer.emulateMethods = "load play pause";
    c.jPlayer.emulateStatus = "src readyState networkState currentTime duration paused ended playbackRate";
    c.jPlayer.emulateOptions = "muted volume";
    c.jPlayer.reservedEvent = "ready flashreset resize repeat error warning";
    c.jPlayer.event = {
        ready: "jPlayer_ready",
        flashreset: "jPlayer_flashreset",
        resize: "jPlayer_resize",
        repeat: "jPlayer_repeat",
        click: "jPlayer_click",
        error: "jPlayer_error",
        warning: "jPlayer_warning",
        loadstart: "jPlayer_loadstart",
        progress: "jPlayer_progress",
        suspend: "jPlayer_suspend",
        abort: "jPlayer_abort",
        emptied: "jPlayer_emptied",
        stalled: "jPlayer_stalled",
        play: "jPlayer_play",
        pause: "jPlayer_pause",
        loadedmetadata: "jPlayer_loadedmetadata",
        loadeddata: "jPlayer_loadeddata",
        waiting: "jPlayer_waiting",
        playing: "jPlayer_playing",
        canplay: "jPlayer_canplay",
        canplaythrough: "jPlayer_canplaythrough",
        seeking: "jPlayer_seeking",
        seeked: "jPlayer_seeked",
        timeupdate: "jPlayer_timeupdate",
        ended: "jPlayer_ended",
        ratechange: "jPlayer_ratechange",
        durationchange: "jPlayer_durationchange",
        volumechange: "jPlayer_volumechange"
    };
    c.jPlayer.htmlEvent = ["loadstart", "abort", "emptied", "stalled", "loadedmetadata", "loadeddata", "canplay", "canplaythrough", "ratechange"];
    c.jPlayer.pause = function () {
        c.each(c.jPlayer.prototype.instances, function (f, e) {
            if (e.data("jPlayer").status.srcSet) {
                e.jPlayer("pause")
            }
        })
    };
    c.jPlayer.timeFormat = {
        showHour: false,
        showMin: true,
        showSec: true,
        padHour: false,
        padMin: true,
        padSec: true,
        sepHour: ":",
        sepMin: ":",
        sepSec: ""
    };
    c.jPlayer.convertTime = function (j) {
        var k = new Date(j * 1000);
        var f = k.getUTCHours();
        var h = k.getUTCMinutes();
        var i = k.getUTCSeconds();
        var g = (c.jPlayer.timeFormat.padHour && f < 10) ? "0" + f : f;
        var l = (c.jPlayer.timeFormat.padMin && h < 10) ? "0" + h : h;
        var e = (c.jPlayer.timeFormat.padSec && i < 10) ? "0" + i : i;
        return ((c.jPlayer.timeFormat.showHour) ? g + c.jPlayer.timeFormat.sepHour : "") + ((c.jPlayer.timeFormat.showMin) ? l + c.jPlayer.timeFormat.sepMin : "") + ((c.jPlayer.timeFormat.showSec) ? e + c.jPlayer.timeFormat.sepSec : "")
    };
    c.jPlayer.uaBrowser = function (j) {
        var f = j.toLowerCase();
        var h = /(webkit)[ \/]([\w.]+)/;
        var k = /(opera)(?:.*version)?[ \/]([\w.]+)/;
        var g = /(msie) ([\w.]+)/;
        var i = /(mozilla)(?:.*? rv:([\w.]+))?/;
        var e = h.exec(f) || k.exec(f) || g.exec(f) || f.indexOf("compatible") < 0 && i.exec(f) || [];
        return {browser: e[1] || "", version: e[2] || "0"}
    };
    c.jPlayer.uaPlatform = function (k) {
        var h = k.toLowerCase();
        var l = /(ipad|iphone|ipod|android|blackberry|playbook|windows ce|webos)/;
        var j = /(ipad|playbook)/;
        var g = /(android)/;
        var i = /(mobile)/;
        var e = l.exec(h) || [];
        var f = j.exec(h) || !i.exec(h) && g.exec(h) || [];
        if (e[1]) {
            e[1] = e[1].replace(/\s/g, "_")
        }
        return {platform: e[1] || "", tablet: f[1] || ""}
    };
    c.jPlayer.browser = {};
    c.jPlayer.platform = {};
    var b = c.jPlayer.uaBrowser(navigator.userAgent);
    if (b.browser) {
        c.jPlayer.browser[b.browser] = true;
        c.jPlayer.browser.version = b.version
    }
    var a = c.jPlayer.uaPlatform(navigator.userAgent);
    if (a.platform) {
        c.jPlayer.platform[a.platform] = true;
        c.jPlayer.platform.mobile = !a.tablet;
        c.jPlayer.platform.tablet = !!a.tablet
    }
    c.jPlayer.prototype = {
        count: 0,
        version: {script: "2.1.0", needFlash: "2.1.0", flash: "unknown"},
        options: {
            swfPath: "js",
            solution: "html, flash",
            supplied: "mp3",
            preload: "metadata",
            volume: 0.8,
            muted: false,
            wmode: "opaque",
            backgroundColor: "#000000",
            cssSelectorAncestor: "#jp_container_1",
            cssSelector: {
                videoPlay: ".jp-video-play",
                play: ".jp-play",
                pause: ".jp-pause",
                stop: ".jp-stop",
                seekBar: ".jp-seek-bar",
                playBar: ".jp-play-bar",
                mute: ".jp-mute",
                unmute: ".jp-unmute",
                volumeBar: ".jp-volume-bar",
                volumeBarValue: ".jp-volume-bar-value",
                volumeMax: ".jp-volume-max",
                currentTime: ".jp-current-time",
                duration: ".jp-duration",
                fullScreen: ".jp-full-screen",
                restoreScreen: ".jp-restore-screen",
                repeat: ".jp-repeat",
                repeatOff: ".jp-repeat-off",
                gui: ".jp-gui",
                noSolution: ".jp-no-solution"
            },
            fullScreen: false,
            autohide: {restored: false, full: true, fadeIn: 200, fadeOut: 600, hold: 1000},
            loop: false,
            repeat: function (e) {
                if (e.jPlayer.options.loop) {
                    c(this).unbind(".jPlayerRepeat").bind(c.jPlayer.event.ended + ".jPlayer.jPlayerRepeat", function () {
                        c(this).jPlayer("play")
                    })
                } else {
                    c(this).unbind(".jPlayerRepeat")
                }
            },
            nativeVideoControls: {},
            noFullScreen: {
                msie: /msie [0-6]/,
                ipad: /ipad.*?os [0-4]/,
                iphone: /iphone/,
                ipod: /ipod/,
                android_pad: /android [0-3](?!.*?mobile)/,
                android_phone: /android.*?mobile/,
                blackberry: /blackberry/,
                windows_ce: /windows ce/,
                webos: /webos/
            },
            noVolume: {
                ipad: /ipad/,
                iphone: /iphone/,
                ipod: /ipod/,
                android_pad: /android(?!.*?mobile)/,
                android_phone: /android.*?mobile/,
                blackberry: /blackberry/,
                windows_ce: /windows ce/,
                webos: /webos/,
                playbook: /playbook/
            },
            verticalVolume: false,
            idPrefix: "jp",
            noConflict: "jQuery",
            emulateHtml: false,
            errorAlerts: false,
            warningAlerts: false
        },
        optionsAudio: {
            size: {width: "0px", height: "0px", cssClass: ""},
            sizeFull: {width: "0px", height: "0px", cssClass: ""}
        },
        optionsVideo: {
            size: {width: "480px", height: "270px", cssClass: "jp-video-270p"},
            sizeFull: {width: "100%", height: "100%", cssClass: "jp-video-full"}
        },
        instances: {},
        status: {
            src: "",
            media: {},
            paused: true,
            format: {},
            formatType: "",
            waitForPlay: true,
            waitForLoad: true,
            srcSet: false,
            video: false,
            seekPercent: 0,
            currentPercentRelative: 0,
            currentPercentAbsolute: 0,
            currentTime: 0,
            duration: 0,
            readyState: 0,
            networkState: 0,
            playbackRate: 1,
            ended: 0
        },
        internal: {ready: false},
        solution: {html: true, flash: true},
        format: {
            mp3: {codec: 'audio/mpeg; codecs="mp3"', flashCanPlay: true, media: "audio"},
            m4a: {codec: 'audio/mp4; codecs="mp4a.40.2"', flashCanPlay: true, media: "audio"},
            oga: {codec: 'audio/ogg; codecs="vorbis"', flashCanPlay: false, media: "audio"},
            wav: {codec: 'audio/wav; codecs="1"', flashCanPlay: false, media: "audio"},
            webma: {codec: 'audio/webm; codecs="vorbis"', flashCanPlay: false, media: "audio"},
            fla: {codec: "audio/x-flv", flashCanPlay: true, media: "audio"},
            m4v: {codec: 'video/mp4; codecs="avc1.42E01E, mp4a.40.2"', flashCanPlay: true, media: "video"},
            ogv: {codec: 'video/ogg; codecs="theora, vorbis"', flashCanPlay: false, media: "video"},
            webmv: {codec: 'video/webm; codecs="vorbis, vp8"', flashCanPlay: false, media: "video"},
            flv: {codec: "video/x-flv", flashCanPlay: true, media: "video"}
        },
        _init: function () {
            var f = this;
            this.element.empty();
            this.status = c.extend({}, this.status);
            this.internal = c.extend({}, this.internal);
            this.internal.domNode = this.element.get(0);
            this.formats = [];
            this.solutions = [];
            this.require = {};
            this.htmlElement = {};
            this.html = {};
            this.html.audio = {};
            this.html.video = {};
            this.flash = {};
            this.css = {};
            this.css.cs = {};
            this.css.jq = {};
            this.ancestorJq = [];
            this.options.volume = this._limitValue(this.options.volume, 0, 1);
            c.each(this.options.supplied.toLowerCase().split(","), function (o, i) {
                var m = i.replace(/^\s+|\s+$/g, "");
                if (f.format[m]) {
                    var n = false;
                    c.each(f.formats, function (q, p) {
                        if (m === p) {
                            n = true;
                            return false
                        }
                    });
                    if (!n) {
                        f.formats.push(m)
                    }
                }
            });
            c.each(this.options.solution.toLowerCase().split(","), function (o, m) {
                var i = m.replace(/^\s+|\s+$/g, "");
                if (f.solution[i]) {
                    var n = false;
                    c.each(f.solutions, function (q, p) {
                        if (i === p) {
                            n = true;
                            return false
                        }
                    });
                    if (!n) {
                        f.solutions.push(i)
                    }
                }
            });
            this.internal.instance = "jp_" + this.count;
            this.instances[this.internal.instance] = this.element;
            if (!this.element.attr("id")) {
                this.element.attr("id", this.options.idPrefix + "_jplayer_" + this.count)
            }
            this.internal.self = c.extend({}, {id: this.element.attr("id"), jq: this.element});
            this.internal.audio = c.extend({}, {id: this.options.idPrefix + "_audio_" + this.count, jq: d});
            this.internal.video = c.extend({}, {id: this.options.idPrefix + "_video_" + this.count, jq: d});
            this.internal.flash = c.extend({}, {
                id: this.options.idPrefix + "_flash_" + this.count,
                jq: d,
                swf: this.options.swfPath + (this.options.swfPath.toLowerCase().slice(-4) !== ".swf" ? (this.options.swfPath && this.options.swfPath.slice(-1) !== "/" ? "/" : "") + "Jplayer.swf" : "")
            });
            this.internal.poster = c.extend({}, {id: this.options.idPrefix + "_poster_" + this.count, jq: d});
            c.each(c.jPlayer.event, function (i, m) {
                if (f.options[i] !== d) {
                    f.element.bind(m + ".jPlayer", f.options[i]);
                    f.options[i] = d
                }
            });
            this.require.audio = false;
            this.require.video = false;
            c.each(this.formats, function (i, m) {
                f.require[f.format[m].media] = true
            });
            if (this.require.video) {
                this.options = c.extend(true, {}, this.optionsVideo, this.options)
            } else {
                this.options = c.extend(true, {}, this.optionsAudio, this.options)
            }
            this._setSize();
            this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
            this.status.noFullScreen = this._uaBlocklist(this.options.noFullScreen);
            this.status.noVolume = this._uaBlocklist(this.options.noVolume);
            this._restrictNativeVideoControls();
            this.htmlElement.poster = document.createElement("img");
            this.htmlElement.poster.id = this.internal.poster.id;
            this.htmlElement.poster.onload = function () {
                if (!f.status.video || f.status.waitForPlay) {
                    f.internal.poster.jq.show()
                }
            };
            this.element.append(this.htmlElement.poster);
            this.internal.poster.jq = c("#" + this.internal.poster.id);
            this.internal.poster.jq.css({width: this.status.width, height: this.status.height});
            this.internal.poster.jq.hide();
            this.internal.poster.jq.bind("click.jPlayer", function () {
                f._trigger(c.jPlayer.event.click)
            });
            this.html.audio.available = false;
            if (this.require.audio) {
                this.htmlElement.audio = document.createElement("audio");
                this.htmlElement.audio.id = this.internal.audio.id;
                this.html.audio.available = !!this.htmlElement.audio.canPlayType && this._testCanPlayType(this.htmlElement.audio)
            }
            this.html.video.available = false;
            if (this.require.video) {
                this.htmlElement.video = document.createElement("video");
                this.htmlElement.video.id = this.internal.video.id;
                this.html.video.available = !!this.htmlElement.video.canPlayType && this._testCanPlayType(this.htmlElement.video)
            }
            this.flash.available = this._checkForFlash(10);
            this.html.canPlay = {};
            this.flash.canPlay = {};
            c.each(this.formats, function (i, m) {
                f.html.canPlay[m] = f.html[f.format[m].media].available && "" !== f.htmlElement[f.format[m].media].canPlayType(f.format[m].codec);
                f.flash.canPlay[m] = f.format[m].flashCanPlay && f.flash.available
            });
            this.html.desired = false;
            this.flash.desired = false;
            c.each(this.solutions, function (n, i) {
                if (n === 0) {
                    f[i].desired = true
                } else {
                    var o = false;
                    var m = false;
                    c.each(f.formats, function (p, q) {
                        if (f[f.solutions[0]].canPlay[q]) {
                            if (f.format[q].media === "video") {
                                m = true
                            } else {
                                o = true
                            }
                        }
                    });
                    f[i].desired = (f.require.audio && !o) || (f.require.video && !m)
                }
            });
            this.html.support = {};
            this.flash.support = {};
            c.each(this.formats, function (i, m) {
                f.html.support[m] = f.html.canPlay[m] && f.html.desired;
                f.flash.support[m] = f.flash.canPlay[m] && f.flash.desired
            });
            this.html.used = false;
            this.flash.used = false;
            c.each(this.solutions, function (m, i) {
                c.each(f.formats, function (n, o) {
                    if (f[i].support[o]) {
                        f[i].used = true;
                        return false
                    }
                })
            });
            this._resetActive();
            this._resetGate();
            this._cssSelectorAncestor(this.options.cssSelectorAncestor);
            if (!(this.html.used || this.flash.used)) {
                this._error({
                    type: c.jPlayer.error.NO_SOLUTION,
                    context: "{solution:'" + this.options.solution + "', supplied:'" + this.options.supplied + "'}",
                    message: c.jPlayer.errorMsg.NO_SOLUTION,
                    hint: c.jPlayer.errorHint.NO_SOLUTION
                });
                if (this.css.jq.noSolution.length) {
                    this.css.jq.noSolution.show()
                }
            } else {
                if (this.css.jq.noSolution.length) {
                    this.css.jq.noSolution.hide()
                }
            }
            if (this.flash.used) {
                var j, k = "jQuery=" + encodeURI(this.options.noConflict) + "&id=" + encodeURI(this.internal.self.id) + "&vol=" + this.options.volume + "&muted=" + this.options.muted;
                if (c.browser.msie && Number(c.browser.version) <= 8) {
                    var e = '<object id="' + this.internal.flash.id + '" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="0" height="0"></object>';
                    var h = ['<param name="movie" value="' + this.internal.flash.swf + '" />', '<param name="FlashVars" value="' + k + '" />', '<param name="allowScriptAccess" value="always" />', '<param name="bgcolor" value="' + this.options.backgroundColor + '" />', '<param name="wmode" value="' + this.options.wmode + '" />'];
                    j = document.createElement(e);
                    for (var g = 0; g < h.length; g++) {
                        j.appendChild(document.createElement(h[g]))
                    }
                } else {
                    var l = function (m, q, i) {
                        var o = document.createElement("param");
                        o.setAttribute("name", q);
                        o.setAttribute("value", i);
                        m.appendChild(o)
                    };
                    j = document.createElement("object");
                    j.setAttribute("id", this.internal.flash.id);
                    j.setAttribute("data", this.internal.flash.swf);
                    j.setAttribute("type", "application/x-shockwave-flash");
                    j.setAttribute("width", "1");
                    j.setAttribute("height", "1");
                    l(j, "flashvars", k);
                    l(j, "allowscriptaccess", "always");
                    l(j, "bgcolor", this.options.backgroundColor);
                    l(j, "wmode", this.options.wmode)
                }
                this.element.append(j);
                this.internal.flash.jq = c(j)
            }
            if (this.html.used) {
                if (this.html.audio.available) {
                    this._addHtmlEventListeners(this.htmlElement.audio, this.html.audio);
                    this.element.append(this.htmlElement.audio);
                    this.internal.audio.jq = c("#" + this.internal.audio.id)
                }
                if (this.html.video.available) {
                    this._addHtmlEventListeners(this.htmlElement.video, this.html.video);
                    this.element.append(this.htmlElement.video);
                    this.internal.video.jq = c("#" + this.internal.video.id);
                    if (this.status.nativeVideoControls) {
                        this.internal.video.jq.css({width: this.status.width, height: this.status.height})
                    } else {
                        this.internal.video.jq.css({width: "0px", height: "0px"})
                    }
                    this.internal.video.jq.bind("click.jPlayer", function () {
                        f._trigger(c.jPlayer.event.click)
                    })
                }
            }
            if (this.options.emulateHtml) {
                this._emulateHtmlBridge()
            }
            if (this.html.used && !this.flash.used) {
                setTimeout(function () {
                    f.internal.ready = true;
                    f.version.flash = "n/a";
                    f._trigger(c.jPlayer.event.repeat);
                    f._trigger(c.jPlayer.event.ready)
                }, 100)
            }
            this._updateNativeVideoControls();
            this._updateInterface();
            this._updateButtons(false);
            this._updateAutohide();
            this._updateVolume(this.options.volume);
            this._updateMute(this.options.muted);
            if (this.css.jq.videoPlay.length) {
                this.css.jq.videoPlay.hide()
            }
            c.jPlayer.prototype.count++
        },
        destroy: function () {
            this.clearMedia();
            this._removeUiClass();
            if (this.css.jq.currentTime.length) {
                this.css.jq.currentTime.text("")
            }
            if (this.css.jq.duration.length) {
                this.css.jq.duration.text("")
            }
            c.each(this.css.jq, function (e, f) {
                if (f.length) {
                    f.unbind(".jPlayer")
                }
            });
            this.internal.poster.jq.unbind(".jPlayer");
            if (this.internal.video.jq) {
                this.internal.video.jq.unbind(".jPlayer")
            }
            if (this.options.emulateHtml) {
                this._destroyHtmlBridge()
            }
            this.element.removeData("jPlayer");
            this.element.unbind(".jPlayer");
            this.element.empty();
            delete this.instances[this.internal.instance]
        },
        enable: function () {
        },
        disable: function () {
        },
        _testCanPlayType: function (f) {
            try {
                f.canPlayType(this.format.mp3.codec);
                return true
            } catch (e) {
                return false
            }
        },
        _uaBlocklist: function (f) {
            var e = navigator.userAgent.toLowerCase(), g = false;
            c.each(f, function (i, h) {
                if (h && h.test(e)) {
                    g = true;
                    return false
                }
            });
            return g
        },
        _restrictNativeVideoControls: function () {
            if (this.require.audio) {
                if (this.status.nativeVideoControls) {
                    this.status.nativeVideoControls = false;
                    this.status.noFullScreen = true
                }
            }
        },
        _updateNativeVideoControls: function () {
            if (this.html.video.available && this.html.used) {
                this.htmlElement.video.controls = this.status.nativeVideoControls;
                this._updateAutohide();
                if (this.status.nativeVideoControls && this.require.video) {
                    this.internal.poster.jq.hide();
                    this.internal.video.jq.css({width: this.status.width, height: this.status.height})
                } else {
                    if (this.status.waitForPlay && this.status.video) {
                        this.internal.poster.jq.show();
                        this.internal.video.jq.css({width: "0px", height: "0px"})
                    }
                }
            }
        },
        _addHtmlEventListeners: function (e, g) {
            var f = this;
            e.preload = this.options.preload;
            e.muted = this.options.muted;
            e.volume = this.options.volume;
            e.addEventListener("progress", function () {
                if (g.gate) {
                    f._getHtmlStatus(e);
                    f._updateInterface();
                    f._trigger(c.jPlayer.event.progress)
                }
            }, false);
            e.addEventListener("timeupdate", function () {
                if (g.gate) {
                    f._getHtmlStatus(e);
                    f._updateInterface();
                    f._trigger(c.jPlayer.event.timeupdate)
                }
            }, false);
            e.addEventListener("durationchange", function () {
                if (g.gate) {
                    f.status.duration = this.duration;
                    f._getHtmlStatus(e);
                    f._updateInterface();
                    f._trigger(c.jPlayer.event.durationchange)
                }
            }, false);
            e.addEventListener("play", function () {
                if (g.gate) {
                    f._updateButtons(true);
                    f._html_checkWaitForPlay();
                    f._trigger(c.jPlayer.event.play)
                }
            }, false);
            e.addEventListener("playing", function () {
                if (g.gate) {
                    f._updateButtons(true);
                    f._seeked();
                    f._trigger(c.jPlayer.event.playing)
                }
            }, false);
            e.addEventListener("pause", function () {
                if (g.gate) {
                    f._updateButtons(false);
                    f._trigger(c.jPlayer.event.pause)
                }
            }, false);
            e.addEventListener("waiting", function () {
                if (g.gate) {
                    f._seeking();
                    f._trigger(c.jPlayer.event.waiting)
                }
            }, false);
            e.addEventListener("seeking", function () {
                if (g.gate) {
                    f._seeking();
                    f._trigger(c.jPlayer.event.seeking)
                }
            }, false);
            e.addEventListener("seeked", function () {
                if (g.gate) {
                    f._seeked();
                    f._trigger(c.jPlayer.event.seeked)
                }
            }, false);
            e.addEventListener("volumechange", function () {
                if (g.gate) {
                    f.options.volume = e.volume;
                    f.options.muted = e.muted;
                    f._updateMute();
                    f._updateVolume();
                    f._trigger(c.jPlayer.event.volumechange)
                }
            }, false);
            e.addEventListener("suspend", function () {
                if (g.gate) {
                    f._seeked();
                    f._trigger(c.jPlayer.event.suspend)
                }
            }, false);
            e.addEventListener("ended", function () {
                if (g.gate) {
                    if (!c.jPlayer.browser.webkit) {
                        f.htmlElement.media.currentTime = 0
                    }
                    f.htmlElement.media.pause();
                    f._updateButtons(false);
                    f._getHtmlStatus(e, true);
                    f._updateInterface();
                    f._trigger(c.jPlayer.event.ended)
                }
            }, false);
            e.addEventListener("error", function () {
                if (g.gate) {
                    f._updateButtons(false);
                    f._seeked();
                    if (f.status.srcSet) {
                        clearTimeout(f.internal.htmlDlyCmdId);
                        f.status.waitForLoad = true;
                        f.status.waitForPlay = true;
                        if (f.status.video && !f.status.nativeVideoControls) {
                            f.internal.video.jq.css({width: "0px", height: "0px"})
                        }
                        if (f._validString(f.status.media.poster) && !f.status.nativeVideoControls) {
                            f.internal.poster.jq.show()
                        }
                        if (f.css.jq.videoPlay.length) {
                            f.css.jq.videoPlay.show()
                        }
                        f._error({
                            type: c.jPlayer.error.URL,
                            context: f.status.src,
                            message: c.jPlayer.errorMsg.URL,
                            hint: c.jPlayer.errorHint.URL
                        })
                    }
                }
            }, false);
            c.each(c.jPlayer.htmlEvent, function (j, h) {
                e.addEventListener(this, function () {
                    if (g.gate) {
                        f._trigger(c.jPlayer.event[h])
                    }
                }, false)
            })
        },
        _getHtmlStatus: function (i, f) {
            var e = 0, j = 0, g = 0, h = 0, k = 0;
            if (i.duration) {
                this.status.duration = i.duration
            }
            e = i.currentTime;
            g = (this.status.duration > 0) ? 100 * e / this.status.duration : 0;
            if ((typeof i.seekable === "object") && (i.seekable.length > 0)) {
                h = (this.status.duration > 0) ? 100 * i.seekable.end(i.seekable.length - 1) / this.status.duration : 100;
                k = 100 * i.currentTime / i.seekable.end(i.seekable.length - 1)
            } else {
                h = 100;
                k = g
            }
            if (f) {
                e = 0;
                k = 0;
                g = 0
            }
            this.status.seekPercent = h;
            this.status.currentPercentRelative = k;
            this.status.currentPercentAbsolute = g;
            this.status.currentTime = e;
            this.status.readyState = i.readyState;
            this.status.networkState = i.networkState;
            this.status.playbackRate = i.playbackRate;
            this.status.ended = i.ended
        },
        _resetStatus: function () {
            this.status = c.extend({}, this.status, c.jPlayer.prototype.status)
        },
        _trigger: function (f, e, g) {
            var h = c.Event(f);
            h.jPlayer = {};
            h.jPlayer.version = c.extend({}, this.version);
            h.jPlayer.options = c.extend(true, {}, this.options);
            h.jPlayer.status = c.extend(true, {}, this.status);
            h.jPlayer.html = c.extend(true, {}, this.html);
            h.jPlayer.flash = c.extend(true, {}, this.flash);
            if (e) {
                h.jPlayer.error = c.extend({}, e)
            }
            if (g) {
                h.jPlayer.warning = c.extend({}, g)
            }
            this.element.trigger(h)
        },
        jPlayerFlashEvent: function (g, e) {
            if (g === c.jPlayer.event.ready) {
                if (!this.internal.ready) {
                    this.internal.ready = true;
                    this.internal.flash.jq.css({width: "0px", height: "0px"});
                    this.version.flash = e.version;
                    if (this.version.needFlash !== this.version.flash) {
                        this._error({
                            type: c.jPlayer.error.VERSION,
                            context: this.version.flash,
                            message: c.jPlayer.errorMsg.VERSION + this.version.flash,
                            hint: c.jPlayer.errorHint.VERSION
                        })
                    }
                    this._trigger(c.jPlayer.event.repeat);
                    this._trigger(g)
                } else {
                    if (this.flash.gate) {
                        if (this.status.srcSet) {
                            var h = this.status.currentTime, f = this.status.paused;
                            this.setMedia(this.status.media);
                            if (h > 0) {
                                if (f) {
                                    this.pause(h)
                                } else {
                                    this.play(h)
                                }
                            }
                        }
                        this._trigger(c.jPlayer.event.flashreset)
                    }
                }
            }
            if (this.flash.gate) {
                switch (g) {
                    case c.jPlayer.event.progress:
                        this._getFlashStatus(e);
                        this._updateInterface();
                        this._trigger(g);
                        break;
                    case c.jPlayer.event.timeupdate:
                        this._getFlashStatus(e);
                        this._updateInterface();
                        this._trigger(g);
                        break;
                    case c.jPlayer.event.play:
                        this._seeked();
                        this._updateButtons(true);
                        this._trigger(g);
                        break;
                    case c.jPlayer.event.pause:
                        this._updateButtons(false);
                        this._trigger(g);
                        break;
                    case c.jPlayer.event.ended:
                        this._updateButtons(false);
                        this._trigger(g);
                        break;
                    case c.jPlayer.event.click:
                        this._trigger(g);
                        break;
                    case c.jPlayer.event.error:
                        this.status.waitForLoad = true;
                        this.status.waitForPlay = true;
                        if (this.status.video) {
                            this.internal.flash.jq.css({width: "0px", height: "0px"})
                        }
                        if (this._validString(this.status.media.poster)) {
                            this.internal.poster.jq.show()
                        }
                        if (this.css.jq.videoPlay.length && this.status.video) {
                            this.css.jq.videoPlay.show()
                        }
                        if (this.status.video) {
                            this._flash_setVideo(this.status.media)
                        } else {
                            this._flash_setAudio(this.status.media)
                        }
                        this._updateButtons(false);
                        this._error({
                            type: c.jPlayer.error.URL,
                            context: e.src,
                            message: c.jPlayer.errorMsg.URL,
                            hint: c.jPlayer.errorHint.URL
                        });
                        break;
                    case c.jPlayer.event.seeking:
                        this._seeking();
                        this._trigger(g);
                        break;
                    case c.jPlayer.event.seeked:
                        this._seeked();
                        this._trigger(g);
                        break;
                    case c.jPlayer.event.ready:
                        break;
                    default:
                        this._trigger(g)
                }
            }
            return false
        },
        _getFlashStatus: function (e) {
            this.status.seekPercent = e.seekPercent;
            this.status.currentPercentRelative = e.currentPercentRelative;
            this.status.currentPercentAbsolute = e.currentPercentAbsolute;
            this.status.currentTime = e.currentTime;
            this.status.duration = e.duration;
            this.status.readyState = 4;
            this.status.networkState = 0;
            this.status.playbackRate = 1;
            this.status.ended = false
        },
        _updateButtons: function (e) {
            if (e !== d) {
                this.status.paused = !e;
                if (this.css.jq.play.length && this.css.jq.pause.length) {
                    if (e) {
                        this.css.jq.play.hide();
                        this.css.jq.pause.show()
                    } else {
                        this.css.jq.play.show();
                        this.css.jq.pause.hide()
                    }
                }
            }
            if (this.css.jq.restoreScreen.length && this.css.jq.fullScreen.length) {
                if (this.status.noFullScreen) {
                    this.css.jq.fullScreen.hide();
                    this.css.jq.restoreScreen.hide()
                } else {
                    if (this.options.fullScreen) {
                        this.css.jq.fullScreen.hide();
                        this.css.jq.restoreScreen.show()
                    } else {
                        this.css.jq.fullScreen.show();
                        this.css.jq.restoreScreen.hide()
                    }
                }
            }
            if (this.css.jq.repeat.length && this.css.jq.repeatOff.length) {
                if (this.options.loop) {
                    this.css.jq.repeat.hide();
                    this.css.jq.repeatOff.show()
                } else {
                    this.css.jq.repeat.show();
                    this.css.jq.repeatOff.hide()
                }
            }
        },
        _updateInterface: function () {
            if (this.css.jq.seekBar.length) {
                this.css.jq.seekBar.width(this.status.seekPercent + "%")
            }
            if (this.css.jq.playBar.length) {
                this.css.jq.playBar.width(this.status.currentPercentRelative + "%")
            }
            if (this.css.jq.currentTime.length) {
                this.css.jq.currentTime.text(c.jPlayer.convertTime(this.status.currentTime))
            }
            if (this.css.jq.duration.length) {
                this.css.jq.duration.text(c.jPlayer.convertTime(this.status.duration))
            }
        },
        _seeking: function () {
            if (this.css.jq.seekBar.length) {
                this.css.jq.seekBar.addClass("jp-seeking-bg")
            }
        },
        _seeked: function () {
            if (this.css.jq.seekBar.length) {
                this.css.jq.seekBar.removeClass("jp-seeking-bg")
            }
        },
        _resetGate: function () {
            this.html.audio.gate = false;
            this.html.video.gate = false;
            this.flash.gate = false
        },
        _resetActive: function () {
            this.html.active = false;
            this.flash.active = false
        },
        setMedia: function (g) {
            var f = this, e = false, h = this.status.media.poster !== g.poster;
            this._resetMedia();
            this._resetGate();
            this._resetActive();
            c.each(this.formats, function (i, k) {
                var j = f.format[k].media === "video";
                c.each(f.solutions, function (m, l) {
                    if (f[l].support[k] && f._validString(g[k])) {
                        var n = l === "html";
                        if (j) {
                            if (n) {
                                f.html.video.gate = true;
                                f._html_setVideo(g);
                                f.html.active = true
                            } else {
                                f.flash.gate = true;
                                f._flash_setVideo(g);
                                f.flash.active = true
                            }
                            if (f.css.jq.videoPlay.length) {
                                f.css.jq.videoPlay.show()
                            }
                            f.status.video = true
                        } else {
                            if (n) {
                                f.html.audio.gate = true;
                                f._html_setAudio(g);
                                f.html.active = true
                            } else {
                                f.flash.gate = true;
                                f._flash_setAudio(g);
                                f.flash.active = true
                            }
                            if (f.css.jq.videoPlay.length) {
                                f.css.jq.videoPlay.hide()
                            }
                            f.status.video = false
                        }
                        e = true;
                        return false
                    }
                });
                if (e) {
                    return false
                }
            });
            if (e) {
                if (!(this.status.nativeVideoControls && this.html.video.gate)) {
                    if (this._validString(g.poster)) {
                        if (h) {
                            this.htmlElement.poster.src = g.poster
                        } else {
                            this.internal.poster.jq.show()
                        }
                    }
                }
                this.status.srcSet = true;
                this.status.media = c.extend({}, g);
                this._updateButtons(false);
                this._updateInterface()
            } else {
                this._error({
                    type: c.jPlayer.error.NO_SUPPORT,
                    context: "{supplied:'" + this.options.supplied + "'}",
                    message: c.jPlayer.errorMsg.NO_SUPPORT,
                    hint: c.jPlayer.errorHint.NO_SUPPORT
                })
            }
        },
        _resetMedia: function () {
            this._resetStatus();
            this._updateButtons(false);
            this._updateInterface();
            this._seeked();
            this.internal.poster.jq.hide();
            clearTimeout(this.internal.htmlDlyCmdId);
            if (this.html.active) {
                this._html_resetMedia()
            } else {
                if (this.flash.active) {
                    this._flash_resetMedia()
                }
            }
        },
        clearMedia: function () {
            this._resetMedia();
            if (this.html.active) {
                this._html_clearMedia()
            } else {
                if (this.flash.active) {
                    this._flash_clearMedia()
                }
            }
            this._resetGate();
            this._resetActive()
        },
        load: function () {
            if (this.status.srcSet) {
                if (this.html.active) {
                    this._html_load()
                } else {
                    if (this.flash.active) {
                        this._flash_load()
                    }
                }
            } else {
                this._urlNotSetError("load")
            }
        },
        play: function (e) {
            e = (typeof e === "number") ? e : NaN;
            if (this.status.srcSet) {
                if (this.html.active) {
                    this._html_play(e)
                } else {
                    if (this.flash.active) {
                        this._flash_play(e)
                    }
                }
            } else {
                this._urlNotSetError("play")
            }
        },
        videoPlay: function (f) {
            this.play()
        },
        pause: function (e) {
            e = (typeof e === "number") ? e : NaN;
            if (this.status.srcSet) {
                if (this.html.active) {
                    this._html_pause(e)
                } else {
                    if (this.flash.active) {
                        this._flash_pause(e)
                    }
                }
            } else {
                this._urlNotSetError("pause")
            }
        },
        pauseOthers: function () {
            var e = this;
            c.each(this.instances, function (g, f) {
                if (e.element !== f) {
                    if (f.data("jPlayer").status.srcSet) {
                        f.jPlayer("pause")
                    }
                }
            })
        },
        stop: function () {
            if (this.status.srcSet) {
                if (this.html.active) {
                    this._html_pause(0)
                } else {
                    if (this.flash.active) {
                        this._flash_pause(0)
                    }
                }
            } else {
                this._urlNotSetError("stop")
            }
        },
        playHead: function (e) {
            e = this._limitValue(e, 0, 100);
            if (this.status.srcSet) {
                if (this.html.active) {
                    this._html_playHead(e)
                } else {
                    if (this.flash.active) {
                        this._flash_playHead(e)
                    }
                }
            } else {
                this._urlNotSetError("playHead")
            }
        },
        _muted: function (e) {
            this.options.muted = e;
            if (this.html.used) {
                this._html_mute(e)
            }
            if (this.flash.used) {
                this._flash_mute(e)
            }
            if (!this.html.video.gate && !this.html.audio.gate) {
                this._updateMute(e);
                this._updateVolume(this.options.volume);
                this._trigger(c.jPlayer.event.volumechange)
            }
        },
        mute: function (e) {
            e = e === d ? true : !!e;
            this._muted(e)
        },
        unmute: function (e) {
            e = e === d ? true : !!e;
            this._muted(!e)
        },
        _updateMute: function (e) {
            if (e === d) {
                e = this.options.muted
            }
            if (this.css.jq.mute.length && this.css.jq.unmute.length) {
                if (this.status.noVolume) {
                    this.css.jq.mute.hide();
                    this.css.jq.unmute.hide()
                } else {
                    if (e) {
                        this.css.jq.mute.hide();
                        this.css.jq.unmute.show()
                    } else {
                        this.css.jq.mute.show();
                        this.css.jq.unmute.hide()
                    }
                }
            }
        },
        volume: function (e) {
            e = this._limitValue(e, 0, 1);
            this.options.volume = e;
            if (this.html.used) {
                this._html_volume(e)
            }
            if (this.flash.used) {
                this._flash_volume(e)
            }
            if (!this.html.video.gate && !this.html.audio.gate) {
                this._updateVolume(e);
                this._trigger(c.jPlayer.event.volumechange)
            }
        },
        volumeBar: function (j) {
            if (this.css.jq.volumeBar.length) {
                var k = this.css.jq.volumeBar.offset(), f = j.pageX - k.left, g = this.css.jq.volumeBar.width(), l = this.css.jq.volumeBar.height() - j.pageY + k.top, i = this.css.jq.volumeBar.height();
                if (this.options.verticalVolume) {
                    this.volume(l / i)
                } else {
                    this.volume(f / g)
                }
            }
            if (this.options.muted) {
                this._muted(false)
            }
        },
        volumeBarValue: function (f) {
            this.volumeBar(f)
        },
        _updateVolume: function (e) {
            if (e === d) {
                e = this.options.volume
            }
            e = this.options.muted ? 0 : e;
            if (this.status.noVolume) {
                if (this.css.jq.volumeBar.length) {
                    this.css.jq.volumeBar.hide()
                }
                if (this.css.jq.volumeBarValue.length) {
                    this.css.jq.volumeBarValue.hide()
                }
                if (this.css.jq.volumeMax.length) {
                    this.css.jq.volumeMax.hide()
                }
            } else {
                if (this.css.jq.volumeBar.length) {
                    this.css.jq.volumeBar.show()
                }
                if (this.css.jq.volumeBarValue.length) {
                    this.css.jq.volumeBarValue.show();
                    this.css.jq.volumeBarValue[this.options.verticalVolume ? "height" : "width"]((e * 100) + "%")
                }
                if (this.css.jq.volumeMax.length) {
                    this.css.jq.volumeMax.show()
                }
            }
        },
        volumeMax: function () {
            this.volume(1);
            if (this.options.muted) {
                this._muted(false)
            }
        },
        _cssSelectorAncestor: function (f) {
            var e = this;
            this.options.cssSelectorAncestor = f;
            this._removeUiClass();
            this.ancestorJq = f ? c(f) : [];
            if (f && this.ancestorJq.length !== 1) {
                this._warning({
                    type: c.jPlayer.warning.CSS_SELECTOR_COUNT,
                    context: f,
                    message: c.jPlayer.warningMsg.CSS_SELECTOR_COUNT + this.ancestorJq.length + " found for cssSelectorAncestor.",
                    hint: c.jPlayer.warningHint.CSS_SELECTOR_COUNT
                })
            }
            this._addUiClass();
            c.each(this.options.cssSelector, function (g, h) {
                e._cssSelector(g, h)
            })
        },
        _cssSelector: function (g, h) {
            var e = this;
            if (typeof h === "string") {
                if (c.jPlayer.prototype.options.cssSelector[g]) {
                    if (this.css.jq[g] && this.css.jq[g].length) {
                        this.css.jq[g].unbind(".jPlayer")
                    }
                    this.options.cssSelector[g] = h;
                    this.css.cs[g] = this.options.cssSelectorAncestor + " " + h;
                    if (h) {
                        this.css.jq[g] = c(this.css.cs[g])
                    } else {
                        this.css.jq[g] = []
                    }
                    if (this.css.jq[g].length) {
                        var f = function (i) {
                            e[g](i);
                            c(this).blur();
                            return false
                        };
                        this.css.jq[g].bind("click.jPlayer", f)
                    }
                    if (h && this.css.jq[g].length !== 1) {
                        this._warning({
                            type: c.jPlayer.warning.CSS_SELECTOR_COUNT,
                            context: this.css.cs[g],
                            message: c.jPlayer.warningMsg.CSS_SELECTOR_COUNT + this.css.jq[g].length + " found for " + g + " method.",
                            hint: c.jPlayer.warningHint.CSS_SELECTOR_COUNT
                        })
                    }
                } else {
                    this._warning({
                        type: c.jPlayer.warning.CSS_SELECTOR_METHOD,
                        context: g,
                        message: c.jPlayer.warningMsg.CSS_SELECTOR_METHOD,
                        hint: c.jPlayer.warningHint.CSS_SELECTOR_METHOD
                    })
                }
            } else {
                this._warning({
                    type: c.jPlayer.warning.CSS_SELECTOR_STRING,
                    context: h,
                    message: c.jPlayer.warningMsg.CSS_SELECTOR_STRING,
                    hint: c.jPlayer.warningHint.CSS_SELECTOR_STRING
                })
            }
        },
        seekBar: function (i) {
            if (this.css.jq.seekBar) {
                var j = this.css.jq.seekBar.offset();
                var f = i.pageX - j.left;
                var g = this.css.jq.seekBar.width();
                var h = 100 * f / g;
                this.playHead(h)
            }
        },
        playBar: function (f) {
            this.seekBar(f)
        },
        repeat: function () {
            this._loop(true)
        },
        repeatOff: function () {
            this._loop(false)
        },
        _loop: function (e) {
            if (this.options.loop !== e) {
                this.options.loop = e;
                this._updateButtons();
                this._trigger(c.jPlayer.event.repeat)
            }
        },
        currentTime: function (f) {
        },
        duration: function (f) {
        },
        gui: function (f) {
        },
        noSolution: function (f) {
        },
        option: function (k, n) {
            var f = k;
            if (arguments.length === 0) {
                return c.extend(true, {}, this.options)
            }
            if (typeof k === "string") {
                var m = k.split(".");
                if (n === d) {
                    var h = c.extend(true, {}, this.options);
                    for (var g = 0; g < m.length; g++) {
                        if (h[m[g]] !== d) {
                            h = h[m[g]]
                        } else {
                            this._warning({
                                type: c.jPlayer.warning.OPTION_KEY,
                                context: k,
                                message: c.jPlayer.warningMsg.OPTION_KEY,
                                hint: c.jPlayer.warningHint.OPTION_KEY
                            });
                            return d
                        }
                    }
                    return h
                }
                f = {};
                var l = f;
                for (var e = 0; e < m.length; e++) {
                    if (e < m.length - 1) {
                        l[m[e]] = {};
                        l = l[m[e]]
                    } else {
                        l[m[e]] = n
                    }
                }
            }
            this._setOptions(f);
            return this
        },
        _setOptions: function (f) {
            var e = this;
            c.each(f, function (g, h) {
                e._setOption(g, h)
            });
            return this
        },
        _setOption: function (f, g) {
            var e = this;
            switch (f) {
                case"volume":
                    this.volume(g);
                    break;
                case"muted":
                    this._muted(g);
                    break;
                case"cssSelectorAncestor":
                    this._cssSelectorAncestor(g);
                    break;
                case"cssSelector":
                    c.each(g, function (h, i) {
                        e._cssSelector(h, i)
                    });
                    break;
                case"fullScreen":
                    if (this.options[f] !== g) {
                        this._removeUiClass();
                        this.options[f] = g;
                        this._refreshSize()
                    }
                    break;
                case"size":
                    if (!this.options.fullScreen && this.options[f].cssClass !== g.cssClass) {
                        this._removeUiClass()
                    }
                    this.options[f] = c.extend({}, this.options[f], g);
                    this._refreshSize();
                    break;
                case"sizeFull":
                    if (this.options.fullScreen && this.options[f].cssClass !== g.cssClass) {
                        this._removeUiClass()
                    }
                    this.options[f] = c.extend({}, this.options[f], g);
                    this._refreshSize();
                    break;
                case"autohide":
                    this.options[f] = c.extend({}, this.options[f], g);
                    this._updateAutohide();
                    break;
                case"loop":
                    this._loop(g);
                    break;
                case"nativeVideoControls":
                    this.options[f] = c.extend({}, this.options[f], g);
                    this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
                    this._restrictNativeVideoControls();
                    this._updateNativeVideoControls();
                    break;
                case"noFullScreen":
                    this.options[f] = c.extend({}, this.options[f], g);
                    this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
                    this.status.noFullScreen = this._uaBlocklist(this.options.noFullScreen);
                    this._restrictNativeVideoControls();
                    this._updateButtons();
                    break;
                case"noVolume":
                    this.options[f] = c.extend({}, this.options[f], g);
                    this.status.noVolume = this._uaBlocklist(this.options.noVolume);
                    this._updateVolume();
                    this._updateMute();
                    break;
                case"emulateHtml":
                    if (this.options[f] !== g) {
                        this.options[f] = g;
                        if (g) {
                            this._emulateHtmlBridge()
                        } else {
                            this._destroyHtmlBridge()
                        }
                    }
                    break
            }
            return this
        },
        _refreshSize: function () {
            this._setSize();
            this._addUiClass();
            this._updateSize();
            this._updateButtons();
            this._updateAutohide();
            this._trigger(c.jPlayer.event.resize)
        },
        _setSize: function () {
            if (this.options.fullScreen) {
                this.status.width = this.options.sizeFull.width;
                this.status.height = this.options.sizeFull.height;
                this.status.cssClass = this.options.sizeFull.cssClass
            } else {
                this.status.width = this.options.size.width;
                this.status.height = this.options.size.height;
                this.status.cssClass = this.options.size.cssClass
            }
            this.element.css({width: this.status.width, height: this.status.height})
        },
        _addUiClass: function () {
            if (this.ancestorJq.length) {
                this.ancestorJq.addClass(this.status.cssClass)
            }
        },
        _removeUiClass: function () {
            if (this.ancestorJq.length) {
                this.ancestorJq.removeClass(this.status.cssClass)
            }
        },
        _updateSize: function () {
            this.internal.poster.jq.css({width: this.status.width, height: this.status.height});
            if (!this.status.waitForPlay && this.html.active && this.status.video || this.html.video.available && this.html.used && this.status.nativeVideoControls) {
                this.internal.video.jq.css({width: this.status.width, height: this.status.height})
            } else {
                if (!this.status.waitForPlay && this.flash.active && this.status.video) {
                    this.internal.flash.jq.css({width: this.status.width, height: this.status.height})
                }
            }
        },
        _updateAutohide: function () {
            var e = this, i = "mousemove.jPlayer", h = ".jPlayerAutohide", f = i + h, g = function () {
                e.css.jq.gui.fadeIn(e.options.autohide.fadeIn, function () {
                    clearTimeout(e.internal.autohideId);
                    e.internal.autohideId = setTimeout(function () {
                        e.css.jq.gui.fadeOut(e.options.autohide.fadeOut)
                    }, e.options.autohide.hold)
                })
            };
            if (this.css.jq.gui.length) {
                this.css.jq.gui.stop(true, true);
                clearTimeout(this.internal.autohideId);
                this.element.unbind(h);
                this.css.jq.gui.unbind(h);
                if (!this.status.nativeVideoControls) {
                    if (this.options.fullScreen && this.options.autohide.full || !this.options.fullScreen && this.options.autohide.restored) {
                        this.element.bind(f, g);
                        this.css.jq.gui.bind(f, g);
                        this.css.jq.gui.hide()
                    } else {
                        this.css.jq.gui.show()
                    }
                } else {
                    this.css.jq.gui.hide()
                }
            }
        },
        fullScreen: function () {
            this._setOption("fullScreen", true)
        },
        restoreScreen: function () {
            this._setOption("fullScreen", false)
        },
        _html_initMedia: function () {
            this.htmlElement.media.src = this.status.src;
            if (this.options.preload !== "none") {
                this._html_load()
            }
            this._trigger(c.jPlayer.event.timeupdate)
        },
        _html_setAudio: function (f) {
            var e = this;
            c.each(this.formats, function (g, h) {
                if (e.html.support[h] && f[h]) {
                    e.status.src = f[h];
                    e.status.format[h] = true;
                    e.status.formatType = h;
                    return false
                }
            });
            this.htmlElement.media = this.htmlElement.audio;
            this._html_initMedia()
        },
        _html_setVideo: function (f) {
            var e = this;
            c.each(this.formats, function (g, h) {
                if (e.html.support[h] && f[h]) {
                    e.status.src = f[h];
                    e.status.format[h] = true;
                    e.status.formatType = h;
                    return false
                }
            });
            if (this.status.nativeVideoControls) {
                this.htmlElement.video.poster = this._validString(f.poster) ? f.poster : ""
            }
            this.htmlElement.media = this.htmlElement.video;
            this._html_initMedia()
        },
        _html_resetMedia: function () {
            if (this.htmlElement.media) {
                if (this.htmlElement.media.id === this.internal.video.id && !this.status.nativeVideoControls) {
                    this.internal.video.jq.css({width: "0px", height: "0px"})
                }
                this.htmlElement.media.pause()
            }
        },
        _html_clearMedia: function () {
            if (this.htmlElement.media) {
                this.htmlElement.media.src = "";
                this.htmlElement.media.load()
            }
        },
        _html_load: function () {
            if (this.status.waitForLoad) {
                this.status.waitForLoad = false;
                this.htmlElement.media.load()
            }
            clearTimeout(this.internal.htmlDlyCmdId)
        },
        _html_play: function (g) {
            var e = this;
            this._html_load();
            this.htmlElement.media.play();
            if (!isNaN(g)) {
                try {
                    this.htmlElement.media.currentTime = g
                } catch (f) {
                    this.internal.htmlDlyCmdId = setTimeout(function () {
                        e.play(g)
                    }, 100);
                    return
                }
            }
            this._html_checkWaitForPlay()
        },
        _html_pause: function (g) {
            var e = this;
            if (g > 0) {
                this._html_load()
            } else {
                clearTimeout(this.internal.htmlDlyCmdId)
            }
            this.htmlElement.media.pause();
            if (!isNaN(g)) {
                try {
                    this.htmlElement.media.currentTime = g
                } catch (f) {
                    this.internal.htmlDlyCmdId = setTimeout(function () {
                        e.pause(g)
                    }, 100);
                    return
                }
            }
            if (g > 0) {
                this._html_checkWaitForPlay()
            }
        },
        _html_playHead: function (g) {
            var e = this;
            this._html_load();
            try {
                if ((typeof this.htmlElement.media.seekable === "object") && (this.htmlElement.media.seekable.length > 0)) {
                    this.htmlElement.media.currentTime = g * this.htmlElement.media.seekable.end(this.htmlElement.media.seekable.length - 1) / 100
                } else {
                    if (this.htmlElement.media.duration > 0 && !isNaN(this.htmlElement.media.duration)) {
                        this.htmlElement.media.currentTime = g * this.htmlElement.media.duration / 100
                    } else {
                        throw"e"
                    }
                }
            } catch (f) {
                this.internal.htmlDlyCmdId = setTimeout(function () {
                    e.playHead(g)
                }, 100);
                return
            }
            if (!this.status.waitForLoad) {
                this._html_checkWaitForPlay()
            }
        },
        _html_checkWaitForPlay: function () {
            if (this.status.waitForPlay) {
                this.status.waitForPlay = false;
                if (this.css.jq.videoPlay.length) {
                    this.css.jq.videoPlay.hide()
                }
                if (this.status.video) {
                    this.internal.poster.jq.hide();
                    this.internal.video.jq.css({width: this.status.width, height: this.status.height})
                }
            }
        },
        _html_volume: function (e) {
            if (this.html.audio.available) {
                this.htmlElement.audio.volume = e
            }
            if (this.html.video.available) {
                this.htmlElement.video.volume = e
            }
        },
        _html_mute: function (e) {
            if (this.html.audio.available) {
                this.htmlElement.audio.muted = e
            }
            if (this.html.video.available) {
                this.htmlElement.video.muted = e
            }
        },
        _flash_setAudio: function (g) {
            var e = this;
            try {
                c.each(this.formats, function (h, i) {
                    if (e.flash.support[i] && g[i]) {
                        switch (i) {
                            case"m4a":
                            case"fla":
                                e._getMovie().fl_setAudio_m4a(g[i]);
                                break;
                            case"mp3":
                                e._getMovie().fl_setAudio_mp3(g[i]);
                                break
                        }
                        e.status.src = g[i];
                        e.status.format[i] = true;
                        e.status.formatType = i;
                        return false
                    }
                });
                if (this.options.preload === "auto") {
                    this._flash_load();
                    this.status.waitForLoad = false
                }
            } catch (f) {
                this._flashError(f)
            }
        },
        _flash_setVideo: function (g) {
            var e = this;
            try {
                c.each(this.formats, function (h, i) {
                    if (e.flash.support[i] && g[i]) {
                        switch (i) {
                            case"m4v":
                            case"flv":
                                e._getMovie().fl_setVideo_m4v(g[i]);
                                break
                        }
                        e.status.src = g[i];
                        e.status.format[i] = true;
                        e.status.formatType = i;
                        return false
                    }
                });
                if (this.options.preload === "auto") {
                    this._flash_load();
                    this.status.waitForLoad = false
                }
            } catch (f) {
                this._flashError(f)
            }
        },
        _flash_resetMedia: function () {
            this.internal.flash.jq.css({width: "0px", height: "0px"});
            this._flash_pause(NaN)
        },
        _flash_clearMedia: function () {
            try {
                this._getMovie().fl_clearMedia()
            } catch (e) {
                this._flashError(e)
            }
        },
        _flash_load: function () {
            try {
                this._getMovie().fl_load()
            } catch (e) {
                this._flashError(e)
            }
            this.status.waitForLoad = false
        },
        _flash_play: function (f) {
            try {
                this._getMovie().fl_play(f)
            } catch (e) {
                this._flashError(e)
            }
            this.status.waitForLoad = false;
            this._flash_checkWaitForPlay()
        },
        _flash_pause: function (f) {
            try {
                this._getMovie().fl_pause(f)
            } catch (e) {
                this._flashError(e)
            }
            if (f > 0) {
                this.status.waitForLoad = false;
                this._flash_checkWaitForPlay()
            }
        },
        _flash_playHead: function (f) {
            try {
                this._getMovie().fl_play_head(f)
            } catch (e) {
                this._flashError(e)
            }
            if (!this.status.waitForLoad) {
                this._flash_checkWaitForPlay()
            }
        },
        _flash_checkWaitForPlay: function () {
            if (this.status.waitForPlay) {
                this.status.waitForPlay = false;
                if (this.css.jq.videoPlay.length) {
                    this.css.jq.videoPlay.hide()
                }
                if (this.status.video) {
                    this.internal.poster.jq.hide();
                    this.internal.flash.jq.css({width: this.status.width, height: this.status.height})
                }
            }
        },
        _flash_volume: function (e) {
            try {
                this._getMovie().fl_volume(e)
            } catch (f) {
                this._flashError(f)
            }
        },
        _flash_mute: function (e) {
            try {
                this._getMovie().fl_mute(e)
            } catch (f) {
                this._flashError(f)
            }
        },
        _getMovie: function () {
            return document[this.internal.flash.id]
        },
        _checkForFlash: function (g) {
            var f = false;
            var i;
            if (window.ActiveXObject) {
                try {
                    i = new ActiveXObject(("ShockwaveFlash.ShockwaveFlash." + g));
                    f = true
                } catch (j) {
                }
            } else {
                if (navigator.plugins && navigator.mimeTypes.length > 0) {
                    i = navigator.plugins["Shockwave Flash"];
                    if (i) {
                        var h = navigator.plugins["Shockwave Flash"].description.replace(/.*\s(\d+\.\d+).*/, "$1");
                        if (h >= g) {
                            f = true
                        }
                    }
                }
            }
            return f
        },
        _validString: function (e) {
            return (e && typeof e === "string")
        },
        _limitValue: function (g, f, e) {
            return (g < f) ? f : ((g > e) ? e : g)
        },
        _urlNotSetError: function (e) {
            this._error({
                type: c.jPlayer.error.URL_NOT_SET,
                context: e,
                message: c.jPlayer.errorMsg.URL_NOT_SET,
                hint: c.jPlayer.errorHint.URL_NOT_SET
            })
        },
        _flashError: function (e) {
            var f;
            if (!this.internal.ready) {
                f = "FLASH"
            } else {
                f = "FLASH_DISABLED"
            }
            this._error({
                type: c.jPlayer.error[f],
                context: this.internal.flash.swf,
                message: c.jPlayer.errorMsg[f] + e.message,
                hint: c.jPlayer.errorHint[f]
            });
            this.internal.flash.jq.css({width: "1px", height: "1px"})
        },
        _error: function (e) {
            this._trigger(c.jPlayer.event.error, e);
            if (this.options.errorAlerts) {
                this._alert("Error!" + (e.message ? "\n\n" + e.message : "") + (e.hint ? "\n\n" + e.hint : "") + "\n\nContext: " + e.context)
            }
        },
        _warning: function (e) {
            this._trigger(c.jPlayer.event.warning, d, e);
            if (this.options.warningAlerts) {
                this._alert("Warning!" + (e.message ? "\n\n" + e.message : "") + (e.hint ? "\n\n" + e.hint : "") + "\n\nContext: " + e.context)
            }
        },
        _alert: function (e) {
            alert("jPlayer " + this.version.script + " : id='" + this.internal.self.id + "' : " + e)
        },
        _emulateHtmlBridge: function () {
            var f = this, e = c.jPlayer.emulateMethods;
            c.each(c.jPlayer.emulateMethods.split(/\s+/g), function (h, g) {
                f.internal.domNode[g] = function (i) {
                    f[g](i)
                }
            });
            c.each(c.jPlayer.event, function (h, i) {
                var g = true;
                c.each(c.jPlayer.reservedEvent.split(/\s+/g), function (k, j) {
                    if (j === h) {
                        g = false;
                        return false
                    }
                });
                if (g) {
                    f.element.bind(i + ".jPlayer.jPlayerHtml", function () {
                        f._emulateHtmlUpdate();
                        var j = document.createEvent("Event");
                        j.initEvent(h, false, true);
                        f.internal.domNode.dispatchEvent(j)
                    })
                }
            })
        },
        _emulateHtmlUpdate: function () {
            var e = this;
            c.each(c.jPlayer.emulateStatus.split(/\s+/g), function (g, f) {
                e.internal.domNode[f] = e.status[f]
            });
            c.each(c.jPlayer.emulateOptions.split(/\s+/g), function (g, f) {
                e.internal.domNode[f] = e.options[f]
            })
        },
        _destroyHtmlBridge: function () {
            var e = this;
            this.element.unbind(".jPlayerHtml");
            var f = c.jPlayer.emulateMethods + " " + c.jPlayer.emulateStatus + " " + c.jPlayer.emulateOptions;
            c.each(f.split(/\s+/g), function (h, g) {
                delete e.internal.domNode[g]
            })
        }
    };
    c.jPlayer.error = {
        FLASH: "e_flash",
        FLASH_DISABLED: "e_flash_disabled",
        NO_SOLUTION: "e_no_solution",
        NO_SUPPORT: "e_no_support",
        URL: "e_url",
        URL_NOT_SET: "e_url_not_set",
        VERSION: "e_version"
    };
    c.jPlayer.errorMsg = {
        FLASH: "jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ",
        FLASH_DISABLED: "jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ",
        NO_SOLUTION: "No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.",
        NO_SUPPORT: "It is not possible to play any media format provided in setMedia() on this browser using your current options.",
        URL: "Media URL could not be loaded.",
        URL_NOT_SET: "Attempt to issue media playback commands, while no media url is set.",
        VERSION: "jPlayer " + c.jPlayer.prototype.version.script + " needs Jplayer.swf version " + c.jPlayer.prototype.version.needFlash + " but found "
    };
    c.jPlayer.errorHint = {
        FLASH: "Check your swfPath option and that Jplayer.swf is there.",
        FLASH_DISABLED: "Check that you have not display:none; the jPlayer entity or any ancestor.",
        NO_SOLUTION: "Review the jPlayer options: support and supplied.",
        NO_SUPPORT: "Video or audio formats defined in the supplied option are missing.",
        URL: "Check media URL is valid.",
        URL_NOT_SET: "Use setMedia() to set the media URL.",
        VERSION: "Update jPlayer files."
    };
    c.jPlayer.warning = {
        CSS_SELECTOR_COUNT: "e_css_selector_count",
        CSS_SELECTOR_METHOD: "e_css_selector_method",
        CSS_SELECTOR_STRING: "e_css_selector_string",
        OPTION_KEY: "e_option_key"
    };
    c.jPlayer.warningMsg = {
        CSS_SELECTOR_COUNT: "The number of css selectors found did not equal one: ",
        CSS_SELECTOR_METHOD: "The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",
        CSS_SELECTOR_STRING: "The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",
        OPTION_KEY: "The option requested in jPlayer('option') is undefined."
    };
    c.jPlayer.warningHint = {
        CSS_SELECTOR_COUNT: "Check your css selector and the ancestor.",
        CSS_SELECTOR_METHOD: "Check your method name.",
        CSS_SELECTOR_STRING: "Check your css selector is a string.",
        OPTION_KEY: "Check your option name."
    }
})(jQuery);
/*! Copyright (c) 2010 Brandon Aaron (http://brandonaaron.net)
 * Licensed under the MIT License (LICENSE.txt).
 *
 * Thanks to: http://adomas.org/javascript-mouse-wheel/ for some pointers.
 * Thanks to: Mathias Bank(http://www.mathias-bank.de) for a scope bug fix.
 * Thanks to: Seamus Leahy for adding deltaX and deltaY
 *
 * Version: 3.0.4
 *
 * Requires: 1.2.2+
 */
(function (c) {
    function a(f) {
        var d = f || window.event, g = [].slice.call(arguments, 1), l = 0, j = 0, k = 0;
        f = c.event.fix(d);
        f.type = "mousewheel";
        if (f.wheelDelta) {
            l = f.wheelDelta / 120
        }
        if (f.detail) {
            l = -f.detail / 3
        }
        k = l;
        if (d.axis !== undefined && d.axis === d.HORIZONTAL_AXIS) {
            k = 0;
            j = -1 * l
        }
        if (d.wheelDeltaY !== undefined) {
            k = d.wheelDeltaY / 120
        }
        if (d.wheelDeltaX !== undefined) {
            j = -1 * d.wheelDeltaX / 120
        }
        g.unshift(f, l, j, k);
        return c.event.handle.apply(this, g)
    }

    var b = ["DOMMouseScroll", "mousewheel"];
    c.event.special.mousewheel = {
        setup: function () {
            if (this.addEventListener) {
                for (var d = b.length; d;) {
                    this.addEventListener(b[--d], a, false)
                }
            } else {
                this.onmousewheel = a
            }
        }, teardown: function () {
            if (this.removeEventListener) {
                for (var d = b.length; d;) {
                    this.removeEventListener(b[--d], a, false)
                }
            } else {
                this.onmousewheel = null
            }
        }
    };
    c.fn.extend({
        mousewheel: function (d) {
            return d ? this.bind("mousewheel", d) : this.trigger("mousewheel")
        }, unmousewheel: function (d) {
            return this.unbind("mousewheel", d)
        }
    })
})(jQuery);
(function (b) {
    var a = function (m, s) {
        var j = b.extend({}, b.fn.nivoSlider.defaults, s);
        var p = {currentSlide: 0, currentImage: "", totalSlides: 0, running: false, paused: false, stop: false};
        var d = b(m);
        d.data("nivo:vars", p);
        d.css("position", "relative");
        d.addClass("nivoSlider");
        var e = d.children();
        e.each(function () {
            var v = b(this);
            var u = "";
            if (!v.is("img")) {
                if (v.is("a")) {
                    v.addClass("nivo-imageLink");
                    u = v
                }
                v = v.find("img:first")
            }
            var t = v.width();
            if (t == 0) {
                t = v.attr("width")
            }
            var i = v.height();
            if (i == 0) {
                i = v.attr("height")
            }
            if (t > d.width()) {
                d.width(t)
            }
            if (i > d.height()) {
                d.height(i)
            }
            if (u != "") {
                u.css("display", "none")
            }
            v.css("display", "none");
            p.totalSlides++
        });
        if (j.randomStart) {
            j.startSlide = Math.floor(Math.random() * p.totalSlides)
        }
        if (j.startSlide > 0) {
            if (j.startSlide >= p.totalSlides) {
                j.startSlide = p.totalSlides - 1
            }
            p.currentSlide = j.startSlide
        }
        if (b(e[p.currentSlide]).is("img")) {
            p.currentImage = b(e[p.currentSlide])
        } else {
            p.currentImage = b(e[p.currentSlide]).find("img:first")
        }
        if (b(e[p.currentSlide]).is("a")) {
            b(e[p.currentSlide]).css("display", "block")
        }
        d.css("background", 'url("' + p.currentImage.attr("src") + '") no-repeat');
        d.append(b('<div class="nivo-caption"><p></p></div>').css({display: "none", opacity: j.captionOpacity}));
        b(".nivo-caption", d).css("opacity", 0);
        var q = function (i) {
            var u = b(".nivo-caption", d);
            if (p.currentImage.attr("title") != "" && p.currentImage.attr("title") != undefined) {
                var t = p.currentImage.attr("title");
                if (t.substr(0, 1) == "#") {
                    t = b(t).html()
                }
                if (u.css("opacity") != 0) {
                    u.find("p").stop().fadeTo(i.animSpeed, 0, function () {
                        b(this).html(t);
                        b(this).stop().fadeTo(i.animSpeed, 1)
                    })
                } else {
                    u.find("p").html(t)
                }
                u.stop().fadeTo(i.animSpeed, i.captionOpacity)
            } else {
                u.stop().fadeTo(i.animSpeed, 0)
            }
        };
        q(j);
        var c = 0;
        if (!j.manualAdvance && e.length > 1) {
            c = setInterval(function () {
                r(d, e, j, false)
            }, j.pauseTime)
        }
        if (j.directionNav) {
            d.append('<div class="nivo-directionNav"><a class="nivo-prevNav">' + j.prevText + '</a><a class="nivo-nextNav">' + j.nextText + "</a></div>");
            if (j.directionNavHide) {
                b(".nivo-directionNav", d).hide();
                d.hover(function () {
                    b(".nivo-directionNav", d).show()
                }, function () {
                    b(".nivo-directionNav", d).hide()
                })
            }
            b("a.nivo-prevNav", d).live("click", function () {
                if (p.running) {
                    return false
                }
                clearInterval(c);
                c = "";
                p.currentSlide -= 2;
                r(d, e, j, "prev")
            });
            b("a.nivo-nextNav", d).live("click", function () {
                if (p.running) {
                    return false
                }
                clearInterval(c);
                c = "";
                r(d, e, j, "next")
            })
        }
        if (j.controlNav) {
            var n = b('<div class="nivo-controlNav"></div>');
            d.append(n);
            for (var l = 0; l < e.length; l++) {
                if (j.controlNavThumbs) {
                    var f = e.eq(l);
                    if (!f.is("img")) {
                        f = f.find("img:first")
                    }
                    if (j.controlNavThumbsFromRel) {
                        n.append('<a class="nivo-control" rel="' + l + '"><img src="' + f.attr("rel") + '" alt="" /></a>')
                    } else {
                        n.append('<a class="nivo-control" rel="' + l + '"><img src="' + f.attr("src").replace(j.controlNavThumbsSearch, j.controlNavThumbsReplace) + '" alt="" /></a>')
                    }
                } else {
                    n.append('<a class="nivo-control" rel="' + l + '">' + (l + 1) + "</a>")
                }
            }
            b(".nivo-controlNav a:eq(" + p.currentSlide + ")", d).addClass("active");
            b(".nivo-controlNav a", d).live("click", function () {
                if (p.running) {
                    return false
                }
                if (b(this).hasClass("active")) {
                    return false
                }
                clearInterval(c);
                c = "";
                p.currentSlide = b(this).attr("rel") - 1;
                r(d, e, j, "control")
            })
        }
        if (j.keyboardNav) {
            b(window).keypress(function (i) {
                if (i.keyCode == "37") {
                    if (p.running) {
                        return false
                    }
                    clearInterval(c);
                    c = "";
                    p.currentSlide -= 2;
                    r(d, e, j, "prev")
                }
                if (i.keyCode == "39") {
                    if (p.running) {
                        return false
                    }
                    clearInterval(c);
                    c = "";
                    r(d, e, j, "next")
                }
            })
        }
        if (j.pauseOnHover) {
            d.hover(function () {
                p.paused = true;
                clearInterval(c);
                c = ""
            }, function () {
                p.paused = false;
                if (c == "" && !j.manualAdvance) {
                    c = setInterval(function () {
                        r(d, e, j, false)
                    }, j.pauseTime)
                }
            })
        }
        d.bind("nivo:animFinished", function () {
            p.running = false;
            b(e).each(function () {
                if (b(this).is("a")) {
                    b(this).css("display", "none")
                }
            });
            if (b(e[p.currentSlide]).is("a")) {
                b(e[p.currentSlide]).css("display", "block")
            }
            b(d).css({background: 'url("' + p.currentImage.attr("src") + '") no-repeat'});
            if (c == "" && !p.paused && !j.manualAdvance) {
                c = setInterval(function () {
                    r(d, e, j, false)
                }, j.pauseTime)
            }
            j.afterChange.call(this)
        });
        var g = function (v, u, x) {
            for (var t = 0; t < u.slices; t++) {
                var w = Math.round(v.width() / u.slices);
                if (t == u.slices - 1) {
                    v.append(b('<div class="nivo-slice"></div>').css({
                        left: (w * t) + "px",
                        width: (v.width() - (w * t)) + "px",
                        height: "0px",
                        opacity: "0",
                        background: 'url("' + x.currentImage.attr("src") + '") no-repeat -' + ((w + (t * w)) - w) + "px 0%"
                    }))
                } else {
                    v.append(b('<div class="nivo-slice"></div>').css({
                        left: (w * t) + "px",
                        width: w + "px",
                        height: "0px",
                        opacity: "0",
                        background: 'url("' + x.currentImage.attr("src") + '") no-repeat -' + ((w + (t * w)) - w) + "px 0%"
                    }))
                }
            }
        };
        var h = function (u, i, x) {
            var t = Math.round(u.width() / i.boxCols);
            var y = Math.round(u.height() / i.boxRows);
            for (var v = 0; v < i.boxRows; v++) {
                for (var w = 0; w < i.boxCols; w++) {
                    if (w == i.boxCols - 1) {
                        u.append(b('<div class="nivo-box"></div>').css({
                            opacity: 0,
                            left: (t * w) + "px",
                            top: (y * v) + "px",
                            width: (u.width() - (t * w)) + "px",
                            height: y + "px",
                            background: 'url("' + x.currentImage.attr("src") + '") no-repeat -' + ((t + (w * t)) - t) + "px -" + ((y + (v * y)) - y) + "px"
                        }))
                    } else {
                        u.append(b('<div class="nivo-box"></div>').css({
                            opacity: 0,
                            left: (t * w) + "px",
                            top: (y * v) + "px",
                            width: t + "px",
                            height: y + "px",
                            background: 'url("' + x.currentImage.attr("src") + '") no-repeat -' + ((t + (w * t)) - t) + "px -" + ((y + (v * y)) - y) + "px"
                        }))
                    }
                }
            }
        };
        var r = function (I, H, L, E) {
            var G = I.data("nivo:vars");
            if (G && (G.currentSlide == G.totalSlides - 1)) {
                L.lastSlide.call(this)
            }
            if ((!G || G.stop) && !E) {
                return false
            }
            L.beforeChange.call(this);
            G.currentSlide++;
            if (G.currentSlide == G.totalSlides) {
                G.currentSlide = 0;
                L.slideshowEnd.call(this)
            }
            if (G.currentSlide < 0) {
                G.currentSlide = (G.totalSlides - 1)
            }
            if (b(H[G.currentSlide]).is("img")) {
                G.currentImage = b(H[G.currentSlide])
            } else {
                G.currentImage = b(H[G.currentSlide]).find("img:first")
            }
            if (L.controlNav) {
                b(".nivo-controlNav a", I).removeClass("active");
                b(".nivo-controlNav a:eq(" + G.currentSlide + ")", I).addClass("active")
            }
            q(L);
            b(".nivo-slice", I).remove();
            b(".nivo-box", I).remove();
            var u = L.effect;
            if (L.effect == "random") {
                var N = new Array("sliceDownRight", "sliceDownLeft", "sliceUpRight", "sliceUpLeft", "sliceUpDown", "sliceUpDownLeft", "fold", "fade", "boxRandom", "boxRain", "boxRainReverse", "boxRainGrow", "boxRainGrowReverse");
                u = N[Math.floor(Math.random() * (N.length + 1))];
                if (u == undefined) {
                    u = "fade"
                }
            }
            if (L.effect.indexOf(",") != -1) {
                var N = L.effect.split(",");
                u = N[Math.floor(Math.random() * (N.length))];
                if (u == undefined) {
                    u = "fade"
                }
            }
            if (G.currentImage.attr("data-transition")) {
                u = G.currentImage.attr("data-transition")
            }
            G.running = true;
            if (u == "sliceDown" || u == "sliceDownRight" || u == "sliceDownLeft") {
                g(I, L, G);
                var M = 0;
                var J = 0;
                var t = b(".nivo-slice", I);
                if (u == "sliceDownLeft") {
                    t = b(".nivo-slice", I)._reverse()
                }
                t.each(function () {
                    var i = b(this);
                    i.css({top: "0px"});
                    if (J == L.slices - 1) {
                        setTimeout(function () {
                            i.animate({height: "100%", opacity: "1.0"}, L.animSpeed, "", function () {
                                I.trigger("nivo:animFinished")
                            })
                        }, (100 + M))
                    } else {
                        setTimeout(function () {
                            i.animate({height: "100%", opacity: "1.0"}, L.animSpeed)
                        }, (100 + M))
                    }
                    M += 50;
                    J++
                })
            } else {
                if (u == "sliceUp" || u == "sliceUpRight" || u == "sliceUpLeft") {
                    g(I, L, G);
                    var M = 0;
                    var J = 0;
                    var t = b(".nivo-slice", I);
                    if (u == "sliceUpLeft") {
                        t = b(".nivo-slice", I)._reverse()
                    }
                    t.each(function () {
                        var i = b(this);
                        i.css({bottom: "0px"});
                        if (J == L.slices - 1) {
                            setTimeout(function () {
                                i.animate({height: "100%", opacity: "1.0"}, L.animSpeed, "", function () {
                                    I.trigger("nivo:animFinished")
                                })
                            }, (100 + M))
                        } else {
                            setTimeout(function () {
                                i.animate({height: "100%", opacity: "1.0"}, L.animSpeed)
                            }, (100 + M))
                        }
                        M += 50;
                        J++
                    })
                } else {
                    if (u == "sliceUpDown" || u == "sliceUpDownRight" || u == "sliceUpDownLeft") {
                        g(I, L, G);
                        var M = 0;
                        var J = 0;
                        var C = 0;
                        var t = b(".nivo-slice", I);
                        if (u == "sliceUpDownLeft") {
                            t = b(".nivo-slice", I)._reverse()
                        }
                        t.each(function () {
                            var i = b(this);
                            if (J == 0) {
                                i.css("top", "0px");
                                J++
                            } else {
                                i.css("bottom", "0px");
                                J = 0
                            }
                            if (C == L.slices - 1) {
                                setTimeout(function () {
                                    i.animate({height: "100%", opacity: "1.0"}, L.animSpeed, "", function () {
                                        I.trigger("nivo:animFinished")
                                    })
                                }, (100 + M))
                            } else {
                                setTimeout(function () {
                                    i.animate({height: "100%", opacity: "1.0"}, L.animSpeed)
                                }, (100 + M))
                            }
                            M += 50;
                            C++
                        })
                    } else {
                        if (u == "fold") {
                            g(I, L, G);
                            var M = 0;
                            var J = 0;
                            b(".nivo-slice", I).each(function () {
                                var i = b(this);
                                var v = i.width();
                                i.css({top: "0px", height: "100%", width: "0px"});
                                if (J == L.slices - 1) {
                                    setTimeout(function () {
                                        i.animate({width: v, opacity: "1.0"}, L.animSpeed, "", function () {
                                            I.trigger("nivo:animFinished")
                                        })
                                    }, (100 + M))
                                } else {
                                    setTimeout(function () {
                                        i.animate({width: v, opacity: "1.0"}, L.animSpeed)
                                    }, (100 + M))
                                }
                                M += 50;
                                J++
                            })
                        } else {
                            if (u == "fade") {
                                g(I, L, G);
                                var A = b(".nivo-slice:first", I);
                                A.css({height: "100%", width: I.width() + "px"});
                                A.animate({opacity: "1.0"}, (L.animSpeed * 2), "", function () {
                                    I.trigger("nivo:animFinished")
                                })
                            } else {
                                if (u == "slideInRight") {
                                    g(I, L, G);
                                    var A = b(".nivo-slice:first", I);
                                    A.css({height: "100%", width: "0px", opacity: "1"});
                                    A.animate({width: I.width() + "px"}, (L.animSpeed * 2), "", function () {
                                        I.trigger("nivo:animFinished")
                                    })
                                } else {
                                    if (u == "slideInLeft") {
                                        g(I, L, G);
                                        var A = b(".nivo-slice:first", I);
                                        A.css({height: "100%", width: "0px", opacity: "1", left: "", right: "0px"});
                                        A.animate({width: I.width() + "px"}, (L.animSpeed * 2), "", function () {
                                            A.css({left: "0px", right: ""});
                                            I.trigger("nivo:animFinished")
                                        })
                                    } else {
                                        if (u == "boxRandom") {
                                            h(I, L, G);
                                            var K = L.boxCols * L.boxRows;
                                            var J = 0;
                                            var M = 0;
                                            var x = o(b(".nivo-box", I));
                                            x.each(function () {
                                                var i = b(this);
                                                if (J == K - 1) {
                                                    setTimeout(function () {
                                                        i.animate({opacity: "1"}, L.animSpeed, "", function () {
                                                            I.trigger("nivo:animFinished")
                                                        })
                                                    }, (100 + M))
                                                } else {
                                                    setTimeout(function () {
                                                        i.animate({opacity: "1"}, L.animSpeed)
                                                    }, (100 + M))
                                                }
                                                M += 20;
                                                J++
                                            })
                                        } else {
                                            if (u == "boxRain" || u == "boxRainReverse" || u == "boxRainGrow" || u == "boxRainGrowReverse") {
                                                h(I, L, G);
                                                var K = L.boxCols * L.boxRows;
                                                var J = 0;
                                                var M = 0;
                                                var z = 0;
                                                var F = 0;
                                                var D = new Array();
                                                D[z] = new Array();
                                                var x = b(".nivo-box", I);
                                                if (u == "boxRainReverse" || u == "boxRainGrowReverse") {
                                                    x = b(".nivo-box", I)._reverse()
                                                }
                                                x.each(function () {
                                                    D[z][F] = b(this);
                                                    F++;
                                                    if (F == L.boxCols) {
                                                        z++;
                                                        F = 0;
                                                        D[z] = new Array()
                                                    }
                                                });
                                                for (var B = 0; B < (L.boxCols * 2); B++) {
                                                    var w = B;
                                                    for (var y = 0; y < L.boxRows; y++) {
                                                        if (w >= 0 && w < L.boxCols) {
                                                            (function (T, O, S, P, U) {
                                                                var R = b(D[T][O]);
                                                                var v = R.width();
                                                                var Q = R.height();
                                                                if (u == "boxRainGrow" || u == "boxRainGrowReverse") {
                                                                    R.width(0).height(0)
                                                                }
                                                                if (P == U - 1) {
                                                                    setTimeout(function () {
                                                                        R.animate({
                                                                            opacity: "1",
                                                                            width: v,
                                                                            height: Q
                                                                        }, L.animSpeed / 1.3, "", function () {
                                                                            I.trigger("nivo:animFinished")
                                                                        })
                                                                    }, (100 + S))
                                                                } else {
                                                                    setTimeout(function () {
                                                                        R.animate({
                                                                            opacity: "1",
                                                                            width: v,
                                                                            height: Q
                                                                        }, L.animSpeed / 1.3)
                                                                    }, (100 + S))
                                                                }
                                                            })(y, w, M, J, K);
                                                            J++
                                                        }
                                                        w--
                                                    }
                                                    M += 100
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        };
        var o = function (u) {
            for (var v, t, w = u.length; w; v = parseInt(Math.random() * w), t = u[--w], u[w] = u[v], u[v] = t) {
            }
            return u
        };
        var k = function (i) {
            if (this.console && typeof console.log != "undefined") {
                console.log(i)
            }
        };
        this.stop = function () {
            if (!b(m).data("nivo:vars").stop) {
                b(m).data("nivo:vars").stop = true;
                k("Stop Slider")
            }
        };
        this.start = function () {
            if (b(m).data("nivo:vars").stop) {
                b(m).data("nivo:vars").stop = false;
                k("Start Slider")
            }
        };
        j.afterLoad.call(this);
        return this
    };
    b.fn.nivoSlider = function (c) {
        return this.each(function (e, g) {
            var d = b(this);
            if (d.data("nivoslider")) {
                return d.data("nivoslider")
            }
            var f = new a(this, c);
            d.data("nivoslider", f)
        })
    };
    b.fn.nivoSlider.defaults = {
        effect: "random",
        slices: 15,
        boxCols: 8,
        boxRows: 4,
        animSpeed: 500,
        pauseTime: 3000,
        startSlide: 0,
        directionNav: true,
        directionNavHide: true,
        controlNav: true,
        controlNavThumbs: false,
        controlNavThumbsFromRel: false,
        controlNavThumbsSearch: ".jpg",
        controlNavThumbsReplace: "_thumb.jpg",
        keyboardNav: true,
        pauseOnHover: true,
        manualAdvance: false,
        captionOpacity: 0.8,
        prevText: "Prev",
        nextText: "Next",
        randomStart: false,
        beforeChange: function () {
        },
        afterChange: function () {
        },
        slideshowEnd: function () {
        },
        lastSlide: function () {
        },
        afterLoad: function () {
        }
    };
    b.fn._reverse = [].reverse
})(jQuery);
/*! Copyright 2011, Ben Lin (http://dreamerslab.com/)
 * Licensed under the MIT License (LICENSE.txt).
 *
 * Version: 1.0.3
 *
 * Requires: jQuery 1.2.3+
 */
(function (b) {
    b.preload = function () {
        var e = Object.prototype.toString.call(arguments[0]) === "[object Array]" ? arguments[0] : arguments;
        var f = [];
        var a = e.length;
        for (; a--;) {
            f.push(b("<img />").attr("src", e[a]))
        }
    }
})(jQuery);
function isIOS() {
    return ((navigator.platform.indexOf("iPhone") != -1) || (navigator.platform.indexOf("iPod") != -1) || (navigator.platform.indexOf("iPad") != -1) || (navigator.userAgent.indexOf("Safari") != -1 && navigator.platform.indexOf("Mac") != -1))
}
(function (e) {
    e.prettyPhoto = {version: "3.1.4"};
    e.fn.prettyPhoto = function (g) {
        g = jQuery.extend({
            hook: "rel",
            animation_speed: "fast",
            ajaxcallback: function () {
            },
            slideshow: 5000,
            autoplay_slideshow: false,
            opacity: 0.8,
            show_title: true,
            allow_resize: true,
            allow_expand: true,
            default_width: 500,
            default_height: 344,
            counter_separator_label: "/",
            theme: "pp_default",
            horizontal_padding: 20,
            hideflash: false,
            wmode: "opaque",
            autoplay: true,
            modal: false,
            deeplinking: true,
            overlay_gallery: true,
            overlay_gallery_max: 30,
            keyboard_shortcuts: true,
            changepicturecallback: function () {
            },
            callback: function () {
            },
            ie6_fallback: true,
            markup: '<div class="pp_pic_holder">       <div class="ppt">&nbsp;</div>       <div class="pp_top">        <div class="pp_left"></div>        <div class="pp_middle"></div>        <div class="pp_right"></div>       </div>       <div class="pp_content_container">        <div class="pp_left">        <div class="pp_right">         <div class="pp_content">          <div class="pp_loaderIcon"></div>          <div class="pp_fade">           <a href="#" class="pp_expand" title="Expand the image">Expand</a>           <div class="pp_hoverContainer">            <a class="pp_next" href="#">next</a>            <a class="pp_previous" href="#">previous</a>           </div>           <div id="pp_full_res"></div>           <div class="pp_details">            <div class="pp_nav">             <a href="#" class="pp_arrow_previous">Previous</a>             <p class="currentTextHolder">0/0</p>             <a href="#" class="pp_arrow_next">Next</a>            </div>            <p class="pp_description"></p>            <div class="pp_social">{pp_social}</div>            <a class="pp_close" href="#">Close</a>           </div>          </div>         </div>        </div>        </div>       </div>       <div class="pp_bottom">        <div class="pp_left"></div>        <div class="pp_middle"></div>        <div class="pp_right"></div>       </div>      </div>      <div class="pp_overlay"></div>',
            gallery_markup: '<div class="pp_gallery">         <a href="#" class="pp_arrow_previous">Previous</a>         <div>          <ul>           {gallery}          </ul>         </div>         <a href="#" class="pp_arrow_next">Next</a>        </div>',
            image_markup: '<img id="fullResImage" src="{path}" />',
            flash_markup: '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="{width}" height="{height}"><param name="wmode" value="{wmode}" /><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="movie" value="{path}" /><embed src="{path}" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="{width}" height="{height}" wmode="{wmode}"></embed></object>',
            quicktime_markup: '<object classid="clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B" codebase="http://www.apple.com/qtactivex/qtplugin.cab" height="{height}" width="{width}"><param name="src" value="{path}"><param name="autoplay" value="{autoplay}"><param name="type" value="video/quicktime"><embed src="{path}" height="{height}" width="{width}" autoplay="{autoplay}" type="video/quicktime" pluginspage="http://www.apple.com/quicktime/download/"></embed></object>',
            iframe_markup: '<iframe src ="{path}" width="{width}" height="{height}" frameborder="no"></iframe>',
            inline_markup: '<div class="pp_inline">{content}</div>',
            custom_markup: "",
            social_tools: '<div class="twitter"><a href="http://twitter.com/share" class="twitter-share-button" data-count="none">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"><\/script></div><div class="facebook"><iframe src="//www.facebook.com/plugins/like.php?locale=en_US&href={location_href}&amp;layout=button_count&amp;show_faces=true&amp;width=500&amp;action=like&amp;font&amp;colorscheme=light&amp;height=23" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:500px; height:23px;" allowTransparency="true"></iframe></div>'
        }, g);
        var n = this, m = false, t, r, s, u, x, y, i = e(window).height(), B = e(window).width(), j;
        doresize = true, scroll_pos = z();
        e(window).unbind("resize.prettyphoto").bind("resize.prettyphoto", function () {
            q();
            w()
        });
        if (g.keyboard_shortcuts) {
            e(document).unbind("keydown.prettyphoto").bind("keydown.prettyphoto", function (C) {
                if (typeof $pp_pic_holder != "undefined") {
                    if ($pp_pic_holder.is(":visible")) {
                        switch (C.keyCode) {
                            case 37:
                                e.prettyPhoto.changePage("previous");
                                C.preventDefault();
                                break;
                            case 39:
                                e.prettyPhoto.changePage("next");
                                C.preventDefault();
                                break;
                            case 27:
                                if (!settings.modal) {
                                    e.prettyPhoto.close()
                                }
                                C.preventDefault();
                                break
                        }
                    }
                }
            })
        }
        e.prettyPhoto.initialize = function () {
            settings = g;
            if (settings.ie6_fallback && e.browser.msie && parseInt(e.browser.version) == 6) {
                settings.theme = "light_square"
            }
            theRel = e(this).attr(settings.hook);
            galleryRegExp = /\[(?:.*)\]/;
            isSet = (galleryRegExp.exec(theRel)) ? true : false;
            pp_images = (isSet) ? jQuery.map(n, function (D, C) {
                if (e(D).attr(settings.hook).indexOf(theRel) != -1) {
                    return e(D).attr("href")
                }
            }) : e.makeArray(e(this).attr("href"));
            pp_titles = (isSet) ? jQuery.map(n, function (D, C) {
                if (e(D).attr(settings.hook).indexOf(theRel) != -1) {
                    return (e(D).find("img").attr("alt")) ? e(D).find("img").attr("alt") : ""
                }
            }) : e.makeArray(e(this).find("img").attr("alt"));
            pp_descriptions = (isSet) ? jQuery.map(n, function (D, C) {
                if (e(D).attr(settings.hook).indexOf(theRel) != -1) {
                    return (e(D).attr("title")) ? e(D).attr("title") : ""
                }
            }) : e.makeArray(e(this).attr("title"));
            if (pp_images.length > settings.overlay_gallery_max) {
                settings.overlay_gallery = false
            }
            set_position = jQuery.inArray(e(this).attr("href"), pp_images);
            rel_index = (isSet) ? set_position : e("a[" + settings.hook + "^='" + theRel + "']").index(e(this));
            h(this);
            if (settings.allow_resize) {
                e(window).bind("scroll.prettyphoto", function () {
                    q()
                })
            }
            e.prettyPhoto.open();
            return false
        };
        e.prettyPhoto.open = function (C) {
            if (typeof settings == "undefined") {
                settings = g;
                if (e.browser.msie && e.browser.version == 6) {
                    settings.theme = "light_square"
                }
                pp_images = e.makeArray(arguments[0]);
                pp_titles = (arguments[1]) ? e.makeArray(arguments[1]) : e.makeArray("");
                pp_descriptions = (arguments[2]) ? e.makeArray(arguments[2]) : e.makeArray("");
                isSet = (pp_images.length > 1) ? true : false;
                set_position = (arguments[3]) ? arguments[3] : 0;
                h(C.target)
            }
            if (e.browser.msie && e.browser.version == 6) {
                e("select").css("visibility", "hidden")
            }
            if (settings.hideflash) {
                e("object,embed,iframe[src*=youtube],iframe[src*=vimeo]").css("visibility", "hidden")
            }
            l(e(pp_images).size());
            e(".pp_loaderIcon").show();
            if (settings.deeplinking) {
                b()
            }
            if (settings.social_tools) {
                facebook_like_link = settings.social_tools.replace("{location_href}", encodeURIComponent(location.href));
                $pp_pic_holder.find(".pp_social").html(facebook_like_link)
            }
            $pp_overlay.show().fadeTo(settings.animation_speed, settings.opacity);
            $pp_pic_holder.find(".currentTextHolder").text((set_position + 1) + settings.counter_separator_label + e(pp_images).size());
            if (typeof pp_descriptions[set_position] != "undefined" && pp_descriptions[set_position] != "") {
                $pp_pic_holder.find(".pp_description").show().html(unescape(pp_descriptions[set_position]))
            } else {
                $pp_pic_holder.find(".pp_description").hide()
            }
            movie_width = (parseFloat(a("width", pp_images[set_position]))) ? a("width", pp_images[set_position]) : settings.default_width.toString();
            movie_height = (parseFloat(a("height", pp_images[set_position]))) ? a("height", pp_images[set_position]) : settings.default_height.toString();
            m = false;
            if (movie_height.indexOf("%") != -1) {
                movie_height = parseFloat((e(window).height() * parseFloat(movie_height) / 100) - 150);
                m = true
            }
            if (movie_width.indexOf("%") != -1) {
                movie_width = parseFloat((e(window).width() * parseFloat(movie_width) / 100) - 150);
                m = true
            }
            $pp_pic_holder.fadeIn(function () {
                (settings.show_title && pp_titles[set_position] != "" && typeof pp_titles[set_position] != "undefined") ? $ppt.html(unescape(pp_titles[set_position])) : $ppt.html("&nbsp;");
                imgPreloader = "";
                skipInjection = false;
                var H = "";
                switch (A(pp_images[set_position])) {
                    case"image":
                        imgPreloader = new Image();
                        nextImage = new Image();
                        if (isSet && set_position < e(pp_images).size() - 1) {
                            nextImage.src = pp_images[set_position + 1]
                        }
                        prevImage = new Image();
                        if (isSet && pp_images[set_position - 1]) {
                            prevImage.src = pp_images[set_position - 1]
                        }
                        $pp_pic_holder.find("#pp_full_res")[0].innerHTML = settings.image_markup.replace(/{path}/g, pp_images[set_position]);
                        imgPreloader.onload = function () {
                            t = p(imgPreloader.width, imgPreloader.height);
                            k()
                        };
                        imgPreloader.onerror = function () {
                            alert("Image cannot be loaded. Make sure the path is correct and image exist.");
                            e.prettyPhoto.close()
                        };
                        imgPreloader.src = pp_images[set_position];
                        break;
                    case"youtube":
                        t = p(movie_width, movie_height);
                        if (!(navigator.userAgent.toLowerCase().indexOf("chrome") > -1)) {
                            t.contentHeight -= 30
                        }
                        if (jQuery.browser.msie && (jQuery.browser.version <= 8)) {
                            t.contentHeight += 30
                        }
                        if (isIOS()) {
                            t.contentHeight += 30
                        }
                        movie_id = a("v", pp_images[set_position]);
                        if (movie_id == "") {
                            movie_id = pp_images[set_position].split("youtu.be/");
                            movie_id = movie_id[1];
                            if (movie_id.indexOf("?") > 0) {
                                movie_id = movie_id.substr(0, movie_id.indexOf("?"))
                            }
                            if (movie_id.indexOf("&") > 0) {
                                movie_id = movie_id.substr(0, movie_id.indexOf("&"))
                            }
                        }
                        movie = "https://www.youtube.com/embed/" + movie_id;
                        (a("rel", pp_images[set_position])) ? movie += "?rel=" + a("rel", pp_images[set_position]) : movie += "?rel=1";
                        if (settings.autoplay) {
                            movie += "&autoplay=1&wmode=transparent"
                        }
                        toInject = settings.iframe_markup.replace(/{width}/g, t.width).replace(/{height}/g, t.height).replace(/{wmode}/g, settings.wmode).replace(/{path}/g, movie);
                        break;
                    case"vimeo":
                        t = p(movie_width, movie_height);
                        movie_id = pp_images[set_position];
                        var E = /http:\/\/(www\.)?vimeo.com\/(\d+)/;
                        var D = movie_id.match(E);
                        movie = "http://player.vimeo.com/video/" + D[2] + "?title=0&amp;byline=0&amp;portrait=0";
                        if (settings.autoplay) {
                            movie += "&autoplay=1;"
                        }
                        vimeo_width = t.width + "/embed/?moog_width=" + t.width;
                        toInject = settings.iframe_markup.replace(/{width}/g, vimeo_width).replace(/{height}/g, t.height).replace(/{path}/g, movie);
                        break;
                    case"quicktime":
                        t = p(movie_width, movie_height);
                        t.height += 15;
                        t.contentHeight += 15;
                        t.containerHeight += 15;
                        toInject = settings.quicktime_markup.replace(/{width}/g, t.width).replace(/{height}/g, t.height).replace(/{wmode}/g, settings.wmode).replace(/{path}/g, pp_images[set_position]).replace(/{autoplay}/g, settings.autoplay);
                        break;
                    case"flash":
                        t = p(movie_width, movie_height);
                        flash_vars = pp_images[set_position];
                        flash_vars = flash_vars.substring(pp_images[set_position].indexOf("flashvars") + 10, pp_images[set_position].length);
                        filename = pp_images[set_position];
                        filename = filename.substring(0, filename.indexOf("?"));
                        toInject = settings.flash_markup.replace(/{width}/g, t.width).replace(/{height}/g, t.height).replace(/{wmode}/g, settings.wmode).replace(/{path}/g, filename + "?" + flash_vars);
                        break;
                    case"iframe":
                        t = p(movie_width, movie_height);
                        frame_url = pp_images[set_position];
                        frame_url = frame_url.substr(0, frame_url.indexOf("iframe") - 1);
                        toInject = settings.iframe_markup.replace(/{width}/g, t.width).replace(/{height}/g, t.height).replace(/{path}/g, frame_url);
                        break;
                    case"ajax":
                        doresize = false;
                        t = p(movie_width, movie_height);
                        doresize = true;
                        skipInjection = true;
                        e.get(pp_images[set_position], function (J) {
                            toInject = settings.inline_markup.replace(/{content}/g, J);
                            $pp_pic_holder.find("#pp_full_res")[0].innerHTML = toInject;
                            k()
                        });
                        break;
                    case"custom":
                        t = p(movie_width, movie_height);
                        toInject = settings.custom_markup;
                        break;
                    case"inline":
                        myClone = e(pp_images[set_position]).clone().append('<br clear="all" />').css({width: settings.default_width}).wrapInner('<div id="pp_full_res"><div class="pp_inline"></div></div>').appendTo(e("body")).show();
                        doresize = false;
                        t = p(e(myClone).width(), e(myClone).height());
                        doresize = true;
                        e(myClone).remove();
                        toInject = settings.inline_markup.replace(/{content}/g, e(pp_images[set_position]).html());
                        break;
                    case"video":
                        t = p(movie_width, movie_height);
                        var G = e(".jp-video").length;
                        H = G;
                        toInject = '<div id="jp_container_' + G + '" class="jp-video jp-video-360p">										<div class="jp-type-single">											<div id="jquery_jplayer_' + G + '" class="jp-jplayer"></div>											<div class="jp-gui">												<div class="jp-video-play">													<a href="javascript:;" class="jp-video-play-icon" tabindex="' + G + '">play</a>												</div>												<div class="jp-interface">													<div class="jp-progress">														<div class="jp-seek-bar">															<div class="jp-play-bar"></div>														</div>													</div>													<div class="jp-current-time"></div>													<div class="jp-duration"></div>													<div class="jp-controls-holder">														<ul class="jp-controls">															<li><a href="javascript:;" class="jp-play" tabindex="' + G + '">play</a></li>															<li><a href="javascript:;" class="jp-pause" tabindex="' + G + '">pause</a></li>															<li><a href="javascript:;" class="jp-stop" tabindex="' + G + '">stop</a></li>															<li><a href="javascript:;" class="jp-mute" tabindex="' + G + '" title="mute">mute</a></li>															<li><a href="javascript:;" class="jp-unmute" tabindex="' + G + '" title="unmute">unmute</a></li>															<li><a href="javascript:;" class="jp-volume-max" tabindex="' + G + '" title="max volume">max volume</a></li>														</ul>														<div class="jp-volume-bar">															<div class="jp-volume-bar-value"></div>														</div>														<ul class="jp-toggles">															<li><a href="javascript:;" class="jp-full-screen" tabindex="' + G + '" title="full screen">full screen</a></li>															<li><a href="javascript:;" class="jp-restore-screen" tabindex="' + G + '" title="restore screen">restore screen</a></li>															<li><a href="javascript:;" class="jp-repeat" tabindex="' + G + '" title="repeat">repeat</a></li>															<li><a href="javascript:;" class="jp-repeat-off" tabindex="' + G + '" title="repeat off">repeat off</a></li>														</ul>													</div>												</div>											</div>											<div class="jp-no-solution">												<span>Update Required</span>												To play the media you will need to either update your browser to a recent version or update your <a href="http://get.adobe.com/flashplayer/" target="_blank">Flash plugin</a>.											</div>										</div>									</div>';
                        break
                }
                if (!imgPreloader && !skipInjection) {
                    var F = top.location.pathname.split("/");
                    if (e(F).last() != "") {
                        F[F.length - 1] = ""
                    }
                    var I = F.join("/");
                    $pp_pic_holder.find("#pp_full_res")[0].innerHTML = toInject;
                    k();
                    if (H !== "") {
                        if (A(pp_images[set_position]) == "video") {
                            contentHeight = t.contentHeight - 97
                        } else {
                            contentHeight = t.contentHeight
                        }
                        e("#jquery_jplayer_" + H).jPlayer({
                            ready: function () {
                                e(this).jPlayer("setMedia", {
                                    m4v: pp_images[set_position].split("?")[0] + ".mp4",
                                    flv: pp_images[set_position].split("?")[0] + ".flv",
                                    ogv: pp_images[set_position].split("?")[0] + ".ogv",
                                    webmv: pp_images[set_position].split("?")[0] + ".webm",
                                    poster: pp_images[set_position].split("?")[0] + ".jpg"
                                })
                            },
                            swfPath: "flash",
                            solution: "flash, html",
                            supplied: "webmv, ogv, m4v, flv",
                            size: {
                                width: t.contentWidth + "px",
                                height: contentHeight + "px",
                                cssClass: "jp-video-360p"
                            },
                            cssSelectorAncestor: "#jp_container_" + H,
                            wmode: "transparent",
                            resize: function (J) {
                                var K = (J.jPlayer.status.width == "100%" && J.jPlayer.status.height == "100%");
                                if (K) {
                                    e(J.currentTarget.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode).find(".pp_close").css({display: "none"})
                                } else {
                                    e(J.currentTarget.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode).find(".pp_close").css({display: "block"})
                                }
                            }
                        })
                    }
                }
            });
            return false
        };
        e.prettyPhoto.changePage = function (C) {
            currentGalleryPage = 0;
            if (C == "previous") {
                set_position--;
                if (set_position < 0) {
                    set_position = e(pp_images).size() - 1
                }
            } else {
                if (C == "next") {
                    set_position++;
                    if (set_position > e(pp_images).size() - 1) {
                        set_position = 0
                    }
                } else {
                    set_position = C
                }
            }
            rel_index = set_position;
            if (!doresize) {
                doresize = true
            }
            if (settings.allow_expand) {
                e(".pp_contract").removeClass("pp_contract").addClass("pp_expand")
            }
            o(function () {
                e.prettyPhoto.open()
            })
        };
        e.prettyPhoto.changeGalleryPage = function (C) {
            if (C == "next") {
                currentGalleryPage++;
                if (currentGalleryPage > totalPage) {
                    currentGalleryPage = 0
                }
            } else {
                if (C == "previous") {
                    currentGalleryPage--;
                    if (currentGalleryPage < 0) {
                        currentGalleryPage = totalPage
                    }
                } else {
                    currentGalleryPage = C
                }
            }
            slide_speed = (C == "next" || C == "previous") ? settings.animation_speed : 0;
            slide_to = currentGalleryPage * (itemsPerPage * itemWidth);
            $pp_gallery.find("ul").animate({left: -slide_to}, slide_speed)
        };
        e.prettyPhoto.startSlideshow = function () {
            if (typeof j == "undefined") {
                $pp_pic_holder.find(".pp_play").unbind("click").removeClass("pp_play").addClass("pp_pause").click(function () {
                    e.prettyPhoto.stopSlideshow();
                    return false
                });
                j = setInterval(e.prettyPhoto.startSlideshow, settings.slideshow)
            } else {
                e.prettyPhoto.changePage("next")
            }
        };
        e.prettyPhoto.stopSlideshow = function () {
            $pp_pic_holder.find(".pp_pause").unbind("click").removeClass("pp_pause").addClass("pp_play").click(function () {
                e.prettyPhoto.startSlideshow();
                return false
            });
            clearInterval(j);
            j = undefined
        };
        e.prettyPhoto.close = function () {
            if ($pp_overlay.is(":animated")) {
                return
            }
            e.prettyPhoto.stopSlideshow();
            $pp_pic_holder.stop().find("object,embed").css("visibility", "hidden");
            e("div.pp_pic_holder,div.ppt,.pp_fade").fadeOut(settings.animation_speed, function () {
                e(this).remove()
            });
            $pp_overlay.fadeOut(settings.animation_speed, function () {
                if (e.browser.msie && e.browser.version == 6) {
                    e("select").css("visibility", "visible")
                }
                if (settings.hideflash) {
                    e("object,embed,iframe[src*=youtube],iframe[src*=vimeo]").css("visibility", "visible")
                }
                e(this).remove();
                e(window).unbind("scroll.prettyphoto");
                c();
                settings.callback();
                doresize = true;
                r = false;
                delete settings
            })
        };
        function k() {
            e(".pp_loaderIcon").hide();
            projectedTop = scroll_pos.scrollTop + ((i / 2) - (t.containerHeight / 2));
            if (projectedTop < 0) {
                projectedTop = 0
            }
            $pp_pic_holder.find(".pp_content").animate({
                height: t.contentHeight,
                width: t.contentWidth
            }, settings.animation_speed);
            $pp_pic_holder.animate({
                top: projectedTop,
                left: ((B / 2) - (t.containerWidth / 2) < 0) ? 0 : (B / 2) - (t.containerWidth / 2),
                width: t.containerWidth
            }, settings.animation_speed, function () {
                $pp_pic_holder.find(".pp_hoverContainer,#fullResImage").height(t.height).width(t.width);
                $pp_pic_holder.find(".pp_fade").fadeIn(settings.animation_speed);
                if (isSet && A(pp_images[set_position]) == "image") {
                    $pp_pic_holder.find(".pp_hoverContainer").show()
                } else {
                    $pp_pic_holder.find(".pp_hoverContainer").hide()
                }
                if (settings.allow_expand) {
                    if (t.resized) {
                        e("a.pp_expand,a.pp_contract").show()
                    } else {
                        e("a.pp_expand").hide()
                    }
                }
                if (settings.autoplay_slideshow && !j && !r) {
                    e.prettyPhoto.startSlideshow()
                }
                settings.changepicturecallback();
                r = true
            });
            f();
            g.ajaxcallback()
        }

        function o(C) {
            $pp_pic_holder.find("#pp_full_res object,#pp_full_res embed").css("visibility", "hidden");
            $pp_pic_holder.find(".pp_fade").fadeOut(settings.animation_speed, function () {
                e(".pp_loaderIcon").show();
                C()
            })
        }

        function l(C) {
            (C > 1) ? e(".pp_nav").show() : e(".pp_nav").hide()
        }

        function p(D, C) {
            resized = false;
            v(D, C);
            imageWidth = D, imageHeight = C;
            if (((y > B) || (x > i)) && doresize && settings.allow_resize && !m) {
                resized = true, fitting = false;
                while (!fitting) {
                    if ((y > B)) {
                        imageWidth = (B - 200);
                        imageHeight = (C / D) * imageWidth
                    } else {
                        if ((x > i)) {
                            imageHeight = (i - 200);
                            imageWidth = (D / C) * imageHeight
                        } else {
                            fitting = true
                        }
                    }
                    x = imageHeight, y = imageWidth
                }
                v(imageWidth, imageHeight);
                if ((y > B) || (x > i)) {
                    p(y, x)
                }
            }
            return {
                width: Math.floor(imageWidth),
                height: Math.floor(imageHeight),
                containerHeight: Math.floor(x),
                containerWidth: Math.floor(y) + (settings.horizontal_padding * 2),
                contentHeight: Math.floor(s),
                contentWidth: Math.floor(u),
                resized: resized
            }
        }

        function v(D, C) {
            D = parseFloat(D);
            C = parseFloat(C);
            $pp_details = $pp_pic_holder.find(".pp_details");
            $pp_details.width(D);
            detailsHeight = parseFloat($pp_details.css("marginTop")) + parseFloat($pp_details.css("marginBottom"));
            $pp_details = $pp_details.clone().addClass(settings.theme).width(D).appendTo(e("body")).css({
                position: "absolute",
                top: -10000
            });
            detailsHeight += $pp_details.height();
            detailsHeight = (detailsHeight <= 34) ? 10 : detailsHeight;
            if (e.browser.msie && e.browser.version == 7) {
                detailsHeight += 8
            }
            $pp_details.remove();
            $pp_title = $pp_pic_holder.find(".ppt");
            $pp_title.width(D);
            titleHeight = parseFloat($pp_title.css("marginTop")) + parseFloat($pp_title.css("marginBottom"));
            $pp_title = $pp_title.clone().appendTo(e("body")).css({position: "absolute", top: -10000});
            titleHeight += $pp_title.height();
            if (isNaN(titleHeight)) {
                titleHeight = 0
            }
            $pp_title.remove();
            s = C + detailsHeight + 20;
            u = D;
            x = s + titleHeight + $pp_pic_holder.find(".pp_top").height() + $pp_pic_holder.find(".pp_bottom").height();
            y = D
        }

        function A(C) {
            if (C.match(/youtube\.com\/watch/i) || C.match(/youtu\.be/i)) {
                return "youtube"
            } else {
                if (C.match(/vimeo\.com/i)) {
                    return "vimeo"
                } else {
                    if (C.match(/\b.mov\b/i)) {
                        return "quicktime"
                    } else {
                        if (C.match(/\b.swf\b/i)) {
                            return "flash"
                        } else {
                            if (C.match(/\biframe=true\b/i)) {
                                return "iframe"
                            } else {
                                if (C.match(/\bajax=true\b/i)) {
                                    return "ajax"
                                } else {
                                    if (C.match(/\bcustom=true\b/i)) {
                                        return "custom"
                                    } else {
                                        if (C.substr(0, 1) == "#") {
                                            return "inline"
                                        } else {
                                            if (C.match(/videos\/[a-zA-Z0-9\.]*/)) {
                                                return "video"
                                            } else {
                                                return "image"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        function q() {
            if (doresize && typeof $pp_pic_holder != "undefined") {
                scroll_pos = z();
                contentHeight = $pp_pic_holder.height(), contentwidth = $pp_pic_holder.width();
                projectedTop = (i / 2) + scroll_pos.scrollTop - (contentHeight / 2);
                if (projectedTop < 0) {
                    projectedTop = 0
                }
                if (contentHeight > i) {
                    return
                }
                $pp_pic_holder.css({top: projectedTop, left: (B / 2) + scroll_pos.scrollLeft - (contentwidth / 2)})
            }
        }

        function z() {
            if (self.pageYOffset) {
                return {scrollTop: self.pageYOffset, scrollLeft: self.pageXOffset}
            } else {
                if (document.documentElement && document.documentElement.scrollTop) {
                    return {
                        scrollTop: document.documentElement.scrollTop,
                        scrollLeft: document.documentElement.scrollLeft
                    }
                } else {
                    if (document.body) {
                        return {scrollTop: document.body.scrollTop, scrollLeft: document.body.scrollLeft}
                    }
                }
            }
        }

        function w() {
            i = e(window).height(), B = e(window).width();
            if (typeof $pp_overlay != "undefined") {
                $pp_overlay.height(e(document).height()).width(B)
            }
        }

        function f() {
            if (isSet && settings.overlay_gallery && A(pp_images[set_position]) == "image" && (settings.ie6_fallback && !(e.browser.msie && parseInt(e.browser.version) == 6))) {
                itemWidth = 52 + 5;
                navWidth = (settings.theme == "facebook" || settings.theme == "pp_default") ? 50 : 30;
                itemsPerPage = Math.floor((t.containerWidth - 100 - navWidth) / itemWidth);
                itemsPerPage = (itemsPerPage < pp_images.length) ? itemsPerPage : pp_images.length;
                totalPage = Math.ceil(pp_images.length / itemsPerPage) - 1;
                if (totalPage == 0) {
                    navWidth = 0;
                    $pp_gallery.find(".pp_arrow_next,.pp_arrow_previous").hide()
                } else {
                    $pp_gallery.find(".pp_arrow_next,.pp_arrow_previous").show()
                }
                galleryWidth = itemsPerPage * itemWidth;
                fullGalleryWidth = pp_images.length * itemWidth;
                $pp_gallery.css("margin-left", -((galleryWidth / 2) + (navWidth / 2))).find("div:first").width(galleryWidth + 5).find("ul").width(fullGalleryWidth).find("li.selected").removeClass("selected");
                goToPage = (Math.floor(set_position / itemsPerPage) < totalPage) ? Math.floor(set_position / itemsPerPage) : totalPage;
                e.prettyPhoto.changeGalleryPage(goToPage);
                $pp_gallery_li.filter(":eq(" + set_position + ")").addClass("selected")
            } else {
                $pp_pic_holder.find(".pp_content").unbind("mouseenter mouseleave")
            }
        }

        function h(C) {
            if (settings.social_tools) {
                facebook_like_link = settings.social_tools.replace("{location_href}", encodeURIComponent(location.href))
            }
            settings.markup = settings.markup.replace("{pp_social}", "");
            e("body").append(settings.markup);
            $pp_pic_holder = e(".pp_pic_holder"), $ppt = e(".ppt"), $pp_overlay = e("div.pp_overlay");
            if (isSet && settings.overlay_gallery) {
                currentGalleryPage = 0;
                toInject = "";
                for (var D = 0; D < pp_images.length; D++) {
                    if (!pp_images[D].match(/\b(jpg|jpeg|png|gif)\b/gi)) {
                        classname = "default";
                        img_src = ""
                    } else {
                        classname = "";
                        img_src = pp_images[D]
                    }
                    toInject += "<li class='" + classname + "'><a href='#'><img src='" + img_src + "' width='50' alt='' /></a></li>"
                }
                toInject = settings.gallery_markup.replace(/{gallery}/g, toInject);
                $pp_pic_holder.find("#pp_full_res").after(toInject);
                $pp_gallery = e(".pp_pic_holder .pp_gallery"), $pp_gallery_li = $pp_gallery.find("li");
                $pp_gallery.find(".pp_arrow_next").click(function () {
                    e.prettyPhoto.changeGalleryPage("next");
                    e.prettyPhoto.stopSlideshow();
                    return false
                });
                $pp_gallery.find(".pp_arrow_previous").click(function () {
                    e.prettyPhoto.changeGalleryPage("previous");
                    e.prettyPhoto.stopSlideshow();
                    return false
                });
                $pp_pic_holder.find(".pp_content").hover(function () {
                    $pp_pic_holder.find(".pp_gallery:not(.disabled)").fadeIn()
                }, function () {
                    $pp_pic_holder.find(".pp_gallery:not(.disabled)").fadeOut()
                });
                itemWidth = 52 + 5;
                $pp_gallery_li.each(function (E) {
                    e(this).find("a").click(function () {
                        e.prettyPhoto.changePage(E);
                        e.prettyPhoto.stopSlideshow();
                        return false
                    })
                })
            }
            if (settings.slideshow) {
                $pp_pic_holder.find(".pp_nav").prepend('<a href="#" class="pp_play">Play</a>');
                $pp_pic_holder.find(".pp_nav .pp_play").click(function () {
                    e.prettyPhoto.startSlideshow();
                    return false
                })
            }
            $pp_pic_holder.attr("class", "pp_pic_holder " + settings.theme);
            $pp_overlay.css({
                opacity: 0,
                height: e(document).height(),
                width: e(document).width()
            }).bind("click", function () {
                if (!settings.modal) {
                    e.prettyPhoto.close()
                }
            });
            e("a.pp_close").bind("click", function () {
                e.prettyPhoto.close();
                return false
            });
            if (settings.allow_expand) {
                e("a.pp_expand").bind("click", function (E) {
                    if (e(this).hasClass("pp_expand")) {
                        e(this).removeClass("pp_expand").addClass("pp_contract");
                        doresize = false
                    } else {
                        e(this).removeClass("pp_contract").addClass("pp_expand");
                        doresize = true
                    }
                    o(function () {
                        e.prettyPhoto.open()
                    });
                    return false
                })
            }
            $pp_pic_holder.find(".pp_previous, .pp_nav .pp_arrow_previous").bind("click", function () {
                e.prettyPhoto.changePage("previous");
                e.prettyPhoto.stopSlideshow();
                return false
            });
            $pp_pic_holder.find(".pp_next, .pp_nav .pp_arrow_next").bind("click", function () {
                e.prettyPhoto.changePage("next");
                e.prettyPhoto.stopSlideshow();
                return false
            });
            q()
        }

        if (!pp_alreadyInitialized && d()) {
            pp_alreadyInitialized = true;
            hashIndex = d();
            hashRel = hashIndex;
            hashIndex = hashIndex.substring(hashIndex.indexOf("/") + 1, hashIndex.length - 1);
            hashRel = hashRel.substring(0, hashRel.indexOf("/"));
            setTimeout(function () {
                e("a[" + g.hook + "^='" + hashRel + "']:eq(" + hashIndex + ")").trigger("click")
            }, 50)
        }
        return this.unbind("click.prettyphoto").bind("click.prettyphoto", e.prettyPhoto.initialize)
    };
    function d() {
        url = location.href;
        hashtag = (url.indexOf("#prettyPhoto") !== -1) ? decodeURI(url.substring(url.indexOf("#prettyPhoto") + 1, url.length)) : false;
        return hashtag
    }

    function b() {
        if (typeof theRel == "undefined") {
            return
        }
        location.hash = theRel + "/" + rel_index + "/"
    }

    function c() {
        if (location.href.indexOf("#prettyPhoto") !== -1) {
            location.hash = "prettyPhoto"
        }
    }

    function a(h, g) {
        h = h.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var f = "[\\?&]" + h + "=([^&#]*)";
        var j = new RegExp(f);
        var i = j.exec(g);
        return (i == null) ? "" : i[1]
    }
})(jQuery);
var pp_alreadyInitialized = false;
(function (c) {
    function b(f, e) {
        return (typeof f == "function") ? (f.call(e)) : f
    }

    function d(e) {
        while (e = e.parentNode) {
            if (e == document) {
                return true
            }
        }
        return false
    }

    function a(f, e) {
        this.$element = c(f);
        this.options = e;
        this.enabled = true;
        this.fixTitle()
    }

    a.prototype = {
        show: function () {
            var h = this.getTitle();
            if (h && this.enabled) {
                var g = this.tip();
                g.find(".tipsy-inner")[this.options.html ? "html" : "text"](h);
                g[0].className = "tipsy";
                g.remove().css({top: 0, left: 0, visibility: "hidden", display: "block"}).prependTo(document.body);
                var k = c.extend({}, this.$element.offset(), {
                    width: this.$element[0].offsetWidth,
                    height: this.$element[0].offsetHeight
                });
                var e = g[0].offsetWidth, j = g[0].offsetHeight, i = b(this.options.gravity, this.$element[0]);
                var f;
                switch (i.charAt(0)) {
                    case"n":
                        f = {top: k.top + k.height + this.options.offset, left: k.left + k.width / 2 - e / 2};
                        break;
                    case"s":
                        f = {top: k.top - j - this.options.offset, left: k.left + k.width / 2 - e / 2};
                        break;
                    case"e":
                        f = {top: k.top + k.height / 2 - j / 2, left: k.left - e - this.options.offset};
                        break;
                    case"w":
                        f = {top: k.top + k.height / 2 - j / 2, left: k.left + k.width + this.options.offset};
                        break
                }
                if (i.length == 2) {
                    if (i.charAt(1) == "w") {
                        f.left = k.left + k.width / 2 - 15
                    } else {
                        f.left = k.left + k.width / 2 - e + 15
                    }
                }
                g.css(f).addClass("tipsy-" + i);
                g.find(".tipsy-arrow")[0].className = "tipsy-arrow tipsy-arrow-" + i.charAt(0);
                if (this.options.className) {
                    g.addClass(b(this.options.className, this.$element[0]))
                }
                if (this.options.fade) {
                    g.stop().css({
                        opacity: 0,
                        display: "block",
                        visibility: "visible"
                    }).animate({opacity: this.options.opacity})
                } else {
                    g.css({visibility: "visible", opacity: this.options.opacity})
                }
            }
        }, hide: function () {
            if (this.options.fade) {
                this.tip().stop().fadeOut(function () {
                    c(this).remove()
                })
            } else {
                this.tip().remove()
            }
        }, fixTitle: function () {
            var e = this.$element;
            if (e.attr("title") || typeof(e.attr("original-title")) != "string") {
                e.attr("original-title", e.attr("title") || "").removeAttr("title")
            }
        }, getTitle: function () {
            var g, e = this.$element, f = this.options;
            this.fixTitle();
            var g, f = this.options;
            if (typeof f.title == "string") {
                g = e.attr(f.title == "title" ? "original-title" : f.title)
            } else {
                if (typeof f.title == "function") {
                    g = f.title.call(e[0])
                }
            }
            g = ("" + g).replace(/(^\s*|\s*$)/, "");
            return g || f.fallback
        }, tip: function () {
            if (!this.$tip) {
                this.$tip = c('<div class="tipsy"></div>').html('<div class="tipsy-arrow"></div><div class="tipsy-inner"></div>');
                this.$tip.data("tipsy-pointee", this.$element[0])
            }
            return this.$tip
        }, validate: function () {
            if (!this.$element[0].parentNode) {
                this.hide();
                this.$element = null;
                this.options = null
            }
        }, enable: function () {
            this.enabled = true
        }, disable: function () {
            this.enabled = false
        }, toggleEnabled: function () {
            this.enabled = !this.enabled
        }
    };
    c.fn.tipsy = function (i) {
        if (i === true) {
            return this.data("tipsy")
        } else {
            if (typeof i == "string") {
                var k = this.data("tipsy");
                if (k) {
                    k[i]()
                }
                return this
            }
        }
        i = c.extend({}, c.fn.tipsy.defaults, i);
        function h(m) {
            var n = c.data(m, "tipsy");
            if (!n) {
                n = new a(m, c.fn.tipsy.elementOptions(m, i));
                c.data(m, "tipsy", n)
            }
            return n
        }

        function l() {
            var m = h(this);
            m.hoverState = "in";
            if (i.delayIn == 0) {
                m.show()
            } else {
                m.fixTitle();
                setTimeout(function () {
                    if (m.hoverState == "in") {
                        m.show()
                    }
                }, i.delayIn)
            }
        }

        function g() {
            var m = h(this);
            m.hoverState = "out";
            if (i.delayOut == 0) {
                m.hide()
            } else {
                setTimeout(function () {
                    if (m.hoverState == "out") {
                        m.hide()
                    }
                }, i.delayOut)
            }
        }

        if (!i.live) {
            this.each(function () {
                h(this)
            })
        }
        if (i.trigger != "manual") {
            var e = i.live ? "live" : "bind", j = i.trigger == "hover" ? "mouseenter" : "focus", f = i.trigger == "hover" ? "mouseleave" : "blur";
            this[e](j, l)[e](f, g)
        }
        return this
    };
    c.fn.tipsy.defaults = {
        className: null,
        delayIn: 0,
        delayOut: 0,
        fade: false,
        fallback: "",
        gravity: "n",
        html: false,
        live: false,
        offset: 0,
        opacity: 0.8,
        title: "title",
        trigger: "hover"
    };
    c.fn.tipsy.revalidate = function () {
        c(".tipsy").each(function () {
            var e = c.data(this, "tipsy-pointee");
            if (!e || !d(e)) {
                c(this).remove()
            }
        })
    };
    c.fn.tipsy.elementOptions = function (f, e) {
        return c.metadata ? c.extend({}, e, c(f).metadata()) : e
    };
    c.fn.tipsy.autoNS = function () {
        return c(this).offset().top > (c(document).scrollTop() + c(window).height() / 2) ? "s" : "n"
    };
    c.fn.tipsy.autoWE = function () {
        return c(this).offset().left > (c(document).scrollLeft() + c(window).width() / 2) ? "e" : "w"
    };
    c.fn.tipsy.autoBounds = function (f, e) {
        return function () {
            var g = {
                ns: e[0],
                ew: (e.length > 1 ? e[1] : false)
            }, j = c(document).scrollTop() + f, h = c(document).scrollLeft() + f, i = c(this);
            if (i.offset().top < j) {
                g.ns = "n"
            }
            if (i.offset().left < h) {
                g.ew = "w"
            }
            if (c(window).width() + c(document).scrollLeft() - i.offset().left < f) {
                g.ew = "e"
            }
            if (c(window).height() + c(document).scrollTop() - i.offset().top < f) {
                g.ns = "s"
            }
            return g.ns + (g.ew ? g.ew : "")
        }
    }
})(jQuery);
(function (c) {
    function b(f, e, g, d) {
        c.getJSON(f.url, {root: e}, function (h) {
            function i(k) {
                var l = c("<li/>").attr("id", this.id || "").html("<span>" + this.text + "</span>").appendTo(k);
                if (this.classes) {
                    l.children("span").addClass(this.classes)
                }
                if (this.expanded) {
                    l.addClass("open")
                }
                if (this.hasChildren || this.children && this.children.length) {
                    var j = c("<ul/>").appendTo(l);
                    if (this.hasChildren) {
                        l.addClass("hasChildren");
                        i.call({text: "placeholder", id: "placeholder", children: []}, j)
                    }
                    if (this.children && this.children.length) {
                        c.each(this.children, i, [j])
                    }
                }
            }

            c.each(h, i, [g]);
            c(d).treeview({add: g})
        })
    }

    var a = c.fn.treeview;
    c.fn.treeview = function (f) {
        if (!f.url) {
            return a.apply(this, arguments)
        }
        var d = this;
        b(f, "source", this, d);
        var e = f.toggle;
        return a.call(this, c.extend({}, f, {
            collapsed: true, toggle: function () {
                var h = c(this);
                if (h.hasClass("hasChildren")) {
                    var g = h.removeClass("hasChildren").find("ul");
                    g.empty();
                    b(f, this.id, g, d)
                }
                if (e) {
                    e.apply(this, arguments)
                }
            }
        }))
    }
})(jQuery);
(function (a) {
    a.extend(a.fn, {
        swapClass: function (e, d) {
            var c = this.filter("." + e);
            this.filter("." + d).removeClass(d).addClass(e);
            c.removeClass(e).addClass(d);
            return this
        }, replaceClass: function (d, c) {
            return this.filter("." + d).removeClass(d).addClass(c).end()
        }, hoverClass: function (c) {
            c = c || "hover";
            return this.hover(function () {
                a(this).addClass(c)
            }, function () {
                a(this).removeClass(c)
            })
        }, heightToggle: function (c, d) {
            c ? this.animate({height: "toggle"}, c, d) : this.each(function () {
                jQuery(this)[jQuery(this).is(":hidden") ? "show" : "hide"]();
                if (d) {
                    d.apply(this, arguments)
                }
            })
        }, heightHide: function (c, d) {
            if (c) {
                this.animate({height: "hide"}, c, d)
            } else {
                this.hide();
                if (d) {
                    this.each(d)
                }
            }
        }, prepareBranches: function (c) {
            if (!c.prerendered) {
                this.filter(":last-child:not(ul)").addClass(b.last);
                this.filter((c.collapsed ? "" : "." + b.closed) + ":not(." + b.open + ")").find(">ul").hide()
            }
            return this.filter(":has(>ul)")
        }, applyClasses: function (c, d) {
            this.filter(":has(>ul):not(:has(>a))").find(">span").click(function (e) {
                d.apply(a(this).next())
            }).add(a("a", this)).hoverClass();
            if (!c.prerendered) {
                this.filter(":has(>ul:hidden)").addClass(b.expandable).replaceClass(b.last, b.lastExpandable);
                this.not(":has(>ul:hidden)").addClass(b.collapsable).replaceClass(b.last, b.lastCollapsable);
                this.prepend('<div class="' + b.hitarea + '"/>').find("div." + b.hitarea).each(function () {
                    var e = "";
                    a.each(a(this).parent().attr("class").split(" "), function () {
                        e += this + "-hitarea "
                    });
                    a(this).addClass(e)
                })
            }
            this.find("div." + b.hitarea).click(d)
        }, treeview: function (d) {
            d = a.extend({cookieId: "treeview"}, d);
            if (d.add) {
                return this.trigger("add", [d.add])
            }
            if (d.toggle) {
                var i = d.toggle;
                d.toggle = function () {
                    return i.apply(a(this).parent()[0], arguments)
                }
            }
            function c(l, n) {
                function m(o) {
                    return function () {
                        f.apply(a("div." + b.hitarea, l).filter(function () {
                            return o ? a(this).parent("." + o).length : true
                        }));
                        return false
                    }
                }

                a("a:eq(0)", n).click(m(b.collapsable));
                a("a:eq(1)", n).click(m(b.expandable));
                a("a:eq(2)", n).click(m())
            }

            function f() {
                a(this).parent().find(">.hitarea").swapClass(b.collapsableHitarea, b.expandableHitarea).swapClass(b.lastCollapsableHitarea, b.lastExpandableHitarea).end().swapClass(b.collapsable, b.expandable).swapClass(b.lastCollapsable, b.lastExpandable).find(">ul").heightToggle(d.animated, d.toggle);
                if (d.unique) {
                    a(this).parent().siblings().find(">.hitarea").replaceClass(b.collapsableHitarea, b.expandableHitarea).replaceClass(b.lastCollapsableHitarea, b.lastExpandableHitarea).end().replaceClass(b.collapsable, b.expandable).replaceClass(b.lastCollapsable, b.lastExpandable).find(">ul").heightHide(d.animated, d.toggle)
                }
            }

            function k() {
                function m(n) {
                    return n ? 1 : 0
                }

                var l = [];
                j.each(function (n, o) {
                    l[n] = a(o).is(":has(>ul:visible)") ? 1 : 0
                });
                a.cookie(d.cookieId, l.join(""))
            }

            function e() {
                var l = a.cookie(d.cookieId);
                if (l) {
                    var m = l.split("");
                    j.each(function (n, o) {
                        a(o).find(">ul")[parseInt(m[n]) ? "show" : "hide"]()
                    })
                }
            }

            this.addClass("treeview");
            var j = this.find("li").prepareBranches(d);
            switch (d.persist) {
                case"cookie":
                    var h = d.toggle;
                    d.toggle = function () {
                        k();
                        if (h) {
                            h.apply(this, arguments)
                        }
                    };
                    e();
                    break;
                case"location":
                    var g = this.find("a").filter(function () {
                        return this.href.toLowerCase() == location.href.toLowerCase()
                    });
                    if (g.length) {
                        g.addClass("selected").parents("ul, li").add(g.next()).show()
                    }
                    break
            }
            j.applyClasses(d, f);
            if (d.control) {
                c(this, d.control);
                a(d.control).show()
            }
            return this.bind("add", function (m, l) {
                a(l).prev().removeClass(b.last).removeClass(b.lastCollapsable).removeClass(b.lastExpandable).find(">.hitarea").removeClass(b.lastCollapsableHitarea).removeClass(b.lastExpandableHitarea);
                a(l).find("li").andSelf().prepareBranches(d).applyClasses(d, f)
            })
        }
    });
    var b = a.fn.treeview.classes = {
        open: "open",
        closed: "closed",
        expandable: "expandable",
        expandableHitarea: "expandable-hitarea",
        lastExpandableHitarea: "lastExpandable-hitarea",
        collapsable: "collapsable",
        collapsableHitarea: "collapsable-hitarea",
        lastCollapsableHitarea: "lastCollapsable-hitarea",
        lastCollapsable: "lastCollapsable",
        lastExpandable: "lastExpandable",
        last: "last",
        hitarea: "hitarea"
    };
    a.fn.Treeview = a.fn.treeview
})(jQuery);
(function (a) {
    a.extend(a.fn, {
        swapClass: function (e, d) {
            var c = this.filter("." + e);
            this.filter("." + d).removeClass(d).addClass(e);
            c.removeClass(e).addClass(d);
            return this
        }, replaceClass: function (d, c) {
            return this.filter("." + d).removeClass(d).addClass(c).end()
        }, hoverClass: function (c) {
            c = c || "hover";
            return this.hover(function () {
                a(this).addClass(c)
            }, function () {
                a(this).removeClass(c)
            })
        }, heightToggle: function (c, d) {
            c ? this.animate({height: "toggle"}, c, d) : this.each(function () {
                jQuery(this)[jQuery(this).is(":hidden") ? "show" : "hide"]();
                if (d) {
                    d.apply(this, arguments)
                }
            })
        }, heightHide: function (c, d) {
            if (c) {
                this.animate({height: "hide"}, c, d)
            } else {
                this.hide();
                if (d) {
                    this.each(d)
                }
            }
        }, prepareBranches: function (c) {
            if (!c.prerendered) {
                this.filter(":last-child:not(ul)").addClass(b.last);
                this.filter((c.collapsed ? "" : "." + b.closed) + ":not(." + b.open + ")").find(">ul").hide()
            }
            return this.filter(":has(>ul)")
        }, applyClasses: function (c, d) {
            this.filter(":has(>ul):not(:has(>a))").find(">span").click(function (e) {
                d.apply(a(this).next())
            }).add(a("a", this)).hoverClass();
            if (!c.prerendered) {
                this.filter(":has(>ul:hidden)").addClass(b.expandable).replaceClass(b.last, b.lastExpandable);
                this.not(":has(>ul:hidden)").addClass(b.collapsable).replaceClass(b.last, b.lastCollapsable);
                this.prepend('<div class="' + b.hitarea + '"/>').find("div." + b.hitarea).each(function () {
                    var e = "";
                    a.each(a(this).parent().attr("class").split(" "), function () {
                        e += this + "-hitarea "
                    });
                    a(this).addClass(e)
                })
            }
            this.find("div." + b.hitarea).click(d)
        }, treeview: function (d) {
            d = a.extend({cookieId: "treeview"}, d);
            if (d.add) {
                return this.trigger("add", [d.add])
            }
            if (d.toggle) {
                var i = d.toggle;
                d.toggle = function () {
                    return i.apply(a(this).parent()[0], arguments)
                }
            }
            function c(l, n) {
                function m(o) {
                    return function () {
                        f.apply(a("div." + b.hitarea, l).filter(function () {
                            return o ? a(this).parent("." + o).length : true
                        }));
                        return false
                    }
                }

                a("a:eq(0)", n).click(m(b.collapsable));
                a("a:eq(1)", n).click(m(b.expandable));
                a("a:eq(2)", n).click(m())
            }

            function f() {
                a(this).parent().find(">.hitarea").swapClass(b.collapsableHitarea, b.expandableHitarea).swapClass(b.lastCollapsableHitarea, b.lastExpandableHitarea).end().swapClass(b.collapsable, b.expandable).swapClass(b.lastCollapsable, b.lastExpandable).find(">ul").heightToggle(d.animated, d.toggle);
                if (d.unique) {
                    a(this).parent().siblings().find(">.hitarea").replaceClass(b.collapsableHitarea, b.expandableHitarea).replaceClass(b.lastCollapsableHitarea, b.lastExpandableHitarea).end().replaceClass(b.collapsable, b.expandable).replaceClass(b.lastCollapsable, b.lastExpandable).find(">ul").heightHide(d.animated, d.toggle)
                }
            }

            function k() {
                function m(n) {
                    return n ? 1 : 0
                }

                var l = [];
                j.each(function (n, o) {
                    l[n] = a(o).is(":has(>ul:visible)") ? 1 : 0
                });
                a.cookie(d.cookieId, l.join(""))
            }

            function e() {
                var l = a.cookie(d.cookieId);
                if (l) {
                    var m = l.split("");
                    j.each(function (n, o) {
                        a(o).find(">ul")[parseInt(m[n]) ? "show" : "hide"]()
                    })
                }
            }

            this.addClass("treeview");
            var j = this.find("li").prepareBranches(d);
            switch (d.persist) {
                case"cookie":
                    var h = d.toggle;
                    d.toggle = function () {
                        k();
                        if (h) {
                            h.apply(this, arguments)
                        }
                    };
                    e();
                    break;
                case"location":
                    var g = this.find("a").filter(function () {
                        return this.href.toLowerCase() == location.href.toLowerCase()
                    });
                    if (g.length) {
                        g.addClass("selected").parents("ul, li").add(g.next()).show()
                    }
                    break
            }
            j.applyClasses(d, f);
            if (d.control) {
                c(this, d.control);
                a(d.control).show()
            }
            return this.bind("add", function (m, l) {
                a(l).prev().removeClass(b.last).removeClass(b.lastCollapsable).removeClass(b.lastExpandable).find(">.hitarea").removeClass(b.lastCollapsableHitarea).removeClass(b.lastExpandableHitarea);
                a(l).find("li").andSelf().prepareBranches(d).applyClasses(d, f)
            })
        }
    });
    var b = a.fn.treeview.classes = {
        open: "open",
        closed: "closed",
        expandable: "expandable",
        expandableHitarea: "expandable-hitarea",
        lastExpandableHitarea: "lastExpandable-hitarea",
        collapsable: "collapsable",
        collapsableHitarea: "collapsable-hitarea",
        lastCollapsableHitarea: "lastCollapsable-hitarea",
        lastCollapsable: "lastCollapsable",
        lastExpandable: "lastExpandable",
        last: "last",
        hitarea: "hitarea"
    };
    a.fn.Treeview = a.fn.treeview
})(jQuery);
eval(function (h, b, i, d, g, f) {
    g = function (a) {
        return (a < b ? "" : g(parseInt(a / b))) + ((a = a % b) > 35 ? String.fromCharCode(a + 29) : a.toString(36))
    };
    if (!"".replace(/^/, String)) {
        while (i--) {
            f[g(i)] = d[i] || g(i)
        }
        d = [function (a) {
            return f[a]
        }];
        g = function () {
            return "\\w+"
        };
        i = 1
    }
    while (i--) {
        if (d[i]) {
            h = h.replace(new RegExp("\\b" + g(i) + "\\b", "g"), d[i])
        }
    }
    return h
}(';(4($){$.1l($.F,{E:4(b,c){l a=3.n(\'.\'+b);3.n(\'.\'+c).o(c).m(b);a.o(b).m(c);8 3},s:4(a,b){8 3.n(\'.\'+a).o(a).m(b).P()},1n:4(a){a=a||"1j";8 3.1j(4(){$(3).m(a)},4(){$(3).o(a)})},1h:4(b,a){b?3.1g({1e:"p"},b,a):3.x(4(){T(3)[T(3).1a(":U")?"H":"D"]();7(a)a.A(3,O)})},12:4(b,a){7(b){3.1g({1e:"D"},b,a)}1L{3.D();7(a)3.x(a)}},11:4(a){7(!a.1k){3.n(":r-1H:G(9)").m(k.r);3.n((a.1F?"":"."+k.X)+":G(."+k.W+")").6(">9").D()}8 3.n(":y(>9)")},S:4(b,c){3.n(":y(>9):G(:y(>a))").6(">1z").C(4(a){c.A($(3).19())}).w($("a",3)).1n();7(!b.1k){3.n(":y(>9:U)").m(k.q).s(k.r,k.t);3.G(":y(>9:U)").m(k.u).s(k.r,k.v);3.1r("<J 14=\\""+k.5+"\\"/>").6("J."+k.5).x(4(){l a="";$.x($(3).B().1o("14").13(" "),4(){a+=3+"-5 "});$(3).m(a)})}3.6("J."+k.5).C(c)},z:4(g){g=$.1l({N:"z"},g);7(g.w){8 3.1K("w",[g.w])}7(g.p){l d=g.p;g.p=4(){8 d.A($(3).B()[0],O)}}4 1m(b,c){4 L(a){8 4(){K.A($("J."+k.5,b).n(4(){8 a?$(3).B("."+a).1i:1I}));8 1G}}$("a:10(0)",c).C(L(k.u));$("a:10(1)",c).C(L(k.q));$("a:10(2)",c).C(L())}4 K(){$(3).B().6(">.5").E(k.Z,k.Y).E(k.I,k.M).P().E(k.u,k.q).E(k.v,k.t).6(">9").1h(g.1f,g.p);7(g.1E){$(3).B().1D().6(">.5").s(k.Z,k.Y).s(k.I,k.M).P().s(k.u,k.q).s(k.v,k.t).6(">9").12(g.1f,g.p)}}4 1d(){4 1C(a){8 a?1:0}l b=[];j.x(4(i,e){b[i]=$(e).1a(":y(>9:1B)")?1:0});$.V(g.N,b.1A(""))}4 1c(){l b=$.V(g.N);7(b){l a=b.13("");j.x(4(i,e){$(e).6(">9")[1y(a[i])?"H":"D"]()})}}3.m("z");l j=3.6("Q").11(g);1x(g.1w){18"V":l h=g.p;g.p=4(){1d();7(h){h.A(3,O)}};1c();17;18"1b":l f=3.6("a").n(4(){8 3.16.15()==1b.16.15()});7(f.1i){f.m("1v").1u("9, Q").w(f.19()).H()}17}j.S(g,K);7(g.R){1m(3,g.R);$(g.R).H()}8 3.1t("w",4(a,b){$(b).1s().o(k.r).o(k.v).o(k.t).6(">.5").o(k.I).o(k.M);$(b).6("Q").1q().11(g).S(g,K)})}});l k=$.F.z.1J={W:"W",X:"X",q:"q",Y:"q-5",M:"t-5",u:"u",Z:"u-5",I:"v-5",v:"v",t:"t",r:"r",5:"5"};$.F.1p=$.F.z})(T);', 62, 110, "|||this|function|hitarea|find|if|return|ul||||||||||||var|addClass|filter|removeClass|toggle|expandable|last|replaceClass|lastExpandable|collapsable|lastCollapsable|add|each|has|treeview|apply|parent|click|hide|swapClass|fn|not|show|lastCollapsableHitarea|div|toggler|handler|lastExpandableHitarea|cookieId|arguments|end|li|control|applyClasses|jQuery|hidden|cookie|open|closed|expandableHitarea|collapsableHitarea|eq|prepareBranches|heightHide|split|class|toLowerCase|href|break|case|next|is|location|deserialize|serialize|height|animated|animate|heightToggle|length|hover|prerendered|extend|treeController|hoverClass|attr|Treeview|andSelf|prepend|prev|bind|parents|selected|persist|switch|parseInt|span|join|visible|binary|siblings|unique|collapsed|false|child|true|classes|trigger|else".split("|"), 0, {}));
var JSON;
if (!JSON) {
    JSON = {}
}
(function () {
    function f(n) {
        return n < 10 ? "0" + n : n
    }

    if (typeof Date.prototype.toJSON !== "function") {
        Date.prototype.toJSON = function (key) {
            return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null
        };
        String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function (key) {
            return this.valueOf()
        }
    }
    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = {
        "\b": "\\b",
        "\t": "\\t",
        "\n": "\\n",
        "\f": "\\f",
        "\r": "\\r",
        '"': '\\"',
        "\\": "\\\\"
    }, rep;

    function quote(string) {
        escapable.lastIndex = 0;
        return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
            var c = meta[a];
            return typeof c === "string" ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
        }) + '"' : '"' + string + '"'
    }

    function str(key, holder) {
        var i, k, v, length, mind = gap, partial, value = holder[key];
        if (value && typeof value === "object" && typeof value.toJSON === "function") {
            value = value.toJSON(key)
        }
        if (typeof rep === "function") {
            value = rep.call(holder, key, value)
        }
        switch (typeof value) {
            case"string":
                return quote(value);
            case"number":
                return isFinite(value) ? String(value) : "null";
            case"boolean":
            case"null":
                return String(value);
            case"object":
                if (!value) {
                    return "null"
                }
                gap += indent;
                partial = [];
                if (Object.prototype.toString.apply(value) === "[object Array]") {
                    length = value.length;
                    for (i = 0; i < length; i += 1) {
                        partial[i] = str(i, value) || "null"
                    }
                    v = partial.length === 0 ? "[]" : gap ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]" : "[" + partial.join(",") + "]";
                    gap = mind;
                    return v
                }
                if (rep && typeof rep === "object") {
                    length = rep.length;
                    for (i = 0; i < length; i += 1) {
                        if (typeof rep[i] === "string") {
                            k = rep[i];
                            v = str(k, value);
                            if (v) {
                                partial.push(quote(k) + (gap ? ": " : ":") + v)
                            }
                        }
                    }
                } else {
                    for (k in value) {
                        if (Object.prototype.hasOwnProperty.call(value, k)) {
                            v = str(k, value);
                            if (v) {
                                partial.push(quote(k) + (gap ? ": " : ":") + v)
                            }
                        }
                    }
                }
                v = partial.length === 0 ? "{}" : gap ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}" : "{" + partial.join(",") + "}";
                gap = mind;
                return v
        }
    }

    if (typeof JSON.stringify !== "function") {
        JSON.stringify = function (value, replacer, space) {
            var i;
            gap = "";
            indent = "";
            if (typeof space === "number") {
                for (i = 0; i < space; i += 1) {
                    indent += " "
                }
            } else {
                if (typeof space === "string") {
                    indent = space
                }
            }
            rep = replacer;
            if (replacer && typeof replacer !== "function" && (typeof replacer !== "object" || typeof replacer.length !== "number")) {
                throw new Error("JSON.stringify")
            }
            return str("", {"": value})
        }
    }
    if (typeof JSON.parse !== "function") {
        JSON.parse = function (text, reviver) {
            var j;

            function walk(holder, key) {
                var k, v, value = holder[key];
                if (value && typeof value === "object") {
                    for (k in value) {
                        if (Object.prototype.hasOwnProperty.call(value, k)) {
                            v = walk(value, k);
                            if (v !== undefined) {
                                value[k] = v
                            } else {
                                delete value[k]
                            }
                        }
                    }
                }
                return reviver.call(holder, key, value)
            }

            text = String(text);
            cx.lastIndex = 0;
            if (cx.test(text)) {
                text = text.replace(cx, function (a) {
                    return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
                })
            }
            if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {
                j = eval("(" + text + ")");
                return typeof reviver === "function" ? walk({"": j}, "") : j
            }
            throw new SyntaxError("JSON.parse")
        }
    }
}());
jQuery(document).ready(function () {
    var a = $(".navigation");
    if ($(".navigation").length > 0) {
        $(".navigation li").each(function (b, c) {
            $(this).hover(function () {
                $(this).children("div").children("ul").css("display", "block")
            }, function () {
                $(this).children("div").children("ul").css("display", "none")
            })
        })
    }
});
function setCookie(a, d, b) {
    var f = new Date();
    f.setDate(f.getDate() + b);
    var c = escape(d) + ((b == null) ? "" : "; expires=" + f.toUTCString());
    document.cookie = a + "=" + c
}
function getCookie(b) {
    var c, a, f, d = document.cookie.split(";");
    for (c = 0; c < d.length; c++) {
        a = d[c].substr(0, d[c].indexOf("="));
        f = d[c].substr(d[c].indexOf("=") + 1);
        a = a.replace(/^\s+|\s+$/g, "");
        if (a == b) {
            return unescape(f)
        }
    }
}
$(document).ready(function () {
    $("#MAIN_nudgeArrow").click(function () {
        toggleContentArea()
    });
    $("#MAIN_footerArrow").click(function () {
        a()
    });
    $("#menu-toggle").click(function () {
        $("#menu").toggleClass("show");
        e.preventDefault()
    });
    function a() {
        var b = $("#MAIN_footerContainer").css("height");
        if (b == "30px") {
            $("#MAIN_footerContainer").animate({height: "200px"}, 500, function () {
            });
            $("#MAIN_footerArrow").addClass("open")
        } else {
            $("#MAIN_footerContainer").animate({height: "30px"}, 500, function () {
            });
            $("#MAIN_footerArrow").removeClass("open")
        }
    }

    startNavSummary();
    if ($(".showSearch")) {
        $(".showSearch").click(function () {
            var b = $(".imisContainer").height();
            if (b == 0) {
                strAnimHeight = "260px";
                strButtonContent = "HIDE SEARCH FORM";
                strOverflow = "visible"
            } else {
                strAnimHeight = "0px";
                strButtonContent = "SEARCH AGAIN";
                strOverflow = "hidden"
            }
            $(".imisContainer").animate({height: strAnimHeight}, 500, function () {
                $(".showSearch").html(strButtonContent);
                $(".imisContainer").css({overflow: strOverflow})
            })
        })
    }
    $(".loginSubmit").click(function () {
        $("#loginForm").submit()
    });
    $(".notificationSignupSubmit").click(function (d) {
        d.preventDefault();
        var c = $("#emailAddress").val();
        var f = "";
        var b = $(".msoCheckbox:checkbox:checked").map(function () {
            return this.value
        }).get();
        f = b.join(",");
        $.ajax({
            url: "/ajax.cfm",
            method: "POST",
            data: {action: "submitNotificationCategories", email: c, notificationCategories: f}
        }).done(function (g) {
            arrResponse = g.split("|");
            if (arrResponse.length > 1) {
                $(".msoSignupError").remove();
                $("<p class='msoSignupError'>Error: " + arrResponse[1] + "</p>").prependTo(".notificationSignupBody")
            } else {
                $(".notificationSignupBody").html("<p class='msoSignupError'>Thank you for signing up!<br><br>Please be aware that alerts may go into your spam folder.</p>")
            }
        })
    })
});
function toggleContentArea() {
    var a = $("#MAIN_movingArea");
    var c = a.css("top");
    var b = "";
    var b = "200px";
    if (c != "200px") {
        b = "200px";
        $("#MAIN_nudgeArrow").addClass("up");
        setCookie("contentpos", "up", 1)
    } else {
        b = "552px";
        $("#MAIN_nudgeArrow").removeClass("up");
        setCookie("contentpos", "", 1)
    }
    a.animate({top: b}, 700, function () {
        if ($("#MAIN_movingArea").css("top") == "200px") {
            $("#MAIN_movingArea").addClass("movedup")
        } else {
            $("#MAIN_movingArea").removeClass("movedup")
        }
        $("#MAIN_movingArea").attr("style", "")
    })
}
function startNavSummary() {
    $(".subnav").each(function (a) {
        $(this).hover(function () {
            if ($(this.parentElement).hasClass("navigation")) {
                $(this.parentElement).find(".navSummaryTitle").html($(this).attr("rel"));
                $(this.parentElement).find(".navSummaryText").html($(this).data("summary"))
            } else {
                $(this.parentElement.parentElement.parentElement).find(".navSummaryTitle").html($(this).attr("rel"));
                $(this.parentElement.parentElement.parentElement).find(".navSummaryText").html($(this).data("summary"))
            }
        })
    })
};(function (a) {
    a(document).ready(function () {
        a("body").append('<div id="supersized-loader"></div><ul id="supersized"></ul>')
    });
    a.supersized = function (b) {
        var d = "#supersized", c = this;
        c.$el = a(d);
        c.el = d;
        vars = a.supersized.vars;
        c.$el.data("supersized", c);
        api = c.$el.data("supersized");
        c.init = function () {
            a.supersized.vars = a.extend(a.supersized.vars, a.supersized.themeVars);
            a.supersized.vars.options = a.extend({}, a.supersized.defaultOptions, a.supersized.themeOptions, b);
            c.options = a.supersized.vars.options;
            c._build()
        };
        c._build = function () {
            var g = 0, k = "", f = "", h, j = "", e;
            while (g <= c.options.slides.length - 1) {
                switch (c.options.slide_links) {
                    case"num":
                        h = g;
                        break;
                    case"name":
                        h = c.options.slides[g].title;
                        break;
                    case"blank":
                        h = "";
                        break
                }
                k = k + '<li class="slide-' + g + '"></li>';
                if (g == c.options.start_slide - 1) {
                    if (c.options.slide_links) {
                        f = f + '<li class="slide-link-' + g + ' current-slide"><a>' + h + "</a></li>"
                    }
                    if (c.options.thumb_links) {
                        c.options.slides[g].thumb ? e = c.options.slides[g].thumb : e = c.options.slides[g].image;
                        j = j + '<li class="thumb' + g + ' current-thumb"><img src="' + e + '"/></li>'
                    }
                } else {
                    if (c.options.slide_links) {
                        f = f + '<li class="slide-link-' + g + '" ><a>' + h + "</a></li>"
                    }
                    if (c.options.thumb_links) {
                        c.options.slides[g].thumb ? e = c.options.slides[g].thumb : e = c.options.slides[g].image;
                        j = j + '<li class="thumb' + g + '"><img src="' + e + '"/></li>'
                    }
                }
                g++
            }
            if (c.options.slide_links) {
                a(vars.slide_list).html(f)
            }
            if (c.options.thumb_links && vars.thumb_tray.length) {
                a(vars.thumb_tray).append('<ul id="' + vars.thumb_list.replace("#", "") + '">' + j + "</ul>")
            }
            a(c.el).append(k);
            if (c.options.thumbnail_navigation) {
                vars.current_slide - 1 < 0 ? prevThumb = c.options.slides.length - 1 : prevThumb = vars.current_slide - 1;
                a(vars.prev_thumb).show().html(a("<img/>").attr("src", c.options.slides[prevThumb].image));
                vars.current_slide == c.options.slides.length - 1 ? nextThumb = 0 : nextThumb = vars.current_slide + 1;
                a(vars.next_thumb).show().html(a("<img/>").attr("src", c.options.slides[nextThumb].image))
            }
            c._start()
        };
        c._start = function () {
            if (c.options.start_slide) {
                vars.current_slide = c.options.start_slide - 1
            } else {
                vars.current_slide = Math.floor(Math.random() * c.options.slides.length)
            }
            var x = c.options.new_window ? ' target="_blank"' : "";
            if (c.options.performance == 3) {
                c.$el.addClass("speed")
            } else {
                if (c.options.performance == 1 || c.options.performance == 2) {
                    c.$el.addClass("quality")
                }
            }
            if (c.options.random) {
                arr = c.options.slides;
                for (var j, m, y = arr.length; y; j = parseInt(Math.random() * y), m = arr[--y], arr[y] = arr[j], arr[j] = m) {
                }
                c.options.slides = arr
            }
            if (c.options.slides.length > 1) {
                vars.current_slide - 1 < 0 ? loadPrev = c.options.slides.length - 1 : loadPrev = vars.current_slide - 1;
                var g = c.options.slides[loadPrev].url ? "href='" + c.options.slides[loadPrev].url + "'" : "";
                var w = a('<img src="' + c.options.slides[loadPrev].image + '"/>');
                var r = c.el + " li:eq(" + loadPrev + ")";
                w.appendTo(r).wrap("<a " + g + x + "></a>").parent().parent().addClass("image-loading prevslide");
                w.load(function () {
                    a(this).data("origWidth", a(this).width()).data("origHeight", a(this).height());
                    c.resizeNow()
                })
            } else {
                c.options.slideshow = 0
            }
            g = api.getField("url") ? "href='" + api.getField("url") + "'" : "";
            var k = a('<img src="' + api.getField("image") + '"/>');
            var v = c.el + " li:eq(" + vars.current_slide + ")";
            k.appendTo(v).wrap("<a " + g + x + "></a>").parent().parent().addClass("image-loading activeslide");
            k.load(function () {
                c._origDim(a(this));
                c.resizeNow();
                c.launch();
                if (typeof theme != "undefined" && typeof theme._init == "function") {
                    theme._init()
                }
            });
            if (c.options.slides.length > 1) {
                vars.current_slide == c.options.slides.length - 1 ? loadNext = 0 : loadNext = vars.current_slide + 1;
                g = c.options.slides[loadNext].url ? "href='" + c.options.slides[loadNext].url + "'" : "";
                var q = a('<img src="' + c.options.slides[loadNext].image + '"/>');
                var e = c.el + " li:eq(" + loadNext + ")";
                q.appendTo(e).wrap("<a " + g + x + "></a>").parent().parent().addClass("image-loading");
                q.load(function () {
                    a(this).data("origWidth", a(this).width()).data("origHeight", a(this).height());
                    c.resizeNow()
                })
            }
            c.$el.css("visibility", "hidden");
            a(".load-item").hide()
        };
        c.launch = function () {
            c.$el.css("visibility", "visible");
            a("#supersized-loader").remove();
            if (typeof theme != "undefined" && typeof theme.beforeAnimation == "function") {
                theme.beforeAnimation("next")
            }
            a(".load-item").show();
            if (c.options.keyboard_nav) {
                a(document.documentElement).keyup(function (f) {
                    if (vars.in_animation) {
                        return false
                    }
                    if (f.keyCode == 37 || f.keyCode == 40) {
                        clearInterval(vars.slideshow_interval);
                        c.prevSlide()
                    } else {
                        if (f.keyCode == 39 || f.keyCode == 38) {
                            clearInterval(vars.slideshow_interval);
                            c.nextSlide()
                        } else {
                            if (f.keyCode == 32 && !vars.hover_pause) {
                                clearInterval(vars.slideshow_interval);
                                c.playToggle()
                            }
                        }
                    }
                })
            }
            if (c.options.slideshow && c.options.pause_hover) {
                a(c.el).hover(function () {
                    if (vars.in_animation) {
                        return false
                    }
                    vars.hover_pause = true;
                    if (!vars.is_paused) {
                        vars.hover_pause = "resume";
                        c.playToggle()
                    }
                }, function () {
                    if (vars.hover_pause == "resume") {
                        c.playToggle();
                        vars.hover_pause = false
                    }
                })
            }
            if (c.options.slide_links) {
                a(vars.slide_list + "> li").click(function () {
                    index = a(vars.slide_list + "> li").index(this);
                    targetSlide = index + 1;
                    c.goTo(targetSlide);
                    return false
                })
            }
            if (c.options.thumb_links) {
                a(vars.thumb_list + "> li").click(function () {
                    index = a(vars.thumb_list + "> li").index(this);
                    targetSlide = index + 1;
                    api.goTo(targetSlide);
                    return false
                })
            }
            if (c.options.slideshow && c.options.slides.length > 1) {
                if (c.options.autoplay && c.options.slides.length > 1) {
                    vars.slideshow_interval = setInterval(c.nextSlide, c.options.slide_interval)
                } else {
                    vars.is_paused = true
                }
                a(".load-item img").bind("contextmenu mousedown", function () {
                    return false
                })
            }
            a(window).resize(function () {
                c.resizeNow()
            })
        };
        c.resizeNow = function () {
            return c.$el.each(function () {
                a("img", c.el).each(function () {
                    function j(i) {
                        if (i) {
                            if (thisSlide.width() < k || thisSlide.width() < c.options.min_width) {
                                if (thisSlide.width() * g >= c.options.min_height) {
                                    thisSlide.width(c.options.min_width);
                                    thisSlide.height(thisSlide.width() * g)
                                } else {
                                    e()
                                }
                            }
                        } else {
                            if (c.options.min_height >= f && !c.options.fit_landscape) {
                                if (k * g >= c.options.min_height || k * g >= c.options.min_height && g <= 1) {
                                    thisSlide.width(k);
                                    thisSlide.height(k * g)
                                } else {
                                    if (g > 1) {
                                        thisSlide.height(c.options.min_height);
                                        thisSlide.width(thisSlide.height() / g)
                                    } else {
                                        if (thisSlide.width() < k) {
                                            thisSlide.width(k);
                                            thisSlide.height(thisSlide.width() * g)
                                        }
                                    }
                                }
                            } else {
                                thisSlide.width(k);
                                thisSlide.height(k * g)
                            }
                        }
                    }

                    function e(i) {
                        if (i) {
                            if (thisSlide.height() < f) {
                                if (thisSlide.height() / g >= c.options.min_width) {
                                    thisSlide.height(c.options.min_height);
                                    thisSlide.width(thisSlide.height() / g)
                                } else {
                                    j(true)
                                }
                            }
                        } else {
                            if (c.options.min_width >= k) {
                                if (f / g >= c.options.min_width || g > 1) {
                                    thisSlide.height(f);
                                    thisSlide.width(f / g)
                                } else {
                                    if (g <= 1) {
                                        thisSlide.width(c.options.min_width);
                                        thisSlide.height(thisSlide.width() * g)
                                    }
                                }
                            } else {
                                thisSlide.height(f);
                                thisSlide.width(f / g)
                            }
                        }
                    }

                    thisSlide = a(this);
                    var g = (thisSlide.data("origHeight") / thisSlide.data("origWidth")).toFixed(2);
                    var k = c.$el.width(), f = c.$el.height(), h;
                    if (c.options.fit_always) {
                        if (f / k > g) {
                            j()
                        } else {
                            e()
                        }
                    } else {
                        if (f <= c.options.min_height && k <= c.options.min_width) {
                            if (f / k > g) {
                                c.options.fit_landscape && g < 1 ? j(true) : e(true)
                            } else {
                                c.options.fit_portrait && g >= 1 ? e(true) : j(true)
                            }
                        } else {
                            if (k <= c.options.min_width) {
                                if (f / k > g) {
                                    c.options.fit_landscape && g < 1 ? j(true) : e()
                                } else {
                                    c.options.fit_portrait && g >= 1 ? e() : j(true)
                                }
                            } else {
                                if (f <= c.options.min_height) {
                                    if (f / k > g) {
                                        c.options.fit_landscape && g < 1 ? j() : e(true)
                                    } else {
                                        c.options.fit_portrait && g >= 1 ? e(true) : j()
                                    }
                                } else {
                                    if (f / k > g) {
                                        c.options.fit_landscape && g < 1 ? j() : e()
                                    } else {
                                        c.options.fit_portrait && g >= 1 ? e() : j()
                                    }
                                }
                            }
                        }
                    }
                    if (thisSlide.parents("li").hasClass("image-loading")) {
                        a(".image-loading").removeClass("image-loading")
                    }
                    if (c.options.horizontal_center) {
                        a(this).css("left", (k - a(this).width()) / 2)
                    }
                    if (c.options.vertical_center) {
                        a(this).css("top", (f - a(this).height()) / 2)
                    }
                });
                if (c.options.image_protect) {
                    a("img", c.el).bind("contextmenu mousedown", function () {
                        return false
                    })
                }
                return false
            })
        };
        c.nextSlide = function () {
            if (vars.in_animation || !api.options.slideshow) {
                return false
            } else {
                vars.in_animation = true
            }
            clearInterval(vars.slideshow_interval);
            var h = c.options.slides, m = c.$el.find(".activeslide");
            a(".prevslide").removeClass("prevslide");
            m.removeClass("activeslide").addClass("prevslide");
            vars.current_slide + 1 == c.options.slides.length ? vars.current_slide = 0 : vars.current_slide++;
            var g = a(c.el + " li:eq(" + vars.current_slide + ")"), j = c.$el.find(".prevslide");
            if (c.options.performance == 1) {
                c.$el.removeClass("quality").addClass("speed")
            }
            loadSlide = false;
            vars.current_slide == c.options.slides.length - 1 ? loadSlide = 0 : loadSlide = vars.current_slide + 1;
            var l = c.el + " li:eq(" + loadSlide + ")";
            if (!a(l).html()) {
                var e = c.options.new_window ? ' target="_blank"' : "";
                imageLink = c.options.slides[loadSlide].url ? "href='" + c.options.slides[loadSlide].url + "'" : "";
                var k = a('<img src="' + c.options.slides[loadSlide].image + '"/>');
                k.appendTo(l).wrap("<a " + imageLink + e + "></a>").parent().parent().addClass("image-loading").css("visibility", "hidden");
                k.load(function () {
                    c._origDim(a(this));
                    c.resizeNow()
                })
            }
            if (c.options.thumbnail_navigation == 1) {
                vars.current_slide - 1 < 0 ? prevThumb = c.options.slides.length - 1 : prevThumb = vars.current_slide - 1;
                a(vars.prev_thumb).html(a("<img/>").attr("src", c.options.slides[prevThumb].image));
                nextThumb = loadSlide;
                a(vars.next_thumb).html(a("<img/>").attr("src", c.options.slides[nextThumb].image))
            }
            if (typeof theme != "undefined" && typeof theme.beforeAnimation == "function") {
                theme.beforeAnimation("next")
            }
            if (c.options.slide_links) {
                a(".current-slide").removeClass("current-slide");
                a(vars.slide_list + "> li").eq(vars.current_slide).addClass("current-slide")
            }
            g.css("visibility", "hidden").addClass("activeslide");
            switch (c.options.transition) {
                case 0:
                case"none":
                    g.css("visibility", "visible");
                    vars.in_animation = false;
                    break;
                case 1:
                case"fade":
                    g.animate({opacity: 0}, 0).css("visibility", "visible").animate({
                        opacity: 1,
                        avoidTransforms: false
                    }, c.options.transition_speed, function () {
                        c.afterAnimation()
                    });
                    break;
                case 2:
                case"slideTop":
                    g.animate({top: -c.$el.height()}, 0).css("visibility", "visible").animate({
                        top: 0,
                        avoidTransforms: false
                    }, c.options.transition_speed, function () {
                        c.afterAnimation()
                    });
                    break;
                case 3:
                case"slideRight":
                    g.animate({left: c.$el.width()}, 0).css("visibility", "visible").animate({
                        left: 0,
                        avoidTransforms: false
                    }, c.options.transition_speed, function () {
                        c.afterAnimation()
                    });
                    break;
                case 4:
                case"slideBottom":
                    g.animate({top: c.$el.height()}, 0).css("visibility", "visible").animate({
                        top: 0,
                        avoidTransforms: false
                    }, c.options.transition_speed, function () {
                        c.afterAnimation()
                    });
                    break;
                case 5:
                case"slideLeft":
                    g.animate({left: -c.$el.width()}, 0).css("visibility", "visible").animate({
                        left: 0,
                        avoidTransforms: false
                    }, c.options.transition_speed, function () {
                        c.afterAnimation()
                    });
                    break;
                case 6:
                case"carouselRight":
                    g.animate({left: c.$el.width()}, 0).css("visibility", "visible").animate({
                        left: 0,
                        avoidTransforms: false
                    }, c.options.transition_speed, function () {
                        c.afterAnimation()
                    });
                    m.animate({left: -c.$el.width(), avoidTransforms: false}, c.options.transition_speed);
                    break;
                case 7:
                case"carouselLeft":
                    g.animate({left: -c.$el.width()}, 0).css("visibility", "visible").animate({
                        left: 0,
                        avoidTransforms: false
                    }, c.options.transition_speed, function () {
                        c.afterAnimation()
                    });
                    m.animate({left: c.$el.width(), avoidTransforms: false}, c.options.transition_speed);
                    break
            }
            return false
        };
        c.prevSlide = function () {
            if (vars.in_animation || !api.options.slideshow) {
                return false
            } else {
                vars.in_animation = true
            }
            clearInterval(vars.slideshow_interval);
            var h = c.options.slides, m = c.$el.find(".activeslide");
            a(".prevslide").removeClass("prevslide");
            m.removeClass("activeslide").addClass("prevslide");
            vars.current_slide == 0 ? vars.current_slide = c.options.slides.length - 1 : vars.current_slide--;
            var g = a(c.el + " li:eq(" + vars.current_slide + ")"), j = c.$el.find(".prevslide");
            if (c.options.performance == 1) {
                c.$el.removeClass("quality").addClass("speed")
            }
            loadSlide = false;
            vars.current_slide - 1 < 0 ? loadSlide = c.options.slides.length - 1 : loadSlide = vars.current_slide - 1;
            var l = c.el + " li:eq(" + loadSlide + ")";
            if (!a(l).html()) {
                var e = c.options.new_window ? ' target="_blank"' : "";
                imageLink = c.options.slides[loadSlide].url ? "href='" + c.options.slides[loadSlide].url + "'" : "";
                var k = a('<img src="' + c.options.slides[loadSlide].image + '"/>');
                k.appendTo(l).wrap("<a " + imageLink + e + "></a>").parent().parent().addClass("image-loading").css("visibility", "hidden");
                k.load(function () {
                    c._origDim(a(this));
                    c.resizeNow()
                })
            }
            if (c.options.thumbnail_navigation == 1) {
                prevThumb = loadSlide;
                a(vars.prev_thumb).html(a("<img/>").attr("src", c.options.slides[prevThumb].image));
                vars.current_slide == c.options.slides.length - 1 ? nextThumb = 0 : nextThumb = vars.current_slide + 1;
                a(vars.next_thumb).html(a("<img/>").attr("src", c.options.slides[nextThumb].image))
            }
            if (typeof theme != "undefined" && typeof theme.beforeAnimation == "function") {
                theme.beforeAnimation("prev")
            }
            if (c.options.slide_links) {
                a(".current-slide").removeClass("current-slide");
                a(vars.slide_list + "> li").eq(vars.current_slide).addClass("current-slide")
            }
            g.css("visibility", "hidden").addClass("activeslide");
            switch (c.options.transition) {
                case 0:
                case"none":
                    g.css("visibility", "visible");
                    vars.in_animation = false;
                    c.afterAnimation();
                    break;
                case 1:
                case"fade":
                    g.animate({opacity: 0}, 0).css("visibility", "visible").animate({
                        opacity: 1,
                        avoidTransforms: false
                    }, c.options.transition_speed, function () {
                        c.afterAnimation()
                    });
                    break;
                case 2:
                case"slideTop":
                    g.animate({top: c.$el.height()}, 0).css("visibility", "visible").animate({
                        top: 0,
                        avoidTransforms: false
                    }, c.options.transition_speed, function () {
                        c.afterAnimation()
                    });
                    break;
                case 3:
                case"slideRight":
                    g.animate({left: -c.$el.width()}, 0).css("visibility", "visible").animate({
                        left: 0,
                        avoidTransforms: false
                    }, c.options.transition_speed, function () {
                        c.afterAnimation()
                    });
                    break;
                case 4:
                case"slideBottom":
                    g.animate({top: -c.$el.height()}, 0).css("visibility", "visible").animate({
                        top: 0,
                        avoidTransforms: false
                    }, c.options.transition_speed, function () {
                        c.afterAnimation()
                    });
                    break;
                case 5:
                case"slideLeft":
                    g.animate({left: c.$el.width()}, 0).css("visibility", "visible").animate({
                        left: 0,
                        avoidTransforms: false
                    }, c.options.transition_speed, function () {
                        c.afterAnimation()
                    });
                    break;
                case 6:
                case"carouselRight":
                    g.animate({left: -c.$el.width()}, 0).css("visibility", "visible").animate({
                        left: 0,
                        avoidTransforms: false
                    }, c.options.transition_speed, function () {
                        c.afterAnimation()
                    });
                    m.animate({left: 0}, 0).animate({
                        left: c.$el.width(),
                        avoidTransforms: false
                    }, c.options.transition_speed);
                    break;
                case 7:
                case"carouselLeft":
                    g.animate({left: c.$el.width()}, 0).css("visibility", "visible").animate({
                        left: 0,
                        avoidTransforms: false
                    }, c.options.transition_speed, function () {
                        c.afterAnimation()
                    });
                    m.animate({left: 0}, 0).animate({
                        left: -c.$el.width(),
                        avoidTransforms: false
                    }, c.options.transition_speed);
                    break
            }
            return false
        };
        c.playToggle = function () {
            if (vars.in_animation || !api.options.slideshow) {
                return false
            }
            if (vars.is_paused) {
                vars.is_paused = false;
                if (typeof theme != "undefined" && typeof theme.playToggle == "function") {
                    theme.playToggle("play")
                }
                vars.slideshow_interval = setInterval(c.nextSlide, c.options.slide_interval)
            } else {
                vars.is_paused = true;
                if (typeof theme != "undefined" && typeof theme.playToggle == "function") {
                    theme.playToggle("pause")
                }
                clearInterval(vars.slideshow_interval)
            }
            return false
        };
        c.goTo = function (e) {
            if (vars.in_animation || !api.options.slideshow) {
                return false
            }
            var f = c.options.slides.length;
            if (e < 0) {
                e = f
            } else {
                if (e > f) {
                    e = 1
                }
            }
            e = f - e + 1;
            clearInterval(vars.slideshow_interval);
            if (typeof theme != "undefined" && typeof theme.goTo == "function") {
                theme.goTo()
            }
            if (vars.current_slide == f - e) {
                if (!vars.is_paused) {
                    vars.slideshow_interval = setInterval(c.nextSlide, c.options.slide_interval)
                }
                return false
            }
            if (f - e > vars.current_slide) {
                vars.current_slide = f - e - 1;
                vars.update_images = "next";
                c._placeSlide(vars.update_images)
            } else {
                if (f - e < vars.current_slide) {
                    vars.current_slide = f - e + 1;
                    vars.update_images = "prev";
                    c._placeSlide(vars.update_images)
                }
            }
            if (c.options.slide_links) {
                a(vars.slide_list + "> .current-slide").removeClass("current-slide");
                a(vars.slide_list + "> li").eq(f - e).addClass("current-slide")
            }
            if (c.options.thumb_links) {
                a(vars.thumb_list + "> .current-thumb").removeClass("current-thumb");
                a(vars.thumb_list + "> li").eq(f - e).addClass("current-thumb")
            }
        };
        c._placeSlide = function (f) {
            var h = c.options.new_window ? ' target="_blank"' : "";
            loadSlide = false;
            if (f == "next") {
                vars.current_slide == c.options.slides.length - 1 ? loadSlide = 0 : loadSlide = vars.current_slide + 1;
                var e = c.el + " li:eq(" + loadSlide + ")";
                if (!a(e).html()) {
                    var h = c.options.new_window ? ' target="_blank"' : "";
                    imageLink = c.options.slides[loadSlide].url ? "href='" + c.options.slides[loadSlide].url + "'" : "";
                    var g = a('<img src="' + c.options.slides[loadSlide].image + '"/>');
                    g.appendTo(e).wrap("<a " + imageLink + h + "></a>").parent().parent().addClass("image-loading").css("visibility", "hidden");
                    g.load(function () {
                        c._origDim(a(this));
                        c.resizeNow()
                    })
                }
                c.nextSlide()
            } else {
                if (f == "prev") {
                    vars.current_slide - 1 < 0 ? loadSlide = c.options.slides.length - 1 : loadSlide = vars.current_slide - 1;
                    var e = c.el + " li:eq(" + loadSlide + ")";
                    if (!a(e).html()) {
                        var h = c.options.new_window ? ' target="_blank"' : "";
                        imageLink = c.options.slides[loadSlide].url ? "href='" + c.options.slides[loadSlide].url + "'" : "";
                        var g = a('<img src="' + c.options.slides[loadSlide].image + '"/>');
                        g.appendTo(e).wrap("<a " + imageLink + h + "></a>").parent().parent().addClass("image-loading").css("visibility", "hidden");
                        g.load(function () {
                            c._origDim(a(this));
                            c.resizeNow()
                        })
                    }
                    c.prevSlide()
                }
            }
        };
        c._origDim = function (f) {
            f.data("origWidth", f.width()).data("origHeight", f.height())
        };
        c.afterAnimation = function () {
            if (c.options.performance == 1) {
                c.$el.removeClass("speed").addClass("quality")
            }
            if (vars.update_images) {
                vars.current_slide - 1 < 0 ? setPrev = c.options.slides.length - 1 : setPrev = vars.current_slide - 1;
                vars.update_images = false;
                a(".prevslide").removeClass("prevslide");
                a(c.el + " li:eq(" + setPrev + ")").addClass("prevslide")
            }
            vars.in_animation = false;
            if (!vars.is_paused && c.options.slideshow) {
                vars.slideshow_interval = setInterval(c.nextSlide, c.options.slide_interval);
                if (c.options.stop_loop && vars.current_slide == c.options.slides.length - 1) {
                    c.playToggle()
                }
            }
            if (typeof theme != "undefined" && typeof theme.afterAnimation == "function") {
                theme.afterAnimation()
            }
            return false
        };
        c.getField = function (f) {
            return c.options.slides[vars.current_slide][f]
        };
        c.init()
    };
    a.supersized.vars = {
        thumb_tray: "#thumb-tray",
        thumb_list: "#thumb-list",
        slide_list: "#slide-list",
        current_slide: 0,
        in_animation: false,
        is_paused: false,
        hover_pause: false,
        slideshow_interval: false,
        update_images: false,
        options: {}
    };
    a.supersized.defaultOptions = {
        slideshow: 1,
        autoplay: 1,
        start_slide: 1,
        stop_loop: 0,
        random: 0,
        slide_interval: 5000,
        transition: 1,
        transition_speed: 750,
        new_window: 1,
        pause_hover: 0,
        keyboard_nav: 1,
        performance: 1,
        image_protect: 1,
        fit_always: 0,
        fit_landscape: 0,
        fit_portrait: 1,
        min_width: 0,
        min_height: 0,
        horizontal_center: 1,
        vertical_center: 1,
        slide_links: 1,
        thumb_links: 1,
        thumbnail_navigation: 0
    };
    a.fn.supersized = function (b) {
        return this.each(function () {
            new a.supersized(b)
        })
    }
})(jQuery);
var swfobject = function () {
    var aq = "undefined", aD = "object", ab = "Shockwave Flash", X = "ShockwaveFlash.ShockwaveFlash", aE = "application/x-shockwave-flash", ac = "SWFObjectExprInst", ax = "onreadystatechange", af = window, aL = document, aB = navigator, aa = false, Z = [aN], aG = [], ag = [], al = [], aJ, ad, ap, at, ak = false, aU = false, aH, an, aI = true, ah = function () {
        var a = typeof aL.getElementById != aq && typeof aL.getElementsByTagName != aq && typeof aL.createElement != aq, e = aB.userAgent.toLowerCase(), c = aB.platform.toLowerCase(), h = c ? /win/.test(c) : /win/.test(e), j = c ? /mac/.test(c) : /mac/.test(e), g = /webkit/.test(e) ? parseFloat(e.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : false, d = !+"\v1", f = [0, 0, 0], k = null;
        if (typeof aB.plugins != aq && typeof aB.plugins[ab] == aD) {
            k = aB.plugins[ab].description;
            if (k && !(typeof aB.mimeTypes != aq && aB.mimeTypes[aE] && !aB.mimeTypes[aE].enabledPlugin)) {
                aa = true;
                d = false;
                k = k.replace(/^.*\s+(\S+\s+\S+$)/, "$1");
                f[0] = parseInt(k.replace(/^(.*)\..*$/, "$1"), 10);
                f[1] = parseInt(k.replace(/^.*\.(.*)\s.*$/, "$1"), 10);
                f[2] = /[a-zA-Z]/.test(k) ? parseInt(k.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0
            }
        } else {
            if (typeof af.ActiveXObject != aq) {
                try {
                    var i = new ActiveXObject(X);
                    if (i) {
                        k = i.GetVariable("$version");
                        if (k) {
                            d = true;
                            k = k.split(" ")[1].split(",");
                            f = [parseInt(k[0], 10), parseInt(k[1], 10), parseInt(k[2], 10)]
                        }
                    }
                } catch (b) {
                }
            }
        }
        return {w3: a, pv: f, wk: g, ie: d, win: h, mac: j}
    }(), aK = function () {
        if (!ah.w3) {
            return
        }
        if ((typeof aL.readyState != aq && aL.readyState == "complete") || (typeof aL.readyState == aq && (aL.getElementsByTagName("body")[0] || aL.body))) {
            aP()
        }
        if (!ak) {
            if (typeof aL.addEventListener != aq) {
                aL.addEventListener("DOMContentLoaded", aP, false)
            }
            if (ah.ie && ah.win) {
                aL.attachEvent(ax, function () {
                    if (aL.readyState == "complete") {
                        aL.detachEvent(ax, arguments.callee);
                        aP()
                    }
                });
                if (af == top) {
                    (function () {
                        if (ak) {
                            return
                        }
                        try {
                            aL.documentElement.doScroll("left")
                        } catch (a) {
                            setTimeout(arguments.callee, 0);
                            return
                        }
                        aP()
                    })()
                }
            }
            if (ah.wk) {
                (function () {
                    if (ak) {
                        return
                    }
                    if (!/loaded|complete/.test(aL.readyState)) {
                        setTimeout(arguments.callee, 0);
                        return
                    }
                    aP()
                })()
            }
            aC(aP)
        }
    }();

    function aP() {
        if (ak) {
            return
        }
        try {
            var b = aL.getElementsByTagName("body")[0].appendChild(ar("span"));
            b.parentNode.removeChild(b)
        } catch (a) {
            return
        }
        ak = true;
        var d = Z.length;
        for (var c = 0; c < d; c++) {
            Z[c]()
        }
    }

    function aj(a) {
        if (ak) {
            a()
        } else {
            Z[Z.length] = a
        }
    }

    function aC(a) {
        if (typeof af.addEventListener != aq) {
            af.addEventListener("load", a, false)
        } else {
            if (typeof aL.addEventListener != aq) {
                aL.addEventListener("load", a, false)
            } else {
                if (typeof af.attachEvent != aq) {
                    aM(af, "onload", a)
                } else {
                    if (typeof af.onload == "function") {
                        var b = af.onload;
                        af.onload = function () {
                            b();
                            a()
                        }
                    } else {
                        af.onload = a
                    }
                }
            }
        }
    }

    function aN() {
        if (aa) {
            Y()
        } else {
            am()
        }
    }

    function Y() {
        var d = aL.getElementsByTagName("body")[0];
        var b = ar(aD);
        b.setAttribute("type", aE);
        var a = d.appendChild(b);
        if (a) {
            var c = 0;
            (function () {
                if (typeof a.GetVariable != aq) {
                    var e = a.GetVariable("$version");
                    if (e) {
                        e = e.split(" ")[1].split(",");
                        ah.pv = [parseInt(e[0], 10), parseInt(e[1], 10), parseInt(e[2], 10)]
                    }
                } else {
                    if (c < 10) {
                        c++;
                        setTimeout(arguments.callee, 10);
                        return
                    }
                }
                d.removeChild(b);
                a = null;
                am()
            })()
        } else {
            am()
        }
    }

    function am() {
        var g = aG.length;
        if (g > 0) {
            for (var h = 0; h < g; h++) {
                var c = aG[h].id;
                var l = aG[h].callbackFn;
                var a = {success: false, id: c};
                if (ah.pv[0] > 0) {
                    var i = aS(c);
                    if (i) {
                        if (ao(aG[h].swfVersion) && !(ah.wk && ah.wk < 312)) {
                            ay(c, true);
                            if (l) {
                                a.success = true;
                                a.ref = av(c);
                                l(a)
                            }
                        } else {
                            if (aG[h].expressInstall && au()) {
                                var e = {};
                                e.data = aG[h].expressInstall;
                                e.width = i.getAttribute("width") || "0";
                                e.height = i.getAttribute("height") || "0";
                                if (i.getAttribute("class")) {
                                    e.styleclass = i.getAttribute("class")
                                }
                                if (i.getAttribute("align")) {
                                    e.align = i.getAttribute("align")
                                }
                                var f = {};
                                var d = i.getElementsByTagName("param");
                                var k = d.length;
                                for (var j = 0; j < k; j++) {
                                    if (d[j].getAttribute("name").toLowerCase() != "movie") {
                                        f[d[j].getAttribute("name")] = d[j].getAttribute("value")
                                    }
                                }
                                ae(e, f, c, l)
                            } else {
                                aF(i);
                                if (l) {
                                    l(a)
                                }
                            }
                        }
                    }
                } else {
                    ay(c, true);
                    if (l) {
                        var b = av(c);
                        if (b && typeof b.SetVariable != aq) {
                            a.success = true;
                            a.ref = b
                        }
                        l(a)
                    }
                }
            }
        }
    }

    function av(b) {
        var d = null;
        var c = aS(b);
        if (c && c.nodeName == "OBJECT") {
            if (typeof c.SetVariable != aq) {
                d = c
            } else {
                var a = c.getElementsByTagName(aD)[0];
                if (a) {
                    d = a
                }
            }
        }
        return d
    }

    function au() {
        return !aU && ao("6.0.65") && (ah.win || ah.mac) && !(ah.wk && ah.wk < 312)
    }

    function ae(f, d, h, e) {
        aU = true;
        ap = e || null;
        at = {success: false, id: h};
        var a = aS(h);
        if (a) {
            if (a.nodeName == "OBJECT") {
                aJ = aO(a);
                ad = null
            } else {
                aJ = a;
                ad = h
            }
            f.id = ac;
            if (typeof f.width == aq || (!/%$/.test(f.width) && parseInt(f.width, 10) < 310)) {
                f.width = "310"
            }
            if (typeof f.height == aq || (!/%$/.test(f.height) && parseInt(f.height, 10) < 137)) {
                f.height = "137"
            }
            aL.title = aL.title.slice(0, 47) + " - Flash Player Installation";
            var b = ah.ie && ah.win ? "ActiveX" : "PlugIn", c = "MMredirectURL=" + af.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + b + "&MMdoctitle=" + aL.title;
            if (typeof d.flashvars != aq) {
                d.flashvars += "&" + c
            } else {
                d.flashvars = c
            }
            if (ah.ie && ah.win && a.readyState != 4) {
                var g = ar("div");
                h += "SWFObjectNew";
                g.setAttribute("id", h);
                a.parentNode.insertBefore(g, a);
                a.style.display = "none";
                (function () {
                    if (a.readyState == 4) {
                        a.parentNode.removeChild(a)
                    } else {
                        setTimeout(arguments.callee, 10)
                    }
                })()
            }
            aA(f, d, h)
        }
    }

    function aF(a) {
        if (ah.ie && ah.win && a.readyState != 4) {
            var b = ar("div");
            a.parentNode.insertBefore(b, a);
            b.parentNode.replaceChild(aO(a), b);
            a.style.display = "none";
            (function () {
                if (a.readyState == 4) {
                    a.parentNode.removeChild(a)
                } else {
                    setTimeout(arguments.callee, 10)
                }
            })()
        } else {
            a.parentNode.replaceChild(aO(a), a)
        }
    }

    function aO(b) {
        var d = ar("div");
        if (ah.win && ah.ie) {
            d.innerHTML = b.innerHTML
        } else {
            var e = b.getElementsByTagName(aD)[0];
            if (e) {
                var a = e.childNodes;
                if (a) {
                    var f = a.length;
                    for (var c = 0; c < f; c++) {
                        if (!(a[c].nodeType == 1 && a[c].nodeName == "PARAM") && !(a[c].nodeType == 8)) {
                            d.appendChild(a[c].cloneNode(true))
                        }
                    }
                }
            }
        }
        return d
    }

    function aA(e, g, c) {
        var d, a = aS(c);
        if (ah.wk && ah.wk < 312) {
            return d
        }
        if (a) {
            if (typeof e.id == aq) {
                e.id = c
            }
            if (ah.ie && ah.win) {
                var f = "";
                for (var i in e) {
                    if (e[i] != Object.prototype[i]) {
                        if (i.toLowerCase() == "data") {
                            g.movie = e[i]
                        } else {
                            if (i.toLowerCase() == "styleclass") {
                                f += ' class="' + e[i] + '"'
                            } else {
                                if (i.toLowerCase() != "classid") {
                                    f += " " + i + '="' + e[i] + '"'
                                }
                            }
                        }
                    }
                }
                var h = "";
                for (var j in g) {
                    if (g[j] != Object.prototype[j]) {
                        h += '<param name="' + j + '" value="' + g[j] + '" />'
                    }
                }
                a.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + f + ">" + h + "</object>";
                ag[ag.length] = e.id;
                d = aS(e.id)
            } else {
                var b = ar(aD);
                b.setAttribute("type", aE);
                for (var k in e) {
                    if (e[k] != Object.prototype[k]) {
                        if (k.toLowerCase() == "styleclass") {
                            b.setAttribute("class", e[k])
                        } else {
                            if (k.toLowerCase() != "classid") {
                                b.setAttribute(k, e[k])
                            }
                        }
                    }
                }
                for (var l in g) {
                    if (g[l] != Object.prototype[l] && l.toLowerCase() != "movie") {
                        aQ(b, l, g[l])
                    }
                }
                a.parentNode.replaceChild(b, a);
                d = b
            }
        }
        return d
    }

    function aQ(b, d, c) {
        var a = ar("param");
        a.setAttribute("name", d);
        a.setAttribute("value", c);
        b.appendChild(a)
    }

    function aw(a) {
        var b = aS(a);
        if (b && b.nodeName == "OBJECT") {
            if (ah.ie && ah.win) {
                b.style.display = "none";
                (function () {
                    if (b.readyState == 4) {
                        aT(a)
                    } else {
                        setTimeout(arguments.callee, 10)
                    }
                })()
            } else {
                b.parentNode.removeChild(b)
            }
        }
    }

    function aT(a) {
        var b = aS(a);
        if (b) {
            for (var c in b) {
                if (typeof b[c] == "function") {
                    b[c] = null
                }
            }
            b.parentNode.removeChild(b)
        }
    }

    function aS(a) {
        var c = null;
        try {
            c = aL.getElementById(a)
        } catch (b) {
        }
        return c
    }

    function ar(a) {
        return aL.createElement(a)
    }

    function aM(a, c, b) {
        a.attachEvent(c, b);
        al[al.length] = [a, c, b]
    }

    function ao(a) {
        var b = ah.pv, c = a.split(".");
        c[0] = parseInt(c[0], 10);
        c[1] = parseInt(c[1], 10) || 0;
        c[2] = parseInt(c[2], 10) || 0;
        return (b[0] > c[0] || (b[0] == c[0] && b[1] > c[1]) || (b[0] == c[0] && b[1] == c[1] && b[2] >= c[2])) ? true : false
    }

    function az(b, f, a, c) {
        if (ah.ie && ah.mac) {
            return
        }
        var e = aL.getElementsByTagName("head")[0];
        if (!e) {
            return
        }
        var g = (a && typeof a == "string") ? a : "screen";
        if (c) {
            aH = null;
            an = null
        }
        if (!aH || an != g) {
            var d = ar("style");
            d.setAttribute("type", "text/css");
            d.setAttribute("media", g);
            aH = e.appendChild(d);
            if (ah.ie && ah.win && typeof aL.styleSheets != aq && aL.styleSheets.length > 0) {
                aH = aL.styleSheets[aL.styleSheets.length - 1]
            }
            an = g
        }
        if (ah.ie && ah.win) {
            if (aH && typeof aH.addRule == aD) {
                aH.addRule(b, f)
            }
        } else {
            if (aH && typeof aL.createTextNode != aq) {
                aH.appendChild(aL.createTextNode(b + " {" + f + "}"))
            }
        }
    }

    function ay(a, c) {
        if (!aI) {
            return
        }
        var b = c ? "visible" : "hidden";
        if (ak && aS(a)) {
            aS(a).style.visibility = b
        } else {
            az("#" + a, "visibility:" + b)
        }
    }

    function ai(b) {
        var a = /[\\\"<>\.;]/;
        var c = a.exec(b) != null;
        return c && typeof encodeURIComponent != aq ? encodeURIComponent(b) : b
    }

    var aR = function () {
        if (ah.ie && ah.win) {
            window.attachEvent("onunload", function () {
                var a = al.length;
                for (var b = 0; b < a; b++) {
                    al[b][0].detachEvent(al[b][1], al[b][2])
                }
                var d = ag.length;
                for (var c = 0; c < d; c++) {
                    aw(ag[c])
                }
                for (var e in ah) {
                    ah[e] = null
                }
                ah = null;
                for (var f in swfobject) {
                    swfobject[f] = null
                }
                swfobject = null
            })
        }
    }();
    return {
        registerObject: function (a, e, c, b) {
            if (ah.w3 && a && e) {
                var d = {};
                d.id = a;
                d.swfVersion = e;
                d.expressInstall = c;
                d.callbackFn = b;
                aG[aG.length] = d;
                ay(a, false)
            } else {
                if (b) {
                    b({success: false, id: a})
                }
            }
        }, getObjectById: function (a) {
            if (ah.w3) {
                return av(a)
            }
        }, embedSWF: function (k, e, h, f, c, a, b, i, g, j) {
            var d = {success: false, id: e};
            if (ah.w3 && !(ah.wk && ah.wk < 312) && k && e && h && f && c) {
                ay(e, false);
                aj(function () {
                    h += "";
                    f += "";
                    var q = {};
                    if (g && typeof g === aD) {
                        for (var o in g) {
                            q[o] = g[o]
                        }
                    }
                    q.data = k;
                    q.width = h;
                    q.height = f;
                    var n = {};
                    if (i && typeof i === aD) {
                        for (var p in i) {
                            n[p] = i[p]
                        }
                    }
                    if (b && typeof b === aD) {
                        for (var l in b) {
                            if (typeof n.flashvars != aq) {
                                n.flashvars += "&" + l + "=" + b[l]
                            } else {
                                n.flashvars = l + "=" + b[l]
                            }
                        }
                    }
                    if (ao(c)) {
                        var m = aA(q, n, e);
                        if (q.id == e) {
                            ay(e, true)
                        }
                        d.success = true;
                        d.ref = m
                    } else {
                        if (a && au()) {
                            q.data = a;
                            ae(q, n, e, j);
                            return
                        } else {
                            ay(e, true)
                        }
                    }
                    if (j) {
                        j(d)
                    }
                })
            } else {
                if (j) {
                    j(d)
                }
            }
        }, switchOffAutoHideShow: function () {
            aI = false
        }, ua: ah, getFlashPlayerVersion: function () {
            return {major: ah.pv[0], minor: ah.pv[1], release: ah.pv[2]}
        }, hasFlashPlayerVersion: ao, createSWF: function (a, b, c) {
            if (ah.w3) {
                return aA(a, b, c)
            } else {
                return undefined
            }
        }, showExpressInstall: function (b, a, d, c) {
            if (ah.w3 && au()) {
                ae(b, a, d, c)
            }
        }, removeSWF: function (a) {
            if (ah.w3) {
                aw(a)
            }
        }, createCSS: function (b, a, c, d) {
            if (ah.w3) {
                az(b, a, c, d)
            }
        }, addDomLoadEvent: aj, addLoadEvent: aC, getQueryParamValue: function (b) {
            var a = aL.location.search || aL.location.hash;
            if (a) {
                if (/\?/.test(a)) {
                    a = a.split("?")[1]
                }
                if (b == null) {
                    return ai(a)
                }
                var c = a.split("&");
                for (var d = 0; d < c.length; d++) {
                    if (c[d].substring(0, c[d].indexOf("=")) == b) {
                        return ai(c[d].substring((c[d].indexOf("=") + 1)))
                    }
                }
            }
            return ""
        }, expressInstallCallback: function () {
            if (aU) {
                var a = aS(ac);
                if (a && aJ) {
                    a.parentNode.replaceChild(aJ, a);
                    if (ad) {
                        ay(ad, true);
                        if (ah.ie && ah.win) {
                            aJ.style.display = "block"
                        }
                    }
                    if (ap) {
                        ap(at)
                    }
                }
                aU = false
            }
        }
    }
}();
(function (a) {
    a.fn.NewsTicker = function (c) {
        var d = {width: 300, scrollspeed: 5000, waitingspeed: 3000, itemcount: 0, curritem: 0};
        d.itemcount = a(this).children().length;
        d.curritem = 0;
        function b(e, f) {
            e.children().css("display", "none");
            a(e.children()[f.curritem]).css("display", "block");
            if (f.curritem < (f.itemcount - 1)) {
                f.curritem++
            } else {
                f.curritem = 0
            }
            e.css("width", "0").animate({width: f.width}, f.scrollspeed, function () {
                e.NewsTicker(f)
            })
        }

        return this.each(function () {
            var e = d;
            if (c) {
                e = a.extend(d, c)
            }
            b(a(this), e)
        })
    }
})(jQuery);
var rotWidgets = jQuery([]);
jQuery(document).ready(function (b) {
    var a = jQuery.each(jQuery.map(jQuery(".rotator"), function (d, c) {
        return $(d).parent()[0]
    }), function (d, e) {
        rotWidgets.push({
            id: jQuery(e).data("id"),
            style: jQuery(e).data("style"),
            pause: jQuery(e).data("pause"),
            speed: jQuery(e).data("speed"),
            slideContent: jQuery(e).find("div.slides>div"),
            slideHolders: jQuery(e).find("div.rotate_slide"),
            pipHolder: jQuery(e).find("div.wprogress"),
            baseElement: jQuery(e),
            curSlide: 0,
            curSlideHolder: 0,
            curTimer: null
        });
        jQuery(rotWidgets.last()[0].slideHolders[0]).css({
            display: "block",
            position: "absolute",
            left: "0px",
            top: "0px"
        }).html(jQuery(rotWidgets.last()[0].slideContent[0]).html());
        var c = jQuery('<span class="rotator_pip_box"></span>');
        jQuery.each(rotWidgets.last()[0].slideContent, function (f, g) {
            c.append(jQuery('<div style="cursor:pointer;" class="rotator_pip' + ((f == 0) ? "_s" : "") + '" id="p_' + f + "_" + jQuery(e).data("id") + '">&nbsp;</div>'))
        });
        jQuery(rotWidgets.last()[0].pipHolder).append(c);
        rotWidgets.last()[0].curTimer = setInterval("processRotatorStep(" + (rotWidgets.length - 1) + ");", (rotWidgets.last()[0].pause * 1000) + (rotWidgets.last()[0].speed * 1000));
        processRotatorStep(rotWidgets.length - 1);
        rotWidgets.last()[0].pipHolder.data("rotatorIndex", d);
        rotWidgets.last()[0].pipHolder.delegate("div.rotator_pip", "click", function (h) {
            var i = this.id.split("_")[1];
            var g = jQuery(h.delegateTarget).data("rotatorIndex");
            var f = rotWidgets[g];
            if (parseInt(i) == (f.slideContent.length - 1)) {
                if (f.slideContent.length >= 2) {
                    f.curSlide = f.slideContent.length - 2
                } else {
                    f.curSlide = 0
                }
            } else {
                if (parseInt(i) == 0) {
                    f.curSlide = f.slideContent.length - 1
                } else {
                    f.curSlide = parseInt(i) - 1
                }
            }
            clearInterval(f.curTimer);
            f.curTimer = setInterval("processRotatorStep(" + g + ");", (f.pause * 1000) + (f.speed * 1000));
            processRotatorStep(g)
        })
    })
});
function processRotatorStep(a) {
    var c = jQuery(rotWidgets[a].slideHolders[rotWidgets[a].curSlideHolder]);
    var b = jQuery(rotWidgets[a].slideHolders[1 - rotWidgets[a].curSlideHolder]);
    c.stop();
    b.stop();
    rotWidgets[a].curSlide += 1;
    if (rotWidgets[a].curSlide == rotWidgets[a].slideContent.length) {
        rotWidgets[a].curSlide = 0
    }
    rotWidgets[a].curSlideHolder = 1 - rotWidgets[a].curSlideHolder;
    rotWidgets[a].baseElement.find("div.rotator_pip_s").removeClass("rotator_pip_s").addClass("rotator_pip");
    rotWidgets[a].baseElement.find("div.rotator_pip##p_" + rotWidgets[a].curSlide + "_" + rotWidgets[a].id).removeClass("rotator_pip").addClass("rotator_pip_s");
    b.css({display: "none"}).html(jQuery(rotWidgets[a].slideContent[rotWidgets[a].curSlide]).html());
    switch (rotWidgets[a].style) {
        case 1:
            b.css({display: "block", position: "absolute", left: b.width() + "px", top: "0px"});
            b.animate({left: "0px"}, rotWidgets[a].speed * 1000);
            c.animate({left: -b.width() + "px"}, rotWidgets[a].speed * 1000);
            break;
        case 2:
            b.css({display: "block", position: "absolute", left: -b.width() + "px", top: "0px"});
            b.animate({left: "0px"}, rotWidgets[a].speed * 1000);
            c.animate({left: b.width() + "px"}, rotWidgets[a].speed * 1000);
            break;
        case 3:
            b.css({display: "block", position: "absolute", left: "0px", top: -b.height() + "px"});
            b.animate({top: "0px"}, rotWidgets[a].speed * 1000);
            c.animate({top: b.height() + "px"}, rotWidgets[a].speed * 1000);
            break;
        case 4:
            b.css({display: "block", position: "absolute", left: "0px", top: b.height() + "px"});
            b.animate({top: "0px"}, rotWidgets[a].speed * 1000);
            c.animate({top: -b.height() + "px"}, rotWidgets[a].speed * 1000);
            break
    }
};